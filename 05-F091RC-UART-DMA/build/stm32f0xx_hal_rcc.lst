ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_RCC_DeInit:
  25              	.LFB40:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  27              		.loc 1 211 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get Start Tick*/
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  42              		.loc 1 215 15
  43 0006 FFF7FEFF 		bl	HAL_GetTick
  44 000a 0300     		movs	r3, r0
  45 000c 7B60     		str	r3, [r7, #4]
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  46              		.loc 1 218 3
  47 000e 374B     		ldr	r3, .L10
  48 0010 1A68     		ldr	r2, [r3]
  49 0012 364B     		ldr	r3, .L10
  50 0014 8121     		movs	r1, #129
  51 0016 0A43     		orrs	r2, r1
  52 0018 1A60     		str	r2, [r3]
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI is ready */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  53              		.loc 1 221 9
  54 001a 08E0     		b	.L2
  55              	.L4:
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 223 10
  57 001c FFF7FEFF 		bl	HAL_GetTick
  58 0020 0200     		movs	r2, r0
  59              		.loc 1 223 24
  60 0022 7B68     		ldr	r3, [r7, #4]
  61 0024 D31A     		subs	r3, r2, r3
  62              		.loc 1 223 8
  63 0026 022B     		cmp	r3, #2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 6


  64 0028 01D9     		bls	.L2
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 225 14
  66 002a 0323     		movs	r3, #3
  67 002c 5AE0     		b	.L3
  68              	.L2:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  69              		.loc 1 221 10
  70 002e 2F4B     		ldr	r3, .L10
  71 0030 1B68     		ldr	r3, [r3]
  72 0032 0222     		movs	r2, #2
  73 0034 1340     		ands	r3, r2
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  74              		.loc 1 221 9
  75 0036 F1D0     		beq	.L4
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  76              		.loc 1 230 3
  77 0038 2C4B     		ldr	r3, .L10
  78 003a 5A68     		ldr	r2, [r3, #4]
  79 003c 2B4B     		ldr	r3, .L10
  80 003e 2C49     		ldr	r1, .L10+4
  81 0040 0A40     		ands	r2, r1
  82 0042 5A60     		str	r2, [r3, #4]
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI as SYSCLK status is enabled */
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  83              		.loc 1 233 9
  84 0044 09E0     		b	.L5
  85              	.L6:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  86              		.loc 1 235 10
  87 0046 FFF7FEFF 		bl	HAL_GetTick
  88 004a 0200     		movs	r2, r0
  89              		.loc 1 235 24
  90 004c 7B68     		ldr	r3, [r7, #4]
  91 004e D31A     		subs	r3, r2, r3
  92              		.loc 1 235 8
  93 0050 284A     		ldr	r2, .L10+8
  94 0052 9342     		cmp	r3, r2
  95 0054 01D9     		bls	.L5
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
  96              		.loc 1 237 14
  97 0056 0323     		movs	r3, #3
  98 0058 44E0     		b	.L3
  99              	.L5:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 100              		.loc 1 233 10
 101 005a 244B     		ldr	r3, .L10
 102 005c 5B68     		ldr	r3, [r3, #4]
 103 005e 0C22     		movs	r2, #12
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 7


 104 0060 1340     		ands	r3, r2
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 105              		.loc 1 233 9
 106 0062 F0D1     		bne	.L6
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 107              		.loc 1 242 19
 108 0064 244B     		ldr	r3, .L10+12
 109 0066 254A     		ldr	r2, .L10+16
 110 0068 1A60     		str	r2, [r3]
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 111              		.loc 1 245 7
 112 006a 254B     		ldr	r3, .L10+20
 113 006c 1B68     		ldr	r3, [r3]
 114 006e 1800     		movs	r0, r3
 115 0070 FFF7FEFF 		bl	HAL_InitTick
 116 0074 031E     		subs	r3, r0, #0
 117              		.loc 1 245 6
 118 0076 01D0     		beq	.L7
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 119              		.loc 1 247 12
 120 0078 0123     		movs	r3, #1
 121 007a 33E0     		b	.L3
 122              	.L7:
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 123              		.loc 1 251 3
 124 007c 1B4B     		ldr	r3, .L10
 125 007e 1A68     		ldr	r2, [r3]
 126 0080 1A4B     		ldr	r3, .L10
 127 0082 2049     		ldr	r1, .L10+24
 128 0084 0A40     		ands	r2, r1
 129 0086 1A60     		str	r2, [r3]
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 130              		.loc 1 254 3
 131 0088 184B     		ldr	r3, .L10
 132 008a 1A68     		ldr	r2, [r3]
 133 008c 174B     		ldr	r3, .L10
 134 008e 1E49     		ldr	r1, .L10+28
 135 0090 0A40     		ands	r2, r1
 136 0092 1A60     		str	r2, [r3]
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get start tick */
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 137              		.loc 1 257 15
 138 0094 FFF7FEFF 		bl	HAL_GetTick
 139 0098 0300     		movs	r3, r0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 8


 140 009a 7B60     		str	r3, [r7, #4]
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till PLLRDY is cleared */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 141              		.loc 1 260 8
 142 009c 08E0     		b	.L8
 143              	.L9:
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 144              		.loc 1 262 9
 145 009e FFF7FEFF 		bl	HAL_GetTick
 146 00a2 0200     		movs	r2, r0
 147              		.loc 1 262 23
 148 00a4 7B68     		ldr	r3, [r7, #4]
 149 00a6 D31A     		subs	r3, r2, r3
 150              		.loc 1 262 7
 151 00a8 022B     		cmp	r3, #2
 152 00aa 01D9     		bls	.L8
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
 153              		.loc 1 264 14
 154 00ac 0323     		movs	r3, #3
 155 00ae 19E0     		b	.L3
 156              	.L8:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 157              		.loc 1 260 9
 158 00b0 0E4B     		ldr	r3, .L10
 159 00b2 1A68     		ldr	r2, [r3]
 160 00b4 8023     		movs	r3, #128
 161 00b6 9B04     		lsls	r3, r3, #18
 162 00b8 1340     		ands	r3, r2
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 163              		.loc 1 260 8
 164 00ba F0D1     		bne	.L9
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 165              		.loc 1 269 3
 166 00bc 0B4B     		ldr	r3, .L10
 167 00be 0022     		movs	r2, #0
 168 00c0 5A60     		str	r2, [r3, #4]
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 169              		.loc 1 272 3
 170 00c2 0A4B     		ldr	r3, .L10
 171 00c4 0022     		movs	r2, #0
 172 00c6 DA62     		str	r2, [r3, #44]
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 173              		.loc 1 275 3
 174 00c8 084B     		ldr	r3, .L10
 175 00ca 0022     		movs	r2, #0
 176 00cc 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 9


 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 177              		.loc 1 278 3
 178 00ce 074B     		ldr	r3, .L10
 179 00d0 0022     		movs	r2, #0
 180 00d2 9A60     		str	r2, [r3, #8]
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Clear all reset flags */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 181              		.loc 1 281 3
 182 00d4 054B     		ldr	r3, .L10
 183 00d6 5A6A     		ldr	r2, [r3, #36]
 184 00d8 044B     		ldr	r3, .L10
 185 00da 8021     		movs	r1, #128
 186 00dc 4904     		lsls	r1, r1, #17
 187 00de 0A43     		orrs	r2, r1
 188 00e0 5A62     		str	r2, [r3, #36]
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 189              		.loc 1 283 10
 190 00e2 0023     		movs	r3, #0
 191              	.L3:
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 192              		.loc 1 284 1
 193 00e4 1800     		movs	r0, r3
 194 00e6 BD46     		mov	sp, r7
 195 00e8 02B0     		add	sp, sp, #8
 196              		@ sp needed
 197 00ea 80BD     		pop	{r7, pc}
 198              	.L11:
 199              		.align	2
 200              	.L10:
 201 00ec 00100240 		.word	1073876992
 202 00f0 0CF8FFF0 		.word	-251660276
 203 00f4 88130000 		.word	5000
 204 00f8 00000000 		.word	SystemCoreClock
 205 00fc 00127A00 		.word	8000000
 206 0100 00000000 		.word	uwTickPrio
 207 0104 FFFFF6FE 		.word	-17367041
 208 0108 FFFFFBFF 		.word	-262145
 209              		.cfi_endproc
 210              	.LFE40:
 212              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_RCC_OscConfig
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	HAL_RCC_OscConfig:
 221              	.LFB41:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 10


 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 222              		.loc 1 301 1
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 32
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 88B0     		sub	sp, sp, #32
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              	.LCFI5:
 236              		.cfi_def_cfa_register 7
 237 0006 7860     		str	r0, [r7, #4]
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config;
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config2;
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 238              		.loc 1 307 5
 239 0008 7B68     		ldr	r3, [r7, #4]
 240 000a 002B     		cmp	r3, #0
 241 000c 02D1     		bne	.L13
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 242              		.loc 1 309 12
 243 000e 0123     		movs	r3, #1
 244 0010 00F076FB 		bl	.L14	@ far jump
 245              	.L13:
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 246              		.loc 1 316 25
 247 0014 7B68     		ldr	r3, [r7, #4]
 248 0016 1B68     		ldr	r3, [r3]
 249              		.loc 1 316 43
 250 0018 0122     		movs	r2, #1
 251 001a 1340     		ands	r3, r2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 11


 252              		.loc 1 316 5
 253 001c 00D1     		bne	.LCB200
 254 001e 8EE0     		b	.L15	@long jump
 255              	.LCB200:
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 256              		.loc 1 322 9
 257 0020 C54B     		ldr	r3, .L87
 258 0022 5B68     		ldr	r3, [r3, #4]
 259 0024 0C22     		movs	r2, #12
 260 0026 1340     		ands	r3, r2
 261              		.loc 1 322 7
 262 0028 042B     		cmp	r3, #4
 263 002a 0ED0     		beq	.L16
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 264              		.loc 1 323 13
 265 002c C24B     		ldr	r3, .L87
 266 002e 5B68     		ldr	r3, [r3, #4]
 267 0030 0C22     		movs	r2, #12
 268 0032 1340     		ands	r3, r2
 269              		.loc 1 323 8
 270 0034 082B     		cmp	r3, #8
 271 0036 17D1     		bne	.L17
 272              		.loc 1 323 82 discriminator 1
 273 0038 BF4B     		ldr	r3, .L87
 274 003a 5A68     		ldr	r2, [r3, #4]
 275 003c C023     		movs	r3, #192
 276 003e 5B02     		lsls	r3, r3, #9
 277 0040 1A40     		ands	r2, r3
 278              		.loc 1 323 78 discriminator 1
 279 0042 8023     		movs	r3, #128
 280 0044 5B02     		lsls	r3, r3, #9
 281 0046 9A42     		cmp	r2, r3
 282 0048 0ED1     		bne	.L17
 283              	.L16:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 284              		.loc 1 325 11
 285 004a BB4B     		ldr	r3, .L87
 286 004c 1A68     		ldr	r2, [r3]
 287 004e 8023     		movs	r3, #128
 288 0050 9B02     		lsls	r3, r3, #10
 289 0052 1340     		ands	r3, r2
 290              		.loc 1 325 9
 291 0054 00D1     		bne	.LCB229
 292 0056 71E0     		b	.L85	@long jump
 293              	.LCB229:
 294              		.loc 1 325 78 discriminator 1
 295 0058 7B68     		ldr	r3, [r7, #4]
 296 005a 5B68     		ldr	r3, [r3, #4]
 297              		.loc 1 325 57 discriminator 1
 298 005c 002B     		cmp	r3, #0
 299 005e 00D0     		beq	.LCB233
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 12


 300 0060 6CE0     		b	.L85	@long jump
 301              	.LCB233:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 302              		.loc 1 327 16
 303 0062 0123     		movs	r3, #1
 304 0064 00F04CFB 		bl	.L14	@ far jump
 305              	.L17:
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 306              		.loc 1 333 7
 307 0068 7B68     		ldr	r3, [r7, #4]
 308 006a 5B68     		ldr	r3, [r3, #4]
 309 006c 012B     		cmp	r3, #1
 310 006e 07D1     		bne	.L19
 311              		.loc 1 333 7 is_stmt 0 discriminator 1
 312 0070 B14B     		ldr	r3, .L87
 313 0072 1A68     		ldr	r2, [r3]
 314 0074 B04B     		ldr	r3, .L87
 315 0076 8021     		movs	r1, #128
 316 0078 4902     		lsls	r1, r1, #9
 317 007a 0A43     		orrs	r2, r1
 318 007c 1A60     		str	r2, [r3]
 319 007e 2FE0     		b	.L20
 320              	.L19:
 321              		.loc 1 333 7 discriminator 2
 322 0080 7B68     		ldr	r3, [r7, #4]
 323 0082 5B68     		ldr	r3, [r3, #4]
 324 0084 002B     		cmp	r3, #0
 325 0086 0CD1     		bne	.L21
 326              		.loc 1 333 7 discriminator 3
 327 0088 AB4B     		ldr	r3, .L87
 328 008a 1A68     		ldr	r2, [r3]
 329 008c AA4B     		ldr	r3, .L87
 330 008e AB49     		ldr	r1, .L87+4
 331 0090 0A40     		ands	r2, r1
 332 0092 1A60     		str	r2, [r3]
 333 0094 A84B     		ldr	r3, .L87
 334 0096 1A68     		ldr	r2, [r3]
 335 0098 A74B     		ldr	r3, .L87
 336 009a A949     		ldr	r1, .L87+8
 337 009c 0A40     		ands	r2, r1
 338 009e 1A60     		str	r2, [r3]
 339 00a0 1EE0     		b	.L20
 340              	.L21:
 341              		.loc 1 333 7 discriminator 4
 342 00a2 7B68     		ldr	r3, [r7, #4]
 343 00a4 5B68     		ldr	r3, [r3, #4]
 344 00a6 052B     		cmp	r3, #5
 345 00a8 0ED1     		bne	.L22
 346              		.loc 1 333 7 discriminator 5
 347 00aa A34B     		ldr	r3, .L87
 348 00ac 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 13


 349 00ae A24B     		ldr	r3, .L87
 350 00b0 8021     		movs	r1, #128
 351 00b2 C902     		lsls	r1, r1, #11
 352 00b4 0A43     		orrs	r2, r1
 353 00b6 1A60     		str	r2, [r3]
 354 00b8 9F4B     		ldr	r3, .L87
 355 00ba 1A68     		ldr	r2, [r3]
 356 00bc 9E4B     		ldr	r3, .L87
 357 00be 8021     		movs	r1, #128
 358 00c0 4902     		lsls	r1, r1, #9
 359 00c2 0A43     		orrs	r2, r1
 360 00c4 1A60     		str	r2, [r3]
 361 00c6 0BE0     		b	.L20
 362              	.L22:
 363              		.loc 1 333 7 discriminator 6
 364 00c8 9B4B     		ldr	r3, .L87
 365 00ca 1A68     		ldr	r2, [r3]
 366 00cc 9A4B     		ldr	r3, .L87
 367 00ce 9B49     		ldr	r1, .L87+4
 368 00d0 0A40     		ands	r2, r1
 369 00d2 1A60     		str	r2, [r3]
 370 00d4 984B     		ldr	r3, .L87
 371 00d6 1A68     		ldr	r2, [r3]
 372 00d8 974B     		ldr	r3, .L87
 373 00da 9949     		ldr	r1, .L87+8
 374 00dc 0A40     		ands	r2, r1
 375 00de 1A60     		str	r2, [r3]
 376              	.L20:
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 377              		.loc 1 337 27 is_stmt 1
 378 00e0 7B68     		ldr	r3, [r7, #4]
 379 00e2 5B68     		ldr	r3, [r3, #4]
 380              		.loc 1 337 9
 381 00e4 002B     		cmp	r3, #0
 382 00e6 14D0     		beq	.L23
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 383              		.loc 1 340 21
 384 00e8 FFF7FEFF 		bl	HAL_GetTick
 385 00ec 0300     		movs	r3, r0
 386 00ee BB61     		str	r3, [r7, #24]
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 387              		.loc 1 343 14
 388 00f0 08E0     		b	.L24
 389              	.L25:
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 390              		.loc 1 345 15
 391 00f2 FFF7FEFF 		bl	HAL_GetTick
 392 00f6 0200     		movs	r2, r0
 393              		.loc 1 345 29
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 14


 394 00f8 BB69     		ldr	r3, [r7, #24]
 395 00fa D31A     		subs	r3, r2, r3
 396              		.loc 1 345 13
 397 00fc 642B     		cmp	r3, #100
 398 00fe 01D9     		bls	.L24
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 399              		.loc 1 347 20
 400 0100 0323     		movs	r3, #3
 401 0102 FDE2     		b	.L14
 402              	.L24:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 403              		.loc 1 343 15
 404 0104 8C4B     		ldr	r3, .L87
 405 0106 1A68     		ldr	r2, [r3]
 406 0108 8023     		movs	r3, #128
 407 010a 9B02     		lsls	r3, r3, #10
 408 010c 1340     		ands	r3, r2
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 409              		.loc 1 343 14
 410 010e F0D0     		beq	.L25
 411 0110 15E0     		b	.L15
 412              	.L23:
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 413              		.loc 1 354 21
 414 0112 FFF7FEFF 		bl	HAL_GetTick
 415 0116 0300     		movs	r3, r0
 416 0118 BB61     		str	r3, [r7, #24]
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 417              		.loc 1 357 14
 418 011a 08E0     		b	.L26
 419              	.L27:
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 420              		.loc 1 359 16
 421 011c FFF7FEFF 		bl	HAL_GetTick
 422 0120 0200     		movs	r2, r0
 423              		.loc 1 359 30
 424 0122 BB69     		ldr	r3, [r7, #24]
 425 0124 D31A     		subs	r3, r2, r3
 426              		.loc 1 359 14
 427 0126 642B     		cmp	r3, #100
 428 0128 01D9     		bls	.L26
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 429              		.loc 1 361 20
 430 012a 0323     		movs	r3, #3
 431 012c E8E2     		b	.L14
 432              	.L26:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 15


 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 433              		.loc 1 357 15
 434 012e 824B     		ldr	r3, .L87
 435 0130 1A68     		ldr	r2, [r3]
 436 0132 8023     		movs	r3, #128
 437 0134 9B02     		lsls	r3, r3, #10
 438 0136 1340     		ands	r3, r2
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 439              		.loc 1 357 14
 440 0138 F0D1     		bne	.L27
 441 013a 00E0     		b	.L15
 442              	.L85:
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 443              		.loc 1 325 9
 444 013c C046     		nop
 445              	.L15:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 446              		.loc 1 368 25
 447 013e 7B68     		ldr	r3, [r7, #4]
 448 0140 1B68     		ldr	r3, [r3]
 449              		.loc 1 368 43
 450 0142 0222     		movs	r2, #2
 451 0144 1340     		ands	r3, r2
 452              		.loc 1 368 5
 453 0146 00D1     		bne	.LCB380
 454 0148 6CE0     		b	.L28	@long jump
 455              	.LCB380:
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 456              		.loc 1 375 9
 457 014a 7B4B     		ldr	r3, .L87
 458 014c 5B68     		ldr	r3, [r3, #4]
 459 014e 0C22     		movs	r2, #12
 460 0150 1340     		ands	r3, r2
 461              		.loc 1 375 7
 462 0152 0ED0     		beq	.L29
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 463              		.loc 1 376 13
 464 0154 784B     		ldr	r3, .L87
 465 0156 5B68     		ldr	r3, [r3, #4]
 466 0158 0C22     		movs	r2, #12
 467 015a 1340     		ands	r3, r2
 468              		.loc 1 376 8
 469 015c 082B     		cmp	r3, #8
 470 015e 1FD1     		bne	.L30
 471              		.loc 1 376 82 discriminator 1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 16


 472 0160 754B     		ldr	r3, .L87
 473 0162 5A68     		ldr	r2, [r3, #4]
 474 0164 C023     		movs	r3, #192
 475 0166 5B02     		lsls	r3, r3, #9
 476 0168 1A40     		ands	r2, r3
 477              		.loc 1 376 78 discriminator 1
 478 016a 8023     		movs	r3, #128
 479 016c 1B02     		lsls	r3, r3, #8
 480 016e 9A42     		cmp	r2, r3
 481 0170 16D1     		bne	.L30
 482              	.L29:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 483              		.loc 1 379 11
 484 0172 714B     		ldr	r3, .L87
 485 0174 1B68     		ldr	r3, [r3]
 486 0176 0222     		movs	r2, #2
 487 0178 1340     		ands	r3, r2
 488              		.loc 1 379 9
 489 017a 05D0     		beq	.L31
 490              		.loc 1 379 78 discriminator 1
 491 017c 7B68     		ldr	r3, [r7, #4]
 492 017e DB68     		ldr	r3, [r3, #12]
 493              		.loc 1 379 57 discriminator 1
 494 0180 012B     		cmp	r3, #1
 495 0182 01D0     		beq	.L31
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 496              		.loc 1 381 16
 497 0184 0123     		movs	r3, #1
 498 0186 BBE2     		b	.L14
 499              	.L31:
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 500              		.loc 1 387 9
 501 0188 6B4B     		ldr	r3, .L87
 502 018a 1B68     		ldr	r3, [r3]
 503 018c F822     		movs	r2, #248
 504 018e 9343     		bics	r3, r2
 505 0190 1900     		movs	r1, r3
 506 0192 7B68     		ldr	r3, [r7, #4]
 507 0194 1B69     		ldr	r3, [r3, #16]
 508 0196 DA00     		lsls	r2, r3, #3
 509 0198 674B     		ldr	r3, .L87
 510 019a 0A43     		orrs	r2, r1
 511 019c 1A60     		str	r2, [r3]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 512              		.loc 1 379 9
 513 019e 41E0     		b	.L28
 514              	.L30:
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 17


 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 515              		.loc 1 393 27
 516 01a0 7B68     		ldr	r3, [r7, #4]
 517 01a2 DB68     		ldr	r3, [r3, #12]
 518              		.loc 1 393 9
 519 01a4 002B     		cmp	r3, #0
 520 01a6 24D0     		beq	.L32
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 521              		.loc 1 396 9
 522 01a8 634B     		ldr	r3, .L87
 523 01aa 1A68     		ldr	r2, [r3]
 524 01ac 624B     		ldr	r3, .L87
 525 01ae 0121     		movs	r1, #1
 526 01b0 0A43     		orrs	r2, r1
 527 01b2 1A60     		str	r2, [r3]
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 528              		.loc 1 399 21
 529 01b4 FFF7FEFF 		bl	HAL_GetTick
 530 01b8 0300     		movs	r3, r0
 531 01ba BB61     		str	r3, [r7, #24]
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 532              		.loc 1 402 14
 533 01bc 08E0     		b	.L33
 534              	.L34:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 535              		.loc 1 404 15
 536 01be FFF7FEFF 		bl	HAL_GetTick
 537 01c2 0200     		movs	r2, r0
 538              		.loc 1 404 29
 539 01c4 BB69     		ldr	r3, [r7, #24]
 540 01c6 D31A     		subs	r3, r2, r3
 541              		.loc 1 404 13
 542 01c8 022B     		cmp	r3, #2
 543 01ca 01D9     		bls	.L33
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 544              		.loc 1 406 20
 545 01cc 0323     		movs	r3, #3
 546 01ce 97E2     		b	.L14
 547              	.L33:
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 548              		.loc 1 402 15
 549 01d0 594B     		ldr	r3, .L87
 550 01d2 1B68     		ldr	r3, [r3]
 551 01d4 0222     		movs	r2, #2
 552 01d6 1340     		ands	r3, r2
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 18


 553              		.loc 1 402 14
 554 01d8 F1D0     		beq	.L34
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 555              		.loc 1 411 9
 556 01da 574B     		ldr	r3, .L87
 557 01dc 1B68     		ldr	r3, [r3]
 558 01de F822     		movs	r2, #248
 559 01e0 9343     		bics	r3, r2
 560 01e2 1900     		movs	r1, r3
 561 01e4 7B68     		ldr	r3, [r7, #4]
 562 01e6 1B69     		ldr	r3, [r3, #16]
 563 01e8 DA00     		lsls	r2, r3, #3
 564 01ea 534B     		ldr	r3, .L87
 565 01ec 0A43     		orrs	r2, r1
 566 01ee 1A60     		str	r2, [r3]
 567 01f0 18E0     		b	.L28
 568              	.L32:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 569              		.loc 1 416 9
 570 01f2 514B     		ldr	r3, .L87
 571 01f4 1A68     		ldr	r2, [r3]
 572 01f6 504B     		ldr	r3, .L87
 573 01f8 0121     		movs	r1, #1
 574 01fa 8A43     		bics	r2, r1
 575 01fc 1A60     		str	r2, [r3]
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 576              		.loc 1 419 21
 577 01fe FFF7FEFF 		bl	HAL_GetTick
 578 0202 0300     		movs	r3, r0
 579 0204 BB61     		str	r3, [r7, #24]
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 580              		.loc 1 422 14
 581 0206 08E0     		b	.L35
 582              	.L36:
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 583              		.loc 1 424 15
 584 0208 FFF7FEFF 		bl	HAL_GetTick
 585 020c 0200     		movs	r2, r0
 586              		.loc 1 424 29
 587 020e BB69     		ldr	r3, [r7, #24]
 588 0210 D31A     		subs	r3, r2, r3
 589              		.loc 1 424 13
 590 0212 022B     		cmp	r3, #2
 591 0214 01D9     		bls	.L35
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 19


 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 592              		.loc 1 426 20
 593 0216 0323     		movs	r3, #3
 594 0218 72E2     		b	.L14
 595              	.L35:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 596              		.loc 1 422 15
 597 021a 474B     		ldr	r3, .L87
 598 021c 1B68     		ldr	r3, [r3]
 599 021e 0222     		movs	r2, #2
 600 0220 1340     		ands	r3, r2
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 601              		.loc 1 422 14
 602 0222 F1D1     		bne	.L36
 603              	.L28:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 604              		.loc 1 433 25
 605 0224 7B68     		ldr	r3, [r7, #4]
 606 0226 1B68     		ldr	r3, [r3]
 607              		.loc 1 433 43
 608 0228 0822     		movs	r2, #8
 609 022a 1340     		ands	r3, r2
 610              		.loc 1 433 5
 611 022c 36D0     		beq	.L37
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 612              		.loc 1 439 25
 613 022e 7B68     		ldr	r3, [r7, #4]
 614 0230 DB69     		ldr	r3, [r3, #28]
 615              		.loc 1 439 7
 616 0232 002B     		cmp	r3, #0
 617 0234 19D0     		beq	.L38
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 618              		.loc 1 442 7
 619 0236 404B     		ldr	r3, .L87
 620 0238 5A6A     		ldr	r2, [r3, #36]
 621 023a 3F4B     		ldr	r3, .L87
 622 023c 0121     		movs	r1, #1
 623 023e 0A43     		orrs	r2, r1
 624 0240 5A62     		str	r2, [r3, #36]
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 625              		.loc 1 445 19
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 20


 626 0242 FFF7FEFF 		bl	HAL_GetTick
 627 0246 0300     		movs	r3, r0
 628 0248 BB61     		str	r3, [r7, #24]
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 629              		.loc 1 448 12
 630 024a 08E0     		b	.L39
 631              	.L40:
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 632              		.loc 1 450 13
 633 024c FFF7FEFF 		bl	HAL_GetTick
 634 0250 0200     		movs	r2, r0
 635              		.loc 1 450 27
 636 0252 BB69     		ldr	r3, [r7, #24]
 637 0254 D31A     		subs	r3, r2, r3
 638              		.loc 1 450 11
 639 0256 022B     		cmp	r3, #2
 640 0258 01D9     		bls	.L39
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 641              		.loc 1 452 18
 642 025a 0323     		movs	r3, #3
 643 025c 50E2     		b	.L14
 644              	.L39:
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 645              		.loc 1 448 13
 646 025e 364B     		ldr	r3, .L87
 647 0260 5B6A     		ldr	r3, [r3, #36]
 648 0262 0222     		movs	r2, #2
 649 0264 1340     		ands	r3, r2
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 650              		.loc 1 448 12
 651 0266 F1D0     		beq	.L40
 652 0268 18E0     		b	.L37
 653              	.L38:
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 654              		.loc 1 459 7
 655 026a 334B     		ldr	r3, .L87
 656 026c 5A6A     		ldr	r2, [r3, #36]
 657 026e 324B     		ldr	r3, .L87
 658 0270 0121     		movs	r1, #1
 659 0272 8A43     		bics	r2, r1
 660 0274 5A62     		str	r2, [r3, #36]
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 661              		.loc 1 462 19
 662 0276 FFF7FEFF 		bl	HAL_GetTick
 663 027a 0300     		movs	r3, r0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 21


 664 027c BB61     		str	r3, [r7, #24]
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 665              		.loc 1 465 12
 666 027e 08E0     		b	.L41
 667              	.L42:
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 668              		.loc 1 467 13
 669 0280 FFF7FEFF 		bl	HAL_GetTick
 670 0284 0200     		movs	r2, r0
 671              		.loc 1 467 27
 672 0286 BB69     		ldr	r3, [r7, #24]
 673 0288 D31A     		subs	r3, r2, r3
 674              		.loc 1 467 11
 675 028a 022B     		cmp	r3, #2
 676 028c 01D9     		bls	.L41
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 677              		.loc 1 469 18
 678 028e 0323     		movs	r3, #3
 679 0290 36E2     		b	.L14
 680              	.L41:
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 681              		.loc 1 465 13
 682 0292 294B     		ldr	r3, .L87
 683 0294 5B6A     		ldr	r3, [r3, #36]
 684 0296 0222     		movs	r2, #2
 685 0298 1340     		ands	r3, r2
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 686              		.loc 1 465 12
 687 029a F1D1     		bne	.L42
 688              	.L37:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 689              		.loc 1 475 25
 690 029c 7B68     		ldr	r3, [r7, #4]
 691 029e 1B68     		ldr	r3, [r3]
 692              		.loc 1 475 43
 693 02a0 0422     		movs	r2, #4
 694 02a2 1340     		ands	r3, r2
 695              		.loc 1 475 5
 696 02a4 00D1     		bne	.LCB593
 697 02a6 B5E0     		b	.L43	@long jump
 698              	.LCB593:
 699              	.LBB2:
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 700              		.loc 1 477 22
 701 02a8 1F20     		movs	r0, #31
 702 02aa 3B18     		adds	r3, r7, r0
 703 02ac 0022     		movs	r2, #0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 22


 704 02ae 1A70     		strb	r2, [r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 705              		.loc 1 484 8
 706 02b0 214B     		ldr	r3, .L87
 707 02b2 DA69     		ldr	r2, [r3, #28]
 708 02b4 8023     		movs	r3, #128
 709 02b6 5B05     		lsls	r3, r3, #21
 710 02b8 1340     		ands	r3, r2
 711              		.loc 1 484 7
 712 02ba 10D1     		bne	.L44
 713              	.LBB3:
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 714              		.loc 1 486 7
 715 02bc 1E4B     		ldr	r3, .L87
 716 02be DA69     		ldr	r2, [r3, #28]
 717 02c0 1D4B     		ldr	r3, .L87
 718 02c2 8021     		movs	r1, #128
 719 02c4 4905     		lsls	r1, r1, #21
 720 02c6 0A43     		orrs	r2, r1
 721 02c8 DA61     		str	r2, [r3, #28]
 722 02ca 1B4B     		ldr	r3, .L87
 723 02cc DA69     		ldr	r2, [r3, #28]
 724 02ce 8023     		movs	r3, #128
 725 02d0 5B05     		lsls	r3, r3, #21
 726 02d2 1340     		ands	r3, r2
 727 02d4 FB60     		str	r3, [r7, #12]
 728 02d6 FB68     		ldr	r3, [r7, #12]
 729              	.LBE3:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 730              		.loc 1 487 21
 731 02d8 3B18     		adds	r3, r7, r0
 732 02da 0122     		movs	r2, #1
 733 02dc 1A70     		strb	r2, [r3]
 734              	.L44:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 735              		.loc 1 490 8
 736 02de 194B     		ldr	r3, .L87+12
 737 02e0 1A68     		ldr	r2, [r3]
 738 02e2 8023     		movs	r3, #128
 739 02e4 5B00     		lsls	r3, r3, #1
 740 02e6 1340     		ands	r3, r2
 741              		.loc 1 490 7
 742 02e8 1AD1     		bne	.L45
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 743              		.loc 1 493 7
 744 02ea 164B     		ldr	r3, .L87+12
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 23


 745 02ec 1A68     		ldr	r2, [r3]
 746 02ee 154B     		ldr	r3, .L87+12
 747 02f0 8021     		movs	r1, #128
 748 02f2 4900     		lsls	r1, r1, #1
 749 02f4 0A43     		orrs	r2, r1
 750 02f6 1A60     		str	r2, [r3]
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 751              		.loc 1 496 19
 752 02f8 FFF7FEFF 		bl	HAL_GetTick
 753 02fc 0300     		movs	r3, r0
 754 02fe BB61     		str	r3, [r7, #24]
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 755              		.loc 1 498 12
 756 0300 08E0     		b	.L46
 757              	.L47:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 758              		.loc 1 500 13
 759 0302 FFF7FEFF 		bl	HAL_GetTick
 760 0306 0200     		movs	r2, r0
 761              		.loc 1 500 27
 762 0308 BB69     		ldr	r3, [r7, #24]
 763 030a D31A     		subs	r3, r2, r3
 764              		.loc 1 500 11
 765 030c 642B     		cmp	r3, #100
 766 030e 01D9     		bls	.L46
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 767              		.loc 1 502 18
 768 0310 0323     		movs	r3, #3
 769 0312 F5E1     		b	.L14
 770              	.L46:
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 771              		.loc 1 498 13
 772 0314 0B4B     		ldr	r3, .L87+12
 773 0316 1A68     		ldr	r2, [r3]
 774 0318 8023     		movs	r3, #128
 775 031a 5B00     		lsls	r3, r3, #1
 776 031c 1340     		ands	r3, r2
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 777              		.loc 1 498 12
 778 031e F0D0     		beq	.L47
 779              	.L45:
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 780              		.loc 1 508 5
 781 0320 7B68     		ldr	r3, [r7, #4]
 782 0322 9B68     		ldr	r3, [r3, #8]
 783 0324 012B     		cmp	r3, #1
 784 0326 0FD1     		bne	.L48
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 24


 785              		.loc 1 508 5 is_stmt 0 discriminator 1
 786 0328 034B     		ldr	r3, .L87
 787 032a 1A6A     		ldr	r2, [r3, #32]
 788 032c 024B     		ldr	r3, .L87
 789 032e 0121     		movs	r1, #1
 790 0330 0A43     		orrs	r2, r1
 791 0332 1A62     		str	r2, [r3, #32]
 792 0334 36E0     		b	.L49
 793              	.L88:
 794 0336 C046     		.align	2
 795              	.L87:
 796 0338 00100240 		.word	1073876992
 797 033c FFFFFEFF 		.word	-65537
 798 0340 FFFFFBFF 		.word	-262145
 799 0344 00700040 		.word	1073770496
 800              	.L48:
 801              		.loc 1 508 5 discriminator 2
 802 0348 7B68     		ldr	r3, [r7, #4]
 803 034a 9B68     		ldr	r3, [r3, #8]
 804 034c 002B     		cmp	r3, #0
 805 034e 0CD1     		bne	.L50
 806              		.loc 1 508 5 discriminator 3
 807 0350 CA4B     		ldr	r3, .L89
 808 0352 1A6A     		ldr	r2, [r3, #32]
 809 0354 C94B     		ldr	r3, .L89
 810 0356 0121     		movs	r1, #1
 811 0358 8A43     		bics	r2, r1
 812 035a 1A62     		str	r2, [r3, #32]
 813 035c C74B     		ldr	r3, .L89
 814 035e 1A6A     		ldr	r2, [r3, #32]
 815 0360 C64B     		ldr	r3, .L89
 816 0362 0421     		movs	r1, #4
 817 0364 8A43     		bics	r2, r1
 818 0366 1A62     		str	r2, [r3, #32]
 819 0368 1CE0     		b	.L49
 820              	.L50:
 821              		.loc 1 508 5 discriminator 4
 822 036a 7B68     		ldr	r3, [r7, #4]
 823 036c 9B68     		ldr	r3, [r3, #8]
 824 036e 052B     		cmp	r3, #5
 825 0370 0CD1     		bne	.L51
 826              		.loc 1 508 5 discriminator 5
 827 0372 C24B     		ldr	r3, .L89
 828 0374 1A6A     		ldr	r2, [r3, #32]
 829 0376 C14B     		ldr	r3, .L89
 830 0378 0421     		movs	r1, #4
 831 037a 0A43     		orrs	r2, r1
 832 037c 1A62     		str	r2, [r3, #32]
 833 037e BF4B     		ldr	r3, .L89
 834 0380 1A6A     		ldr	r2, [r3, #32]
 835 0382 BE4B     		ldr	r3, .L89
 836 0384 0121     		movs	r1, #1
 837 0386 0A43     		orrs	r2, r1
 838 0388 1A62     		str	r2, [r3, #32]
 839 038a 0BE0     		b	.L49
 840              	.L51:
 841              		.loc 1 508 5 discriminator 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 25


 842 038c BB4B     		ldr	r3, .L89
 843 038e 1A6A     		ldr	r2, [r3, #32]
 844 0390 BA4B     		ldr	r3, .L89
 845 0392 0121     		movs	r1, #1
 846 0394 8A43     		bics	r2, r1
 847 0396 1A62     		str	r2, [r3, #32]
 848 0398 B84B     		ldr	r3, .L89
 849 039a 1A6A     		ldr	r2, [r3, #32]
 850 039c B74B     		ldr	r3, .L89
 851 039e 0421     		movs	r1, #4
 852 03a0 8A43     		bics	r2, r1
 853 03a2 1A62     		str	r2, [r3, #32]
 854              	.L49:
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 855              		.loc 1 510 25 is_stmt 1
 856 03a4 7B68     		ldr	r3, [r7, #4]
 857 03a6 9B68     		ldr	r3, [r3, #8]
 858              		.loc 1 510 7
 859 03a8 002B     		cmp	r3, #0
 860 03aa 14D0     		beq	.L52
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 861              		.loc 1 513 19
 862 03ac FFF7FEFF 		bl	HAL_GetTick
 863 03b0 0300     		movs	r3, r0
 864 03b2 BB61     		str	r3, [r7, #24]
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 865              		.loc 1 516 12
 866 03b4 09E0     		b	.L53
 867              	.L54:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 868              		.loc 1 518 13
 869 03b6 FFF7FEFF 		bl	HAL_GetTick
 870 03ba 0200     		movs	r2, r0
 871              		.loc 1 518 27
 872 03bc BB69     		ldr	r3, [r7, #24]
 873 03be D31A     		subs	r3, r2, r3
 874              		.loc 1 518 11
 875 03c0 AF4A     		ldr	r2, .L89+4
 876 03c2 9342     		cmp	r3, r2
 877 03c4 01D9     		bls	.L53
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 878              		.loc 1 520 18
 879 03c6 0323     		movs	r3, #3
 880 03c8 9AE1     		b	.L14
 881              	.L53:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 882              		.loc 1 516 13
 883 03ca AC4B     		ldr	r3, .L89
 884 03cc 1B6A     		ldr	r3, [r3, #32]
 885 03ce 0222     		movs	r2, #2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 26


 886 03d0 1340     		ands	r3, r2
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 887              		.loc 1 516 12
 888 03d2 F0D0     		beq	.L54
 889 03d4 13E0     		b	.L55
 890              	.L52:
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 891              		.loc 1 527 19
 892 03d6 FFF7FEFF 		bl	HAL_GetTick
 893 03da 0300     		movs	r3, r0
 894 03dc BB61     		str	r3, [r7, #24]
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 895              		.loc 1 530 12
 896 03de 09E0     		b	.L56
 897              	.L57:
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 898              		.loc 1 532 13
 899 03e0 FFF7FEFF 		bl	HAL_GetTick
 900 03e4 0200     		movs	r2, r0
 901              		.loc 1 532 27
 902 03e6 BB69     		ldr	r3, [r7, #24]
 903 03e8 D31A     		subs	r3, r2, r3
 904              		.loc 1 532 11
 905 03ea A54A     		ldr	r2, .L89+4
 906 03ec 9342     		cmp	r3, r2
 907 03ee 01D9     		bls	.L56
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 908              		.loc 1 534 18
 909 03f0 0323     		movs	r3, #3
 910 03f2 85E1     		b	.L14
 911              	.L56:
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 912              		.loc 1 530 13
 913 03f4 A14B     		ldr	r3, .L89
 914 03f6 1B6A     		ldr	r3, [r3, #32]
 915 03f8 0222     		movs	r2, #2
 916 03fa 1340     		ands	r3, r2
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 917              		.loc 1 530 12
 918 03fc F0D1     		bne	.L57
 919              	.L55:
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 27


 920              		.loc 1 540 7
 921 03fe 1F23     		movs	r3, #31
 922 0400 FB18     		adds	r3, r7, r3
 923 0402 1B78     		ldrb	r3, [r3]
 924 0404 012B     		cmp	r3, #1
 925 0406 05D1     		bne	.L43
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 926              		.loc 1 542 7
 927 0408 9C4B     		ldr	r3, .L89
 928 040a DA69     		ldr	r2, [r3, #28]
 929 040c 9B4B     		ldr	r3, .L89
 930 040e 9D49     		ldr	r1, .L89+8
 931 0410 0A40     		ands	r2, r1
 932 0412 DA61     		str	r2, [r3, #28]
 933              	.L43:
 934              	.LBE2:
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 935              		.loc 1 547 25
 936 0414 7B68     		ldr	r3, [r7, #4]
 937 0416 1B68     		ldr	r3, [r3]
 938              		.loc 1 547 43
 939 0418 1022     		movs	r2, #16
 940 041a 1340     		ands	r3, r2
 941              		.loc 1 547 5
 942 041c 63D0     		beq	.L58
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 943              		.loc 1 554 25
 944 041e 7B68     		ldr	r3, [r7, #4]
 945 0420 5B69     		ldr	r3, [r3, #20]
 946              		.loc 1 554 7
 947 0422 012B     		cmp	r3, #1
 948 0424 2AD1     		bne	.L59
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 949              		.loc 1 557 7
 950 0426 954B     		ldr	r3, .L89
 951 0428 5A6B     		ldr	r2, [r3, #52]
 952 042a 944B     		ldr	r3, .L89
 953 042c 0421     		movs	r1, #4
 954 042e 0A43     		orrs	r2, r1
 955 0430 5A63     		str	r2, [r3, #52]
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 956              		.loc 1 560 7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 28


 957 0432 924B     		ldr	r3, .L89
 958 0434 5A6B     		ldr	r2, [r3, #52]
 959 0436 914B     		ldr	r3, .L89
 960 0438 0121     		movs	r1, #1
 961 043a 0A43     		orrs	r2, r1
 962 043c 5A63     		str	r2, [r3, #52]
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 963              		.loc 1 563 19
 964 043e FFF7FEFF 		bl	HAL_GetTick
 965 0442 0300     		movs	r3, r0
 966 0444 BB61     		str	r3, [r7, #24]
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 967              		.loc 1 566 12
 968 0446 08E0     		b	.L60
 969              	.L61:
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 970              		.loc 1 568 13
 971 0448 FFF7FEFF 		bl	HAL_GetTick
 972 044c 0200     		movs	r2, r0
 973              		.loc 1 568 27
 974 044e BB69     		ldr	r3, [r7, #24]
 975 0450 D31A     		subs	r3, r2, r3
 976              		.loc 1 568 11
 977 0452 022B     		cmp	r3, #2
 978 0454 01D9     		bls	.L60
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 979              		.loc 1 570 18
 980 0456 0323     		movs	r3, #3
 981 0458 52E1     		b	.L14
 982              	.L60:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 983              		.loc 1 566 13
 984 045a 884B     		ldr	r3, .L89
 985 045c 5B6B     		ldr	r3, [r3, #52]
 986 045e 0222     		movs	r2, #2
 987 0460 1340     		ands	r3, r2
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 988              		.loc 1 566 12
 989 0462 F1D0     		beq	.L61
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 990              		.loc 1 575 7
 991 0464 854B     		ldr	r3, .L89
 992 0466 5B6B     		ldr	r3, [r3, #52]
 993 0468 F822     		movs	r2, #248
 994 046a 9343     		bics	r3, r2
 995 046c 1900     		movs	r1, r3
 996 046e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 29


 997 0470 9B69     		ldr	r3, [r3, #24]
 998 0472 DA00     		lsls	r2, r3, #3
 999 0474 814B     		ldr	r3, .L89
 1000 0476 0A43     		orrs	r2, r1
 1001 0478 5A63     		str	r2, [r3, #52]
 1002 047a 34E0     		b	.L58
 1003              	.L59:
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 1004              		.loc 1 577 30
 1005 047c 7B68     		ldr	r3, [r7, #4]
 1006 047e 5B69     		ldr	r3, [r3, #20]
 1007              		.loc 1 577 12
 1008 0480 0533     		adds	r3, r3, #5
 1009 0482 11D1     		bne	.L62
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 1010              		.loc 1 580 7
 1011 0484 7D4B     		ldr	r3, .L89
 1012 0486 5A6B     		ldr	r2, [r3, #52]
 1013 0488 7C4B     		ldr	r3, .L89
 1014 048a 0421     		movs	r1, #4
 1015 048c 8A43     		bics	r2, r1
 1016 048e 5A63     		str	r2, [r3, #52]
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 1017              		.loc 1 583 7
 1018 0490 7A4B     		ldr	r3, .L89
 1019 0492 5B6B     		ldr	r3, [r3, #52]
 1020 0494 F822     		movs	r2, #248
 1021 0496 9343     		bics	r3, r2
 1022 0498 1900     		movs	r1, r3
 1023 049a 7B68     		ldr	r3, [r7, #4]
 1024 049c 9B69     		ldr	r3, [r3, #24]
 1025 049e DA00     		lsls	r2, r3, #3
 1026 04a0 764B     		ldr	r3, .L89
 1027 04a2 0A43     		orrs	r2, r1
 1028 04a4 5A63     		str	r2, [r3, #52]
 1029 04a6 1EE0     		b	.L58
 1030              	.L62:
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 1031              		.loc 1 588 7
 1032 04a8 744B     		ldr	r3, .L89
 1033 04aa 5A6B     		ldr	r2, [r3, #52]
 1034 04ac 734B     		ldr	r3, .L89
 1035 04ae 0421     		movs	r1, #4
 1036 04b0 0A43     		orrs	r2, r1
 1037 04b2 5A63     		str	r2, [r3, #52]
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 30


 1038              		.loc 1 591 7
 1039 04b4 714B     		ldr	r3, .L89
 1040 04b6 5A6B     		ldr	r2, [r3, #52]
 1041 04b8 704B     		ldr	r3, .L89
 1042 04ba 0121     		movs	r1, #1
 1043 04bc 8A43     		bics	r2, r1
 1044 04be 5A63     		str	r2, [r3, #52]
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1045              		.loc 1 594 19
 1046 04c0 FFF7FEFF 		bl	HAL_GetTick
 1047 04c4 0300     		movs	r3, r0
 1048 04c6 BB61     		str	r3, [r7, #24]
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 1049              		.loc 1 597 12
 1050 04c8 08E0     		b	.L63
 1051              	.L64:
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 1052              		.loc 1 599 13
 1053 04ca FFF7FEFF 		bl	HAL_GetTick
 1054 04ce 0200     		movs	r2, r0
 1055              		.loc 1 599 27
 1056 04d0 BB69     		ldr	r3, [r7, #24]
 1057 04d2 D31A     		subs	r3, r2, r3
 1058              		.loc 1 599 11
 1059 04d4 022B     		cmp	r3, #2
 1060 04d6 01D9     		bls	.L63
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1061              		.loc 1 601 18
 1062 04d8 0323     		movs	r3, #3
 1063 04da 11E1     		b	.L14
 1064              	.L63:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1065              		.loc 1 597 13
 1066 04dc 674B     		ldr	r3, .L89
 1067 04de 5B6B     		ldr	r3, [r3, #52]
 1068 04e0 0222     		movs	r2, #2
 1069 04e2 1340     		ands	r3, r2
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1070              		.loc 1 597 12
 1071 04e4 F1D1     		bne	.L64
 1072              	.L58:
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1073              		.loc 1 609 25
 1074 04e6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 31


 1075 04e8 1B68     		ldr	r3, [r3]
 1076              		.loc 1 609 43
 1077 04ea 2022     		movs	r2, #32
 1078 04ec 1340     		ands	r3, r2
 1079              		.loc 1 609 5
 1080 04ee 5CD0     		beq	.L65
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 1081              		.loc 1 615 9
 1082 04f0 624B     		ldr	r3, .L89
 1083 04f2 5B68     		ldr	r3, [r3, #4]
 1084 04f4 0C22     		movs	r2, #12
 1085 04f6 1340     		ands	r3, r2
 1086              		.loc 1 615 7
 1087 04f8 0C2B     		cmp	r3, #12
 1088 04fa 0ED0     		beq	.L66
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 1089              		.loc 1 616 10 discriminator 1
 1090 04fc 5F4B     		ldr	r3, .L89
 1091 04fe 5B68     		ldr	r3, [r3, #4]
 1092 0500 0C22     		movs	r2, #12
 1093 0502 1340     		ands	r3, r2
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 1094              		.loc 1 615 73 discriminator 1
 1095 0504 082B     		cmp	r3, #8
 1096 0506 14D1     		bne	.L67
 1097              		.loc 1 616 79
 1098 0508 5C4B     		ldr	r3, .L89
 1099 050a 5A68     		ldr	r2, [r3, #4]
 1100 050c C023     		movs	r3, #192
 1101 050e 5B02     		lsls	r3, r3, #9
 1102 0510 1A40     		ands	r2, r3
 1103              		.loc 1 616 75
 1104 0512 C023     		movs	r3, #192
 1105 0514 5B02     		lsls	r3, r3, #9
 1106 0516 9A42     		cmp	r2, r3
 1107 0518 0BD1     		bne	.L67
 1108              	.L66:
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 1109              		.loc 1 618 11
 1110 051a 584B     		ldr	r3, .L89
 1111 051c 5A6B     		ldr	r2, [r3, #52]
 1112 051e 8023     		movs	r3, #128
 1113 0520 5B02     		lsls	r3, r3, #9
 1114 0522 1340     		ands	r3, r2
 1115              		.loc 1 618 9
 1116 0524 40D0     		beq	.L86
 1117              		.loc 1 618 80 discriminator 1
 1118 0526 7B68     		ldr	r3, [r7, #4]
 1119 0528 1B6A     		ldr	r3, [r3, #32]
 1120              		.loc 1 618 59 discriminator 1
 1121 052a 012B     		cmp	r3, #1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 32


 1122 052c 3CD0     		beq	.L86
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1123              		.loc 1 620 16
 1124 052e 0123     		movs	r3, #1
 1125 0530 E6E0     		b	.L14
 1126              	.L67:
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 1127              		.loc 1 626 27
 1128 0532 7B68     		ldr	r3, [r7, #4]
 1129 0534 1B6A     		ldr	r3, [r3, #32]
 1130              		.loc 1 626 9
 1131 0536 002B     		cmp	r3, #0
 1132 0538 1BD0     		beq	.L69
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 1133              		.loc 1 629 9
 1134 053a 504B     		ldr	r3, .L89
 1135 053c 5A6B     		ldr	r2, [r3, #52]
 1136 053e 4F4B     		ldr	r3, .L89
 1137 0540 8021     		movs	r1, #128
 1138 0542 4902     		lsls	r1, r1, #9
 1139 0544 0A43     		orrs	r2, r1
 1140 0546 5A63     		str	r2, [r3, #52]
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1141              		.loc 1 632 21
 1142 0548 FFF7FEFF 		bl	HAL_GetTick
 1143 054c 0300     		movs	r3, r0
 1144 054e BB61     		str	r3, [r7, #24]
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1145              		.loc 1 635 14
 1146 0550 08E0     		b	.L70
 1147              	.L71:
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1148              		.loc 1 637 15
 1149 0552 FFF7FEFF 		bl	HAL_GetTick
 1150 0556 0200     		movs	r2, r0
 1151              		.loc 1 637 29
 1152 0558 BB69     		ldr	r3, [r7, #24]
 1153 055a D31A     		subs	r3, r2, r3
 1154              		.loc 1 637 13
 1155 055c 022B     		cmp	r3, #2
 1156 055e 01D9     		bls	.L70
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1157              		.loc 1 639 20
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 33


 1158 0560 0323     		movs	r3, #3
 1159 0562 CDE0     		b	.L14
 1160              	.L70:
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1161              		.loc 1 635 15
 1162 0564 454B     		ldr	r3, .L89
 1163 0566 5A6B     		ldr	r2, [r3, #52]
 1164 0568 8023     		movs	r3, #128
 1165 056a 5B02     		lsls	r3, r3, #9
 1166 056c 1340     		ands	r3, r2
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1167              		.loc 1 635 14
 1168 056e F0D0     		beq	.L71
 1169 0570 1BE0     		b	.L65
 1170              	.L69:
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 1171              		.loc 1 646 9
 1172 0572 424B     		ldr	r3, .L89
 1173 0574 5A6B     		ldr	r2, [r3, #52]
 1174 0576 414B     		ldr	r3, .L89
 1175 0578 4349     		ldr	r1, .L89+12
 1176 057a 0A40     		ands	r2, r1
 1177 057c 5A63     		str	r2, [r3, #52]
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1178              		.loc 1 649 21
 1179 057e FFF7FEFF 		bl	HAL_GetTick
 1180 0582 0300     		movs	r3, r0
 1181 0584 BB61     		str	r3, [r7, #24]
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 1182              		.loc 1 652 14
 1183 0586 08E0     		b	.L72
 1184              	.L73:
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1185              		.loc 1 654 15
 1186 0588 FFF7FEFF 		bl	HAL_GetTick
 1187 058c 0200     		movs	r2, r0
 1188              		.loc 1 654 29
 1189 058e BB69     		ldr	r3, [r7, #24]
 1190 0590 D31A     		subs	r3, r2, r3
 1191              		.loc 1 654 13
 1192 0592 022B     		cmp	r3, #2
 1193 0594 01D9     		bls	.L72
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1194              		.loc 1 656 20
 1195 0596 0323     		movs	r3, #3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 34


 1196 0598 B2E0     		b	.L14
 1197              	.L72:
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1198              		.loc 1 652 15
 1199 059a 384B     		ldr	r3, .L89
 1200 059c 5A6B     		ldr	r2, [r3, #52]
 1201 059e 8023     		movs	r3, #128
 1202 05a0 5B02     		lsls	r3, r3, #9
 1203 05a2 1340     		ands	r3, r2
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1204              		.loc 1 652 14
 1205 05a4 F0D1     		bne	.L73
 1206 05a6 00E0     		b	.L65
 1207              	.L86:
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1208              		.loc 1 618 9
 1209 05a8 C046     		nop
 1210              	.L65:
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1211              		.loc 1 667 30
 1212 05aa 7B68     		ldr	r3, [r7, #4]
 1213 05ac 5B6A     		ldr	r3, [r3, #36]
 1214              		.loc 1 667 6
 1215 05ae 002B     		cmp	r3, #0
 1216 05b0 00D1     		bne	.LCB1066
 1217 05b2 A4E0     		b	.L74	@long jump
 1218              	.LCB1066:
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1219              		.loc 1 670 8
 1220 05b4 314B     		ldr	r3, .L89
 1221 05b6 5B68     		ldr	r3, [r3, #4]
 1222 05b8 0C22     		movs	r2, #12
 1223 05ba 1340     		ands	r3, r2
 1224              		.loc 1 670 7
 1225 05bc 082B     		cmp	r3, #8
 1226 05be 00D1     		bne	.LCB1072
 1227 05c0 78E0     		b	.L75	@long jump
 1228              	.LCB1072:
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1229              		.loc 1 672 33
 1230 05c2 7B68     		ldr	r3, [r7, #4]
 1231 05c4 5B6A     		ldr	r3, [r3, #36]
 1232              		.loc 1 672 9
 1233 05c6 022B     		cmp	r3, #2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 35


 1234 05c8 4CD1     		bne	.L76
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1235              		.loc 1 680 9
 1236 05ca 2C4B     		ldr	r3, .L89
 1237 05cc 1A68     		ldr	r2, [r3]
 1238 05ce 2B4B     		ldr	r3, .L89
 1239 05d0 2E49     		ldr	r1, .L89+16
 1240 05d2 0A40     		ands	r2, r1
 1241 05d4 1A60     		str	r2, [r3]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1242              		.loc 1 683 21
 1243 05d6 FFF7FEFF 		bl	HAL_GetTick
 1244 05da 0300     		movs	r3, r0
 1245 05dc BB61     		str	r3, [r7, #24]
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1246              		.loc 1 686 14
 1247 05de 08E0     		b	.L77
 1248              	.L78:
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1249              		.loc 1 688 15
 1250 05e0 FFF7FEFF 		bl	HAL_GetTick
 1251 05e4 0200     		movs	r2, r0
 1252              		.loc 1 688 29
 1253 05e6 BB69     		ldr	r3, [r7, #24]
 1254 05e8 D31A     		subs	r3, r2, r3
 1255              		.loc 1 688 13
 1256 05ea 022B     		cmp	r3, #2
 1257 05ec 01D9     		bls	.L77
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1258              		.loc 1 690 20
 1259 05ee 0323     		movs	r3, #3
 1260 05f0 86E0     		b	.L14
 1261              	.L77:
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1262              		.loc 1 686 15
 1263 05f2 224B     		ldr	r3, .L89
 1264 05f4 1A68     		ldr	r2, [r3]
 1265 05f6 8023     		movs	r3, #128
 1266 05f8 9B04     		lsls	r3, r3, #18
 1267 05fa 1340     		ands	r3, r2
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1268              		.loc 1 686 14
 1269 05fc F0D1     		bne	.L78
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 36


 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1270              		.loc 1 695 9
 1271 05fe 1F4B     		ldr	r3, .L89
 1272 0600 DB6A     		ldr	r3, [r3, #44]
 1273 0602 0F22     		movs	r2, #15
 1274 0604 9343     		bics	r3, r2
 1275 0606 1900     		movs	r1, r3
 1276 0608 7B68     		ldr	r3, [r7, #4]
 1277 060a 1A6B     		ldr	r2, [r3, #48]
 1278 060c 1B4B     		ldr	r3, .L89
 1279 060e 0A43     		orrs	r2, r1
 1280 0610 DA62     		str	r2, [r3, #44]
 1281 0612 1A4B     		ldr	r3, .L89
 1282 0614 5B68     		ldr	r3, [r3, #4]
 1283 0616 1E4A     		ldr	r2, .L89+20
 1284 0618 1340     		ands	r3, r2
 1285 061a 1900     		movs	r1, r3
 1286 061c 7B68     		ldr	r3, [r7, #4]
 1287 061e DA6A     		ldr	r2, [r3, #44]
 1288 0620 7B68     		ldr	r3, [r7, #4]
 1289 0622 9B6A     		ldr	r3, [r3, #40]
 1290 0624 1A43     		orrs	r2, r3
 1291 0626 154B     		ldr	r3, .L89
 1292 0628 0A43     		orrs	r2, r1
 1293 062a 5A60     		str	r2, [r3, #4]
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1294              		.loc 1 699 9
 1295 062c 134B     		ldr	r3, .L89
 1296 062e 1A68     		ldr	r2, [r3]
 1297 0630 124B     		ldr	r3, .L89
 1298 0632 8021     		movs	r1, #128
 1299 0634 4904     		lsls	r1, r1, #17
 1300 0636 0A43     		orrs	r2, r1
 1301 0638 1A60     		str	r2, [r3]
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1302              		.loc 1 702 21
 1303 063a FFF7FEFF 		bl	HAL_GetTick
 1304 063e 0300     		movs	r3, r0
 1305 0640 BB61     		str	r3, [r7, #24]
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1306              		.loc 1 705 14
 1307 0642 08E0     		b	.L79
 1308              	.L80:
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1309              		.loc 1 707 15
 1310 0644 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 37


 1311 0648 0200     		movs	r2, r0
 1312              		.loc 1 707 29
 1313 064a BB69     		ldr	r3, [r7, #24]
 1314 064c D31A     		subs	r3, r2, r3
 1315              		.loc 1 707 13
 1316 064e 022B     		cmp	r3, #2
 1317 0650 01D9     		bls	.L79
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1318              		.loc 1 709 20
 1319 0652 0323     		movs	r3, #3
 1320 0654 54E0     		b	.L14
 1321              	.L79:
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1322              		.loc 1 705 15
 1323 0656 094B     		ldr	r3, .L89
 1324 0658 1A68     		ldr	r2, [r3]
 1325 065a 8023     		movs	r3, #128
 1326 065c 9B04     		lsls	r3, r3, #18
 1327 065e 1340     		ands	r3, r2
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1328              		.loc 1 705 14
 1329 0660 F0D0     		beq	.L80
 1330 0662 4CE0     		b	.L74
 1331              	.L76:
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1332              		.loc 1 716 9
 1333 0664 054B     		ldr	r3, .L89
 1334 0666 1A68     		ldr	r2, [r3]
 1335 0668 044B     		ldr	r3, .L89
 1336 066a 0849     		ldr	r1, .L89+16
 1337 066c 0A40     		ands	r2, r1
 1338 066e 1A60     		str	r2, [r3]
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1339              		.loc 1 719 21
 1340 0670 FFF7FEFF 		bl	HAL_GetTick
 1341 0674 0300     		movs	r3, r0
 1342 0676 BB61     		str	r3, [r7, #24]
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1343              		.loc 1 722 14
 1344 0678 15E0     		b	.L81
 1345              	.L90:
 1346 067a C046     		.align	2
 1347              	.L89:
 1348 067c 00100240 		.word	1073876992
 1349 0680 88130000 		.word	5000
 1350 0684 FFFFFFEF 		.word	-268435457
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 38


 1351 0688 FFFFFEFF 		.word	-65537
 1352 068c FFFFFFFE 		.word	-16777217
 1353 0690 FF7FC2FF 		.word	-4030465
 1354              	.L82:
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1355              		.loc 1 724 15
 1356 0694 FFF7FEFF 		bl	HAL_GetTick
 1357 0698 0200     		movs	r2, r0
 1358              		.loc 1 724 29
 1359 069a BB69     		ldr	r3, [r7, #24]
 1360 069c D31A     		subs	r3, r2, r3
 1361              		.loc 1 724 13
 1362 069e 022B     		cmp	r3, #2
 1363 06a0 01D9     		bls	.L81
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1364              		.loc 1 726 20
 1365 06a2 0323     		movs	r3, #3
 1366 06a4 2CE0     		b	.L14
 1367              	.L81:
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1368              		.loc 1 722 15
 1369 06a6 184B     		ldr	r3, .L91
 1370 06a8 1A68     		ldr	r2, [r3]
 1371 06aa 8023     		movs	r3, #128
 1372 06ac 9B04     		lsls	r3, r3, #18
 1373 06ae 1340     		ands	r3, r2
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1374              		.loc 1 722 14
 1375 06b0 F0D1     		bne	.L82
 1376 06b2 24E0     		b	.L74
 1377              	.L75:
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1378              		.loc 1 734 33
 1379 06b4 7B68     		ldr	r3, [r7, #4]
 1380 06b6 5B6A     		ldr	r3, [r3, #36]
 1381              		.loc 1 734 9
 1382 06b8 012B     		cmp	r3, #1
 1383 06ba 01D1     		bne	.L83
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1384              		.loc 1 736 16
 1385 06bc 0123     		movs	r3, #1
 1386 06be 1FE0     		b	.L14
 1387              	.L83:
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 39


 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config  = RCC->CFGR;
 1388              		.loc 1 741 26
 1389 06c0 114B     		ldr	r3, .L91
 1390              		.loc 1 741 21
 1391 06c2 5B68     		ldr	r3, [r3, #4]
 1392 06c4 7B61     		str	r3, [r7, #20]
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 1393              		.loc 1 742 26
 1394 06c6 104B     		ldr	r3, .L91
 1395              		.loc 1 742 21
 1396 06c8 DB6A     		ldr	r3, [r3, #44]
 1397 06ca 3B61     		str	r3, [r7, #16]
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1398              		.loc 1 743 13
 1399 06cc 7A69     		ldr	r2, [r7, #20]
 1400 06ce C023     		movs	r3, #192
 1401 06d0 5B02     		lsls	r3, r3, #9
 1402 06d2 1A40     		ands	r2, r3
 1403              		.loc 1 743 78
 1404 06d4 7B68     		ldr	r3, [r7, #4]
 1405 06d6 9B6A     		ldr	r3, [r3, #40]
 1406              		.loc 1 743 11
 1407 06d8 9A42     		cmp	r2, r3
 1408 06da 0ED1     		bne	.L84
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1409              		.loc 1 744 13 discriminator 1
 1410 06dc 3B69     		ldr	r3, [r7, #16]
 1411 06de 0F22     		movs	r2, #15
 1412 06e0 1A40     		ands	r2, r3
 1413              		.loc 1 744 78 discriminator 1
 1414 06e2 7B68     		ldr	r3, [r7, #4]
 1415 06e4 1B6B     		ldr	r3, [r3, #48]
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1416              		.loc 1 743 90 discriminator 1
 1417 06e6 9A42     		cmp	r2, r3
 1418 06e8 07D1     		bne	.L84
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 1419              		.loc 1 745 13
 1420 06ea 7A69     		ldr	r2, [r7, #20]
 1421 06ec F023     		movs	r3, #240
 1422 06ee 9B03     		lsls	r3, r3, #14
 1423 06f0 1A40     		ands	r2, r3
 1424              		.loc 1 745 78
 1425 06f2 7B68     		ldr	r3, [r7, #4]
 1426 06f4 DB6A     		ldr	r3, [r3, #44]
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1427              		.loc 1 744 90
 1428 06f6 9A42     		cmp	r2, r3
 1429 06f8 01D0     		beq	.L74
 1430              	.L84:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_ERROR;
 1431              		.loc 1 747 18
 1432 06fa 0123     		movs	r3, #1
 1433 06fc 00E0     		b	.L14
 1434              	.L74:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 40


 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1435              		.loc 1 753 10
 1436 06fe 0023     		movs	r3, #0
 1437              	.L14:
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1438              		.loc 1 754 1
 1439 0700 1800     		movs	r0, r3
 1440 0702 BD46     		mov	sp, r7
 1441 0704 08B0     		add	sp, sp, #32
 1442              		@ sp needed
 1443 0706 80BD     		pop	{r7, pc}
 1444              	.L92:
 1445              		.align	2
 1446              	.L91:
 1447 0708 00100240 		.word	1073876992
 1448              		.cfi_endproc
 1449              	.LFE41:
 1451              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1452              		.align	1
 1453              		.global	HAL_RCC_ClockConfig
 1454              		.syntax unified
 1455              		.code	16
 1456              		.thumb_func
 1457              		.fpu softvfp
 1459              	HAL_RCC_ClockConfig:
 1460              	.LFB42:
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1461              		.loc 1 780 1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 41


 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 16
 1464              		@ frame_needed = 1, uses_anonymous_args = 0
 1465 0000 80B5     		push	{r7, lr}
 1466              	.LCFI6:
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 7, -8
 1469              		.cfi_offset 14, -4
 1470 0002 84B0     		sub	sp, sp, #16
 1471              	.LCFI7:
 1472              		.cfi_def_cfa_offset 24
 1473 0004 00AF     		add	r7, sp, #0
 1474              	.LCFI8:
 1475              		.cfi_def_cfa_register 7
 1476 0006 7860     		str	r0, [r7, #4]
 1477 0008 3960     		str	r1, [r7]
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1478              		.loc 1 784 5
 1479 000a 7B68     		ldr	r3, [r7, #4]
 1480 000c 002B     		cmp	r3, #0
 1481 000e 01D1     		bne	.L94
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 1482              		.loc 1 786 12
 1483 0010 0123     		movs	r3, #1
 1484 0012 BFE0     		b	.L95
 1485              	.L94:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1486              		.loc 1 798 17
 1487 0014 614B     		ldr	r3, .L108
 1488 0016 1B68     		ldr	r3, [r3]
 1489 0018 0122     		movs	r2, #1
 1490 001a 1340     		ands	r3, r2
 1491              		.loc 1 798 5
 1492 001c 3A68     		ldr	r2, [r7]
 1493 001e 9A42     		cmp	r2, r3
 1494 0020 11D9     		bls	.L96
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1495              		.loc 1 801 5
 1496 0022 5E4B     		ldr	r3, .L108
 1497 0024 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 42


 1498 0026 0122     		movs	r2, #1
 1499 0028 9343     		bics	r3, r2
 1500 002a 1900     		movs	r1, r3
 1501 002c 5B4B     		ldr	r3, .L108
 1502 002e 3A68     		ldr	r2, [r7]
 1503 0030 0A43     		orrs	r2, r1
 1504 0032 1A60     		str	r2, [r3]
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1505              		.loc 1 805 8
 1506 0034 594B     		ldr	r3, .L108
 1507 0036 1B68     		ldr	r3, [r3]
 1508 0038 0122     		movs	r2, #1
 1509 003a 1340     		ands	r3, r2
 1510              		.loc 1 805 7
 1511 003c 3A68     		ldr	r2, [r7]
 1512 003e 9A42     		cmp	r2, r3
 1513 0040 01D0     		beq	.L96
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1514              		.loc 1 807 14
 1515 0042 0123     		movs	r3, #1
 1516 0044 A6E0     		b	.L95
 1517              	.L96:
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1518              		.loc 1 812 25
 1519 0046 7B68     		ldr	r3, [r7, #4]
 1520 0048 1B68     		ldr	r3, [r3]
 1521              		.loc 1 812 38
 1522 004a 0222     		movs	r2, #2
 1523 004c 1340     		ands	r3, r2
 1524              		.loc 1 812 5
 1525 004e 15D0     		beq	.L97
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1526              		.loc 1 816 27
 1527 0050 7B68     		ldr	r3, [r7, #4]
 1528 0052 1B68     		ldr	r3, [r3]
 1529              		.loc 1 816 40
 1530 0054 0422     		movs	r2, #4
 1531 0056 1340     		ands	r3, r2
 1532              		.loc 1 816 7
 1533 0058 06D0     		beq	.L98
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 1534              		.loc 1 818 7
 1535 005a 514B     		ldr	r3, .L108+4
 1536 005c 5A68     		ldr	r2, [r3, #4]
 1537 005e 504B     		ldr	r3, .L108+4
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 43


 1538 0060 E021     		movs	r1, #224
 1539 0062 C900     		lsls	r1, r1, #3
 1540 0064 0A43     		orrs	r2, r1
 1541 0066 5A60     		str	r2, [r3, #4]
 1542              	.L98:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1543              		.loc 1 823 5
 1544 0068 4D4B     		ldr	r3, .L108+4
 1545 006a 5B68     		ldr	r3, [r3, #4]
 1546 006c F022     		movs	r2, #240
 1547 006e 9343     		bics	r3, r2
 1548 0070 1900     		movs	r1, r3
 1549 0072 7B68     		ldr	r3, [r7, #4]
 1550 0074 9A68     		ldr	r2, [r3, #8]
 1551 0076 4A4B     		ldr	r3, .L108+4
 1552 0078 0A43     		orrs	r2, r1
 1553 007a 5A60     		str	r2, [r3, #4]
 1554              	.L97:
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1555              		.loc 1 827 25
 1556 007c 7B68     		ldr	r3, [r7, #4]
 1557 007e 1B68     		ldr	r3, [r3]
 1558              		.loc 1 827 38
 1559 0080 0122     		movs	r2, #1
 1560 0082 1340     		ands	r3, r2
 1561              		.loc 1 827 5
 1562 0084 4CD0     		beq	.L99
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1563              		.loc 1 832 25
 1564 0086 7B68     		ldr	r3, [r7, #4]
 1565 0088 5B68     		ldr	r3, [r3, #4]
 1566              		.loc 1 832 7
 1567 008a 012B     		cmp	r3, #1
 1568 008c 07D1     		bne	.L100
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1569              		.loc 1 835 10
 1570 008e 444B     		ldr	r3, .L108+4
 1571 0090 1A68     		ldr	r2, [r3]
 1572 0092 8023     		movs	r3, #128
 1573 0094 9B02     		lsls	r3, r3, #10
 1574 0096 1340     		ands	r3, r2
 1575              		.loc 1 835 9
 1576 0098 20D1     		bne	.L101
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 44


 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1577              		.loc 1 837 16
 1578 009a 0123     		movs	r3, #1
 1579 009c 7AE0     		b	.L95
 1580              	.L100:
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1581              		.loc 1 841 30
 1582 009e 7B68     		ldr	r3, [r7, #4]
 1583 00a0 5B68     		ldr	r3, [r3, #4]
 1584              		.loc 1 841 12
 1585 00a2 022B     		cmp	r3, #2
 1586 00a4 07D1     		bne	.L102
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1587              		.loc 1 844 10
 1588 00a6 3E4B     		ldr	r3, .L108+4
 1589 00a8 1A68     		ldr	r2, [r3]
 1590 00aa 8023     		movs	r3, #128
 1591 00ac 9B04     		lsls	r3, r3, #18
 1592 00ae 1340     		ands	r3, r2
 1593              		.loc 1 844 9
 1594 00b0 14D1     		bne	.L101
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1595              		.loc 1 846 16
 1596 00b2 0123     		movs	r3, #1
 1597 00b4 6EE0     		b	.L95
 1598              	.L102:
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 1599              		.loc 1 851 30
 1600 00b6 7B68     		ldr	r3, [r7, #4]
 1601 00b8 5B68     		ldr	r3, [r3, #4]
 1602              		.loc 1 851 12
 1603 00ba 032B     		cmp	r3, #3
 1604 00bc 07D1     		bne	.L103
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1605              		.loc 1 854 10
 1606 00be 384B     		ldr	r3, .L108+4
 1607 00c0 5A6B     		ldr	r2, [r3, #52]
 1608 00c2 8023     		movs	r3, #128
 1609 00c4 5B02     		lsls	r3, r3, #9
 1610 00c6 1340     		ands	r3, r2
 1611              		.loc 1 854 9
 1612 00c8 08D1     		bne	.L101
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1613              		.loc 1 856 16
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 45


 1614 00ca 0123     		movs	r3, #1
 1615 00cc 62E0     		b	.L95
 1616              	.L103:
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1617              		.loc 1 864 10
 1618 00ce 344B     		ldr	r3, .L108+4
 1619 00d0 1B68     		ldr	r3, [r3]
 1620 00d2 0222     		movs	r2, #2
 1621 00d4 1340     		ands	r3, r2
 1622              		.loc 1 864 9
 1623 00d6 01D1     		bne	.L101
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1624              		.loc 1 866 16
 1625 00d8 0123     		movs	r3, #1
 1626 00da 5BE0     		b	.L95
 1627              	.L101:
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1628              		.loc 1 869 5
 1629 00dc 304B     		ldr	r3, .L108+4
 1630 00de 5B68     		ldr	r3, [r3, #4]
 1631 00e0 0322     		movs	r2, #3
 1632 00e2 9343     		bics	r3, r2
 1633 00e4 1900     		movs	r1, r3
 1634 00e6 7B68     		ldr	r3, [r7, #4]
 1635 00e8 5A68     		ldr	r2, [r3, #4]
 1636 00ea 2D4B     		ldr	r3, .L108+4
 1637 00ec 0A43     		orrs	r2, r1
 1638 00ee 5A60     		str	r2, [r3, #4]
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1639              		.loc 1 872 17
 1640 00f0 FFF7FEFF 		bl	HAL_GetTick
 1641 00f4 0300     		movs	r3, r0
 1642 00f6 FB60     		str	r3, [r7, #12]
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1643              		.loc 1 874 11
 1644 00f8 09E0     		b	.L104
 1645              	.L105:
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1646              		.loc 1 876 11
 1647 00fa FFF7FEFF 		bl	HAL_GetTick
 1648 00fe 0200     		movs	r2, r0
 1649              		.loc 1 876 25
 1650 0100 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 46


 1651 0102 D31A     		subs	r3, r2, r3
 1652              		.loc 1 876 9
 1653 0104 274A     		ldr	r2, .L108+8
 1654 0106 9342     		cmp	r3, r2
 1655 0108 01D9     		bls	.L104
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1656              		.loc 1 878 16
 1657 010a 0323     		movs	r3, #3
 1658 010c 42E0     		b	.L95
 1659              	.L104:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1660              		.loc 1 874 12
 1661 010e 244B     		ldr	r3, .L108+4
 1662 0110 5B68     		ldr	r3, [r3, #4]
 1663 0112 0C22     		movs	r2, #12
 1664 0114 1A40     		ands	r2, r3
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1665              		.loc 1 874 63
 1666 0116 7B68     		ldr	r3, [r7, #4]
 1667 0118 5B68     		ldr	r3, [r3, #4]
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1668              		.loc 1 874 78
 1669 011a 9B00     		lsls	r3, r3, #2
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1670              		.loc 1 874 11
 1671 011c 9A42     		cmp	r2, r3
 1672 011e ECD1     		bne	.L105
 1673              	.L99:
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1674              		.loc 1 884 17
 1675 0120 1E4B     		ldr	r3, .L108
 1676 0122 1B68     		ldr	r3, [r3]
 1677 0124 0122     		movs	r2, #1
 1678 0126 1340     		ands	r3, r2
 1679              		.loc 1 884 5
 1680 0128 3A68     		ldr	r2, [r7]
 1681 012a 9A42     		cmp	r2, r3
 1682 012c 11D2     		bcs	.L106
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1683              		.loc 1 887 5
 1684 012e 1B4B     		ldr	r3, .L108
 1685 0130 1B68     		ldr	r3, [r3]
 1686 0132 0122     		movs	r2, #1
 1687 0134 9343     		bics	r3, r2
 1688 0136 1900     		movs	r1, r3
 1689 0138 184B     		ldr	r3, .L108
 1690 013a 3A68     		ldr	r2, [r7]
 1691 013c 0A43     		orrs	r2, r1
 1692 013e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 47


 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1693              		.loc 1 891 8
 1694 0140 164B     		ldr	r3, .L108
 1695 0142 1B68     		ldr	r3, [r3]
 1696 0144 0122     		movs	r2, #1
 1697 0146 1340     		ands	r3, r2
 1698              		.loc 1 891 7
 1699 0148 3A68     		ldr	r2, [r7]
 1700 014a 9A42     		cmp	r2, r3
 1701 014c 01D0     		beq	.L106
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1702              		.loc 1 893 14
 1703 014e 0123     		movs	r3, #1
 1704 0150 20E0     		b	.L95
 1705              	.L106:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1706              		.loc 1 898 25
 1707 0152 7B68     		ldr	r3, [r7, #4]
 1708 0154 1B68     		ldr	r3, [r3]
 1709              		.loc 1 898 38
 1710 0156 0422     		movs	r2, #4
 1711 0158 1340     		ands	r3, r2
 1712              		.loc 1 898 5
 1713 015a 09D0     		beq	.L107
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1714              		.loc 1 901 5
 1715 015c 104B     		ldr	r3, .L108+4
 1716 015e 5B68     		ldr	r3, [r3, #4]
 1717 0160 114A     		ldr	r2, .L108+12
 1718 0162 1340     		ands	r3, r2
 1719 0164 1900     		movs	r1, r3
 1720 0166 7B68     		ldr	r3, [r7, #4]
 1721 0168 DA68     		ldr	r2, [r3, #12]
 1722 016a 0D4B     		ldr	r3, .L108+4
 1723 016c 0A43     		orrs	r2, r1
 1724 016e 5A60     		str	r2, [r3, #4]
 1725              	.L107:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1726              		.loc 1 905 21
 1727 0170 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1728 0174 0100     		movs	r1, r0
 1729              		.loc 1 905 68
 1730 0176 0A4B     		ldr	r3, .L108+4
 1731 0178 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 48


 1732              		.loc 1 905 91
 1733 017a 1B09     		lsrs	r3, r3, #4
 1734 017c 0F22     		movs	r2, #15
 1735 017e 1340     		ands	r3, r2
 1736              		.loc 1 905 63
 1737 0180 0A4A     		ldr	r2, .L108+16
 1738 0182 D35C     		ldrb	r3, [r2, r3]
 1739              		.loc 1 905 47
 1740 0184 0A00     		movs	r2, r1
 1741 0186 DA40     		lsrs	r2, r2, r3
 1742              		.loc 1 905 19
 1743 0188 094B     		ldr	r3, .L108+20
 1744 018a 1A60     		str	r2, [r3]
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1745              		.loc 1 908 3
 1746 018c 0020     		movs	r0, #0
 1747 018e FFF7FEFF 		bl	HAL_InitTick
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1748              		.loc 1 910 10
 1749 0192 0023     		movs	r3, #0
 1750              	.L95:
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1751              		.loc 1 911 1
 1752 0194 1800     		movs	r0, r3
 1753 0196 BD46     		mov	sp, r7
 1754 0198 04B0     		add	sp, sp, #16
 1755              		@ sp needed
 1756 019a 80BD     		pop	{r7, pc}
 1757              	.L109:
 1758              		.align	2
 1759              	.L108:
 1760 019c 00200240 		.word	1073881088
 1761 01a0 00100240 		.word	1073876992
 1762 01a4 88130000 		.word	5000
 1763 01a8 FFF8FFFF 		.word	-1793
 1764 01ac 00000000 		.word	AHBPrescTable
 1765 01b0 00000000 		.word	SystemCoreClock
 1766              		.cfi_endproc
 1767              	.LFE42:
 1769              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1770              		.align	1
 1771              		.global	HAL_RCC_MCOConfig
 1772              		.syntax unified
 1773              		.code	16
 1774              		.thumb_func
 1775              		.fpu softvfp
 1777              	HAL_RCC_MCOConfig:
 1778              	.LFB43:
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 49


 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 50


 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1779              		.loc 1 1019 1
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 40
 1782              		@ frame_needed = 1, uses_anonymous_args = 0
 1783 0000 80B5     		push	{r7, lr}
 1784              	.LCFI9:
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 7, -8
 1787              		.cfi_offset 14, -4
 1788 0002 8AB0     		sub	sp, sp, #40
 1789              	.LCFI10:
 1790              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 51


 1791 0004 00AF     		add	r7, sp, #0
 1792              	.LCFI11:
 1793              		.cfi_def_cfa_register 7
 1794 0006 F860     		str	r0, [r7, #12]
 1795 0008 B960     		str	r1, [r7, #8]
 1796 000a 7A60     		str	r2, [r7, #4]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1797              		.loc 1 1028 18
 1798 000c 1420     		movs	r0, #20
 1799 000e 3B18     		adds	r3, r7, r0
 1800 0010 0222     		movs	r2, #2
 1801 0012 5A60     		str	r2, [r3, #4]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1802              		.loc 1 1029 18
 1803 0014 3B18     		adds	r3, r7, r0
 1804 0016 0322     		movs	r2, #3
 1805 0018 DA60     		str	r2, [r3, #12]
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1806              		.loc 1 1030 18
 1807 001a 3B18     		adds	r3, r7, r0
 1808 001c 0022     		movs	r2, #0
 1809 001e 9A60     		str	r2, [r3, #8]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1810              		.loc 1 1031 18
 1811 0020 3B18     		adds	r3, r7, r0
 1812 0022 8022     		movs	r2, #128
 1813 0024 5200     		lsls	r2, r2, #1
 1814 0026 1A60     		str	r2, [r3]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1815              		.loc 1 1032 18
 1816 0028 3B18     		adds	r3, r7, r0
 1817 002a 0022     		movs	r2, #0
 1818 002c 1A61     		str	r2, [r3, #16]
 1819              	.LBB4:
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1820              		.loc 1 1035 3
 1821 002e 124B     		ldr	r3, .L111
 1822 0030 5A69     		ldr	r2, [r3, #20]
 1823 0032 114B     		ldr	r3, .L111
 1824 0034 8021     		movs	r1, #128
 1825 0036 8902     		lsls	r1, r1, #10
 1826 0038 0A43     		orrs	r2, r1
 1827 003a 5A61     		str	r2, [r3, #20]
 1828 003c 0E4B     		ldr	r3, .L111
 1829 003e 5A69     		ldr	r2, [r3, #20]
 1830 0040 8023     		movs	r3, #128
 1831 0042 9B02     		lsls	r3, r3, #10
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 52


 1832 0044 1340     		ands	r3, r2
 1833 0046 3B61     		str	r3, [r7, #16]
 1834 0048 3B69     		ldr	r3, [r7, #16]
 1835              	.LBE4:
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1836              		.loc 1 1037 3
 1837 004a 3A18     		adds	r2, r7, r0
 1838 004c 9023     		movs	r3, #144
 1839 004e DB05     		lsls	r3, r3, #23
 1840 0050 1100     		movs	r1, r2
 1841 0052 1800     		movs	r0, r3
 1842 0054 FFF7FEFF 		bl	HAL_GPIO_Init
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1843              		.loc 1 1040 3
 1844 0058 074B     		ldr	r3, .L111
 1845 005a 5B68     		ldr	r3, [r3, #4]
 1846 005c 074A     		ldr	r2, .L111+4
 1847 005e 1340     		ands	r3, r2
 1848 0060 1900     		movs	r1, r3
 1849 0062 BA68     		ldr	r2, [r7, #8]
 1850 0064 7B68     		ldr	r3, [r7, #4]
 1851 0066 1A43     		orrs	r2, r3
 1852 0068 034B     		ldr	r3, .L111
 1853 006a 0A43     		orrs	r2, r1
 1854 006c 5A60     		str	r2, [r3, #4]
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1855              		.loc 1 1041 1
 1856 006e C046     		nop
 1857 0070 BD46     		mov	sp, r7
 1858 0072 0AB0     		add	sp, sp, #40
 1859              		@ sp needed
 1860 0074 80BD     		pop	{r7, pc}
 1861              	.L112:
 1862 0076 C046     		.align	2
 1863              	.L111:
 1864 0078 00100240 		.word	1073876992
 1865 007c FFFFFF80 		.word	-2130706433
 1866              		.cfi_endproc
 1867              	.LFE43:
 1869              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1870              		.align	1
 1871              		.global	HAL_RCC_EnableCSS
 1872              		.syntax unified
 1873              		.code	16
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	HAL_RCC_EnableCSS:
 1878              	.LFB44:
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 53


1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1879              		.loc 1 1053 1
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 1, uses_anonymous_args = 0
 1883 0000 80B5     		push	{r7, lr}
 1884              	.LCFI12:
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 7, -8
 1887              		.cfi_offset 14, -4
 1888 0002 00AF     		add	r7, sp, #0
 1889              	.LCFI13:
 1890              		.cfi_def_cfa_register 7
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1891              		.loc 1 1054 3
 1892 0004 044B     		ldr	r3, .L114
 1893 0006 1A68     		ldr	r2, [r3]
 1894 0008 034B     		ldr	r3, .L114
 1895 000a 8021     		movs	r1, #128
 1896 000c 0903     		lsls	r1, r1, #12
 1897 000e 0A43     		orrs	r2, r1
 1898 0010 1A60     		str	r2, [r3]
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1899              		.loc 1 1055 1
 1900 0012 C046     		nop
 1901 0014 BD46     		mov	sp, r7
 1902              		@ sp needed
 1903 0016 80BD     		pop	{r7, pc}
 1904              	.L115:
 1905              		.align	2
 1906              	.L114:
 1907 0018 00100240 		.word	1073876992
 1908              		.cfi_endproc
 1909              	.LFE44:
 1911              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_RCC_DisableCSS
 1914              		.syntax unified
 1915              		.code	16
 1916              		.thumb_func
 1917              		.fpu softvfp
 1919              	HAL_RCC_DisableCSS:
 1920              	.LFB45:
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1921              		.loc 1 1062 1
 1922              		.cfi_startproc
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 54


 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 80B5     		push	{r7, lr}
 1926              	.LCFI14:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 00AF     		add	r7, sp, #0
 1931              	.LCFI15:
 1932              		.cfi_def_cfa_register 7
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1933              		.loc 1 1063 3
 1934 0004 044B     		ldr	r3, .L117
 1935 0006 1A68     		ldr	r2, [r3]
 1936 0008 034B     		ldr	r3, .L117
 1937 000a 0449     		ldr	r1, .L117+4
 1938 000c 0A40     		ands	r2, r1
 1939 000e 1A60     		str	r2, [r3]
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1940              		.loc 1 1064 1
 1941 0010 C046     		nop
 1942 0012 BD46     		mov	sp, r7
 1943              		@ sp needed
 1944 0014 80BD     		pop	{r7, pc}
 1945              	.L118:
 1946 0016 C046     		.align	2
 1947              	.L117:
 1948 0018 00100240 		.word	1073876992
 1949 001c FFFFF7FF 		.word	-524289
 1950              		.cfi_endproc
 1951              	.LFE45:
 1953              		.global	__aeabi_uidiv
 1954              		.section	.rodata
 1955              		.align	2
 1956              	.LC4:
 1957 0000 02030405 		.ascii	"\002\003\004\005\006\007\010\011\012\013\014\015\016"
 1957      06070809 
 1957      0A0B0C0D 
 1957      0E
 1958 000d 0F1010   		.ascii	"\017\020\020"
 1959              		.align	2
 1960              	.LC6:
 1961 0010 01020304 		.ascii	"\001\002\003\004\005\006\007\010\011\012\013\014\015"
 1961      05060708 
 1961      090A0B0C 
 1961      0D
 1962 001d 0E0F10   		.ascii	"\016\017\020"
 1963              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1964              		.align	1
 1965              		.global	HAL_RCC_GetSysClockFreq
 1966              		.syntax unified
 1967              		.code	16
 1968              		.thumb_func
 1969              		.fpu softvfp
 1971              	HAL_RCC_GetSysClockFreq:
 1972              	.LFB46:
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 55


1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1973              		.loc 1 1098 1
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 56
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977 0000 90B5     		push	{r4, r7, lr}
 1978              	.LCFI16:
 1979              		.cfi_def_cfa_offset 12
 1980              		.cfi_offset 4, -12
 1981              		.cfi_offset 7, -8
 1982              		.cfi_offset 14, -4
 1983 0002 8FB0     		sub	sp, sp, #60
 1984              	.LCFI17:
 1985              		.cfi_def_cfa_offset 72
 1986 0004 00AF     		add	r7, sp, #0
 1987              	.LCFI18:
 1988              		.cfi_def_cfa_register 7
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1989              		.loc 1 1099 17
 1990 0006 1423     		movs	r3, #20
 1991 0008 FB18     		adds	r3, r7, r3
 1992 000a 384A     		ldr	r2, .L129
 1993 000c 13CA     		ldmia	r2!, {r0, r1, r4}
 1994 000e 13C3     		stmia	r3!, {r0, r1, r4}
 1995 0010 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 56


 1996 0012 1A60     		str	r2, [r3]
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1997              		.loc 1 1101 17
 1998 0014 3B1D     		adds	r3, r7, #4
 1999 0016 364A     		ldr	r2, .L129+4
 2000 0018 13CA     		ldmia	r2!, {r0, r1, r4}
 2001 001a 13C3     		stmia	r3!, {r0, r1, r4}
 2002 001c 1268     		ldr	r2, [r2]
 2003 001e 1A60     		str	r2, [r3]
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 2004              		.loc 1 1104 12
 2005 0020 0023     		movs	r3, #0
 2006 0022 FB62     		str	r3, [r7, #44]
 2007              		.loc 1 1104 25
 2008 0024 0023     		movs	r3, #0
 2009 0026 BB62     		str	r3, [r7, #40]
 2010              		.loc 1 1104 38
 2011 0028 0023     		movs	r3, #0
 2012 002a 7B63     		str	r3, [r7, #52]
 2013              		.loc 1 1104 51
 2014 002c 0023     		movs	r3, #0
 2015 002e 7B62     		str	r3, [r7, #36]
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 2016              		.loc 1 1105 12
 2017 0030 0023     		movs	r3, #0
 2018 0032 3B63     		str	r3, [r7, #48]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 2019              		.loc 1 1107 15
 2020 0034 2F4B     		ldr	r3, .L129+8
 2021              		.loc 1 1107 10
 2022 0036 5B68     		ldr	r3, [r3, #4]
 2023 0038 FB62     		str	r3, [r7, #44]
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 2024              		.loc 1 1110 18
 2025 003a FB6A     		ldr	r3, [r7, #44]
 2026 003c 0C22     		movs	r2, #12
 2027 003e 1340     		ands	r3, r2
 2028              		.loc 1 1110 3
 2029 0040 0C2B     		cmp	r3, #12
 2030 0042 47D0     		beq	.L120
 2031 0044 49D8     		bhi	.L121
 2032 0046 042B     		cmp	r3, #4
 2033 0048 02D0     		beq	.L122
 2034 004a 082B     		cmp	r3, #8
 2035 004c 03D0     		beq	.L123
 2036 004e 44E0     		b	.L121
 2037              	.L122:
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 57


 2038              		.loc 1 1114 20
 2039 0050 294B     		ldr	r3, .L129+12
 2040 0052 3B63     		str	r3, [r7, #48]
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 2041              		.loc 1 1115 7
 2042 0054 44E0     		b	.L124
 2043              	.L123:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
 2044              		.loc 1 1119 72
 2045 0056 FB6A     		ldr	r3, [r7, #44]
 2046 0058 9B0C     		lsrs	r3, r3, #18
 2047 005a 0F22     		movs	r2, #15
 2048 005c 1340     		ands	r3, r2
 2049              		.loc 1 1119 34
 2050 005e 1422     		movs	r2, #20
 2051 0060 BA18     		adds	r2, r7, r2
 2052 0062 D35C     		ldrb	r3, [r2, r3]
 2053              		.loc 1 1119 14
 2054 0064 7B62     		str	r3, [r7, #36]
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 2055              		.loc 1 1120 49
 2056 0066 234B     		ldr	r3, .L129+8
 2057 0068 DB6A     		ldr	r3, [r3, #44]
 2058              		.loc 1 1120 77
 2059 006a 0F22     		movs	r2, #15
 2060 006c 1340     		ands	r3, r2
 2061              		.loc 1 1120 34
 2062 006e 3A1D     		adds	r2, r7, #4
 2063 0070 D35C     		ldrb	r3, [r2, r3]
 2064              		.loc 1 1120 14
 2065 0072 BB62     		str	r3, [r7, #40]
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 2066              		.loc 1 1121 19
 2067 0074 FA6A     		ldr	r2, [r7, #44]
 2068 0076 C023     		movs	r3, #192
 2069 0078 5B02     		lsls	r3, r3, #9
 2070 007a 1A40     		ands	r2, r3
 2071              		.loc 1 1121 10
 2072 007c 8023     		movs	r3, #128
 2073 007e 5B02     		lsls	r3, r3, #9
 2074 0080 9A42     		cmp	r2, r3
 2075 0082 09D1     		bne	.L125
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 2076              		.loc 1 1124 18
 2077 0084 B96A     		ldr	r1, [r7, #40]
 2078 0086 1C48     		ldr	r0, .L129+12
 2079 0088 FFF7FEFF 		bl	__aeabi_uidiv
 2080              	.LVL0:
 2081 008c 0300     		movs	r3, r0
 2082 008e 1A00     		movs	r2, r3
 2083              		.loc 1 1124 16
 2084 0090 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 58


 2085 0092 5343     		muls	r3, r2
 2086 0094 7B63     		str	r3, [r7, #52]
 2087 0096 1AE0     		b	.L126
 2088              	.L125:
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 2089              		.loc 1 1127 24
 2090 0098 FA6A     		ldr	r2, [r7, #44]
 2091 009a C023     		movs	r3, #192
 2092 009c 5B02     		lsls	r3, r3, #9
 2093 009e 1A40     		ands	r2, r3
 2094              		.loc 1 1127 15
 2095 00a0 C023     		movs	r3, #192
 2096 00a2 5B02     		lsls	r3, r3, #9
 2097 00a4 9A42     		cmp	r2, r3
 2098 00a6 09D1     		bne	.L127
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 2099              		.loc 1 1130 18
 2100 00a8 B96A     		ldr	r1, [r7, #40]
 2101 00aa 1448     		ldr	r0, .L129+16
 2102 00ac FFF7FEFF 		bl	__aeabi_uidiv
 2103              	.LVL1:
 2104 00b0 0300     		movs	r3, r0
 2105 00b2 1A00     		movs	r2, r3
 2106              		.loc 1 1130 16
 2107 00b4 7B6A     		ldr	r3, [r7, #36]
 2108 00b6 5343     		muls	r3, r2
 2109 00b8 7B63     		str	r3, [r7, #52]
 2110 00ba 08E0     		b	.L126
 2111              	.L127:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 2112              		.loc 1 1137 18
 2113 00bc B96A     		ldr	r1, [r7, #40]
 2114 00be 0E48     		ldr	r0, .L129+12
 2115 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 2116              	.LVL2:
 2117 00c4 0300     		movs	r3, r0
 2118 00c6 1A00     		movs	r2, r3
 2119              		.loc 1 1137 16
 2120 00c8 7B6A     		ldr	r3, [r7, #36]
 2121 00ca 5343     		muls	r3, r2
 2122 00cc 7B63     		str	r3, [r7, #52]
 2123              	.L126:
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 59


1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
 2124              		.loc 1 1143 20
 2125 00ce 7B6B     		ldr	r3, [r7, #52]
 2126 00d0 3B63     		str	r3, [r7, #48]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 2127              		.loc 1 1144 7
 2128 00d2 05E0     		b	.L124
 2129              	.L120:
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
 2130              		.loc 1 1149 20
 2131 00d4 094B     		ldr	r3, .L129+16
 2132 00d6 3B63     		str	r3, [r7, #48]
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 2133              		.loc 1 1150 7
 2134 00d8 02E0     		b	.L124
 2135              	.L121:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 2136              		.loc 1 1156 20
 2137 00da 074B     		ldr	r3, .L129+12
 2138 00dc 3B63     		str	r3, [r7, #48]
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 2139              		.loc 1 1157 7
 2140 00de C046     		nop
 2141              	.L124:
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
 2142              		.loc 1 1160 10
 2143 00e0 3B6B     		ldr	r3, [r7, #48]
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2144              		.loc 1 1161 1
 2145 00e2 1800     		movs	r0, r3
 2146 00e4 BD46     		mov	sp, r7
 2147 00e6 0FB0     		add	sp, sp, #60
 2148              		@ sp needed
 2149 00e8 90BD     		pop	{r4, r7, pc}
 2150              	.L130:
 2151 00ea C046     		.align	2
 2152              	.L129:
 2153 00ec 00000000 		.word	.LC4
 2154 00f0 10000000 		.word	.LC6
 2155 00f4 00100240 		.word	1073876992
 2156 00f8 00127A00 		.word	8000000
 2157 00fc 006CDC02 		.word	48000000
 2158              		.cfi_endproc
 2159              	.LFE46:
 2161              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2162              		.align	1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 60


 2163              		.global	HAL_RCC_GetHCLKFreq
 2164              		.syntax unified
 2165              		.code	16
 2166              		.thumb_func
 2167              		.fpu softvfp
 2169              	HAL_RCC_GetHCLKFreq:
 2170              	.LFB47:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2171              		.loc 1 1173 1
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 1, uses_anonymous_args = 0
 2175 0000 80B5     		push	{r7, lr}
 2176              	.LCFI19:
 2177              		.cfi_def_cfa_offset 8
 2178              		.cfi_offset 7, -8
 2179              		.cfi_offset 14, -4
 2180 0002 00AF     		add	r7, sp, #0
 2181              	.LCFI20:
 2182              		.cfi_def_cfa_register 7
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 2183              		.loc 1 1174 10
 2184 0004 024B     		ldr	r3, .L133
 2185 0006 1B68     		ldr	r3, [r3]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2186              		.loc 1 1175 1
 2187 0008 1800     		movs	r0, r3
 2188 000a BD46     		mov	sp, r7
 2189              		@ sp needed
 2190 000c 80BD     		pop	{r7, pc}
 2191              	.L134:
 2192 000e C046     		.align	2
 2193              	.L133:
 2194 0010 00000000 		.word	SystemCoreClock
 2195              		.cfi_endproc
 2196              	.LFE47:
 2198              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2199              		.align	1
 2200              		.global	HAL_RCC_GetPCLK1Freq
 2201              		.syntax unified
 2202              		.code	16
 2203              		.thumb_func
 2204              		.fpu softvfp
 2206              	HAL_RCC_GetPCLK1Freq:
 2207              	.LFB48:
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 61


1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2208              		.loc 1 1184 1
 2209              		.cfi_startproc
 2210              		@ args = 0, pretend = 0, frame = 0
 2211              		@ frame_needed = 1, uses_anonymous_args = 0
 2212 0000 80B5     		push	{r7, lr}
 2213              	.LCFI21:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 7, -8
 2216              		.cfi_offset 14, -4
 2217 0002 00AF     		add	r7, sp, #0
 2218              	.LCFI22:
 2219              		.cfi_def_cfa_register 7
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 2220              		.loc 1 1186 11
 2221 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2222 0008 0100     		movs	r1, r0
 2223              		.loc 1 1186 54
 2224 000a 064B     		ldr	r3, .L137
 2225 000c 5B68     		ldr	r3, [r3, #4]
 2226              		.loc 1 1186 78
 2227 000e 1B0A     		lsrs	r3, r3, #8
 2228 0010 0722     		movs	r2, #7
 2229 0012 1340     		ands	r3, r2
 2230              		.loc 1 1186 49
 2231 0014 044A     		ldr	r2, .L137+4
 2232 0016 D35C     		ldrb	r3, [r2, r3]
 2233              		.loc 1 1186 33
 2234 0018 D940     		lsrs	r1, r1, r3
 2235 001a 0B00     		movs	r3, r1
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 2236              		.loc 1 1187 1
 2237 001c 1800     		movs	r0, r3
 2238 001e BD46     		mov	sp, r7
 2239              		@ sp needed
 2240 0020 80BD     		pop	{r7, pc}
 2241              	.L138:
 2242 0022 C046     		.align	2
 2243              	.L137:
 2244 0024 00100240 		.word	1073876992
 2245 0028 00000000 		.word	APBPrescTable
 2246              		.cfi_endproc
 2247              	.LFE48:
 2249              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2250              		.align	1
 2251              		.global	HAL_RCC_GetOscConfig
 2252              		.syntax unified
 2253              		.code	16
 2254              		.thumb_func
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 62


 2255              		.fpu softvfp
 2257              	HAL_RCC_GetOscConfig:
 2258              	.LFB49:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2259              		.loc 1 1197 1
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 80B5     		push	{r7, lr}
 2264              	.LCFI23:
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 82B0     		sub	sp, sp, #8
 2269              	.LCFI24:
 2270              		.cfi_def_cfa_offset 16
 2271 0004 00AF     		add	r7, sp, #0
 2272              	.LCFI25:
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2275              		.loc 1 1202 37
 2276 0008 7B68     		ldr	r3, [r7, #4]
 2277 000a 1F22     		movs	r2, #31
 2278 000c 1A60     		str	r2, [r3]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 2279              		.loc 1 1205 37
 2280 000e 7B68     		ldr	r3, [r7, #4]
 2281 0010 1B68     		ldr	r3, [r3]
 2282 0012 2022     		movs	r2, #32
 2283 0014 1A43     		orrs	r2, r3
 2284 0016 7B68     		ldr	r3, [r7, #4]
 2285 0018 1A60     		str	r2, [r3]
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2286              		.loc 1 1210 10
 2287 001a 4E4B     		ldr	r3, .L154
 2288 001c 1A68     		ldr	r2, [r3]
 2289              		.loc 1 1210 15
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 63


 2290 001e 8023     		movs	r3, #128
 2291 0020 DB02     		lsls	r3, r3, #11
 2292 0022 1A40     		ands	r2, r3
 2293              		.loc 1 1210 5
 2294 0024 8023     		movs	r3, #128
 2295 0026 DB02     		lsls	r3, r3, #11
 2296 0028 9A42     		cmp	r2, r3
 2297 002a 03D1     		bne	.L140
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2298              		.loc 1 1212 33
 2299 002c 7B68     		ldr	r3, [r7, #4]
 2300 002e 0522     		movs	r2, #5
 2301 0030 5A60     		str	r2, [r3, #4]
 2302 0032 0FE0     		b	.L141
 2303              	.L140:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2304              		.loc 1 1214 15
 2305 0034 474B     		ldr	r3, .L154
 2306 0036 1A68     		ldr	r2, [r3]
 2307              		.loc 1 1214 20
 2308 0038 8023     		movs	r3, #128
 2309 003a 5B02     		lsls	r3, r3, #9
 2310 003c 1A40     		ands	r2, r3
 2311              		.loc 1 1214 10
 2312 003e 8023     		movs	r3, #128
 2313 0040 5B02     		lsls	r3, r3, #9
 2314 0042 9A42     		cmp	r2, r3
 2315 0044 03D1     		bne	.L142
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2316              		.loc 1 1216 33
 2317 0046 7B68     		ldr	r3, [r7, #4]
 2318 0048 0122     		movs	r2, #1
 2319 004a 5A60     		str	r2, [r3, #4]
 2320 004c 02E0     		b	.L141
 2321              	.L142:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2322              		.loc 1 1220 33
 2323 004e 7B68     		ldr	r3, [r7, #4]
 2324 0050 0022     		movs	r2, #0
 2325 0052 5A60     		str	r2, [r3, #4]
 2326              	.L141:
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2327              		.loc 1 1224 10
 2328 0054 3F4B     		ldr	r3, .L154
 2329 0056 1B68     		ldr	r3, [r3]
 2330              		.loc 1 1224 15
 2331 0058 0122     		movs	r2, #1
 2332 005a 1340     		ands	r3, r2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 64


 2333              		.loc 1 1224 5
 2334 005c 012B     		cmp	r3, #1
 2335 005e 03D1     		bne	.L143
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2336              		.loc 1 1226 33
 2337 0060 7B68     		ldr	r3, [r7, #4]
 2338 0062 0122     		movs	r2, #1
 2339 0064 DA60     		str	r2, [r3, #12]
 2340 0066 02E0     		b	.L144
 2341              	.L143:
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2342              		.loc 1 1230 33
 2343 0068 7B68     		ldr	r3, [r7, #4]
 2344 006a 0022     		movs	r2, #0
 2345 006c DA60     		str	r2, [r3, #12]
 2346              	.L144:
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 2347              		.loc 1 1233 59
 2348 006e 394B     		ldr	r3, .L154
 2349 0070 1B68     		ldr	r3, [r3]
 2350              		.loc 1 1233 44
 2351 0072 DB08     		lsrs	r3, r3, #3
 2352 0074 1F22     		movs	r2, #31
 2353 0076 1A40     		ands	r2, r3
 2354              		.loc 1 1233 42
 2355 0078 7B68     		ldr	r3, [r7, #4]
 2356 007a 1A61     		str	r2, [r3, #16]
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2357              		.loc 1 1236 10
 2358 007c 354B     		ldr	r3, .L154
 2359 007e 1B6A     		ldr	r3, [r3, #32]
 2360              		.loc 1 1236 17
 2361 0080 0422     		movs	r2, #4
 2362 0082 1340     		ands	r3, r2
 2363              		.loc 1 1236 5
 2364 0084 042B     		cmp	r3, #4
 2365 0086 03D1     		bne	.L145
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2366              		.loc 1 1238 33
 2367 0088 7B68     		ldr	r3, [r7, #4]
 2368 008a 0522     		movs	r2, #5
 2369 008c 9A60     		str	r2, [r3, #8]
 2370 008e 0CE0     		b	.L146
 2371              	.L145:
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2372              		.loc 1 1240 15
 2373 0090 304B     		ldr	r3, .L154
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 65


 2374 0092 1B6A     		ldr	r3, [r3, #32]
 2375              		.loc 1 1240 22
 2376 0094 0122     		movs	r2, #1
 2377 0096 1340     		ands	r3, r2
 2378              		.loc 1 1240 10
 2379 0098 012B     		cmp	r3, #1
 2380 009a 03D1     		bne	.L147
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2381              		.loc 1 1242 33
 2382 009c 7B68     		ldr	r3, [r7, #4]
 2383 009e 0122     		movs	r2, #1
 2384 00a0 9A60     		str	r2, [r3, #8]
 2385 00a2 02E0     		b	.L146
 2386              	.L147:
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2387              		.loc 1 1246 33
 2388 00a4 7B68     		ldr	r3, [r7, #4]
 2389 00a6 0022     		movs	r2, #0
 2390 00a8 9A60     		str	r2, [r3, #8]
 2391              	.L146:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2392              		.loc 1 1250 10
 2393 00aa 2A4B     		ldr	r3, .L154
 2394 00ac 5B6A     		ldr	r3, [r3, #36]
 2395              		.loc 1 1250 16
 2396 00ae 0122     		movs	r2, #1
 2397 00b0 1340     		ands	r3, r2
 2398              		.loc 1 1250 5
 2399 00b2 012B     		cmp	r3, #1
 2400 00b4 03D1     		bne	.L148
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2401              		.loc 1 1252 33
 2402 00b6 7B68     		ldr	r3, [r7, #4]
 2403 00b8 0122     		movs	r2, #1
 2404 00ba DA61     		str	r2, [r3, #28]
 2405 00bc 02E0     		b	.L149
 2406              	.L148:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2407              		.loc 1 1256 33
 2408 00be 7B68     		ldr	r3, [r7, #4]
 2409 00c0 0022     		movs	r2, #0
 2410 00c2 DA61     		str	r2, [r3, #28]
 2411              	.L149:
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 66


1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 2412              		.loc 1 1260 10
 2413 00c4 234B     		ldr	r3, .L154
 2414 00c6 5B6B     		ldr	r3, [r3, #52]
 2415              		.loc 1 1260 16
 2416 00c8 0122     		movs	r2, #1
 2417 00ca 1340     		ands	r3, r2
 2418              		.loc 1 1260 5
 2419 00cc 012B     		cmp	r3, #1
 2420 00ce 03D1     		bne	.L150
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 2421              		.loc 1 1262 35
 2422 00d0 7B68     		ldr	r3, [r7, #4]
 2423 00d2 0122     		movs	r2, #1
 2424 00d4 5A61     		str	r2, [r3, #20]
 2425 00d6 02E0     		b	.L151
 2426              	.L150:
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
 2427              		.loc 1 1266 35
 2428 00d8 7B68     		ldr	r3, [r7, #4]
 2429 00da 0022     		movs	r2, #0
 2430 00dc 5A61     		str	r2, [r3, #20]
 2431              	.L151:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 2432              		.loc 1 1269 61
 2433 00de 1D4B     		ldr	r3, .L154
 2434 00e0 5B6B     		ldr	r3, [r3, #52]
 2435              		.loc 1 1269 46
 2436 00e2 DB08     		lsrs	r3, r3, #3
 2437 00e4 1F22     		movs	r2, #31
 2438 00e6 1A40     		ands	r2, r3
 2439              		.loc 1 1269 44
 2440 00e8 7B68     		ldr	r3, [r7, #4]
 2441 00ea 9A61     		str	r2, [r3, #24]
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 2442              		.loc 1 1273 35
 2443 00ec 194B     		ldr	r3, .L154
 2444 00ee 5A6B     		ldr	r2, [r3, #52]
 2445 00f0 8023     		movs	r3, #128
 2446 00f2 5B02     		lsls	r3, r3, #9
 2447 00f4 1340     		ands	r3, r2
 2448 00f6 5A1E     		subs	r2, r3, #1
 2449 00f8 9341     		sbcs	r3, r3, r2
 2450 00fa DBB2     		uxtb	r3, r3
 2451 00fc 1A00     		movs	r2, r3
 2452              		.loc 1 1273 33
 2453 00fe 7B68     		ldr	r3, [r7, #4]
 2454 0100 1A62     		str	r2, [r3, #32]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 67


1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2455              		.loc 1 1277 10
 2456 0102 144B     		ldr	r3, .L154
 2457 0104 1A68     		ldr	r2, [r3]
 2458              		.loc 1 1277 15
 2459 0106 8023     		movs	r3, #128
 2460 0108 5B04     		lsls	r3, r3, #17
 2461 010a 1A40     		ands	r2, r3
 2462              		.loc 1 1277 5
 2463 010c 8023     		movs	r3, #128
 2464 010e 5B04     		lsls	r3, r3, #17
 2465 0110 9A42     		cmp	r2, r3
 2466 0112 03D1     		bne	.L152
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2467              		.loc 1 1279 37
 2468 0114 7B68     		ldr	r3, [r7, #4]
 2469 0116 0222     		movs	r2, #2
 2470 0118 5A62     		str	r2, [r3, #36]
 2471 011a 02E0     		b	.L153
 2472              	.L152:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2473              		.loc 1 1283 37
 2474 011c 7B68     		ldr	r3, [r7, #4]
 2475 011e 0122     		movs	r2, #1
 2476 0120 5A62     		str	r2, [r3, #36]
 2477              	.L153:
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2478              		.loc 1 1285 52
 2479 0122 0C4B     		ldr	r3, .L154
 2480 0124 5A68     		ldr	r2, [r3, #4]
 2481              		.loc 1 1285 38
 2482 0126 C023     		movs	r3, #192
 2483 0128 5B02     		lsls	r3, r3, #9
 2484 012a 1A40     		ands	r2, r3
 2485              		.loc 1 1285 36
 2486 012c 7B68     		ldr	r3, [r7, #4]
 2487 012e 9A62     		str	r2, [r3, #40]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2488              		.loc 1 1286 49
 2489 0130 084B     		ldr	r3, .L154
 2490 0132 5A68     		ldr	r2, [r3, #4]
 2491              		.loc 1 1286 35
 2492 0134 F023     		movs	r3, #240
 2493 0136 9B03     		lsls	r3, r3, #14
 2494 0138 1A40     		ands	r2, r3
 2495              		.loc 1 1286 33
 2496 013a 7B68     		ldr	r3, [r7, #4]
 2497 013c DA62     		str	r2, [r3, #44]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 68


 2498              		.loc 1 1287 49
 2499 013e 054B     		ldr	r3, .L154
 2500 0140 DB6A     		ldr	r3, [r3, #44]
 2501              		.loc 1 1287 35
 2502 0142 0F22     		movs	r2, #15
 2503 0144 1A40     		ands	r2, r3
 2504              		.loc 1 1287 33
 2505 0146 7B68     		ldr	r3, [r7, #4]
 2506 0148 1A63     		str	r2, [r3, #48]
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2507              		.loc 1 1288 1
 2508 014a C046     		nop
 2509 014c BD46     		mov	sp, r7
 2510 014e 02B0     		add	sp, sp, #8
 2511              		@ sp needed
 2512 0150 80BD     		pop	{r7, pc}
 2513              	.L155:
 2514 0152 C046     		.align	2
 2515              	.L154:
 2516 0154 00100240 		.word	1073876992
 2517              		.cfi_endproc
 2518              	.LFE49:
 2520              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2521              		.align	1
 2522              		.global	HAL_RCC_GetClockConfig
 2523              		.syntax unified
 2524              		.code	16
 2525              		.thumb_func
 2526              		.fpu softvfp
 2528              	HAL_RCC_GetClockConfig:
 2529              	.LFB50:
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2530              		.loc 1 1299 1
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 8
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0000 80B5     		push	{r7, lr}
 2535              	.LCFI26:
 2536              		.cfi_def_cfa_offset 8
 2537              		.cfi_offset 7, -8
 2538              		.cfi_offset 14, -4
 2539 0002 82B0     		sub	sp, sp, #8
 2540              	.LCFI27:
 2541              		.cfi_def_cfa_offset 16
 2542 0004 00AF     		add	r7, sp, #0
 2543              	.LCFI28:
 2544              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 69


 2545 0006 7860     		str	r0, [r7, #4]
 2546 0008 3960     		str	r1, [r7]
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 2547              		.loc 1 1305 32
 2548 000a 7B68     		ldr	r3, [r7, #4]
 2549 000c 0722     		movs	r2, #7
 2550 000e 1A60     		str	r2, [r3]
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2551              		.loc 1 1308 51
 2552 0010 0E4B     		ldr	r3, .L157
 2553 0012 5B68     		ldr	r3, [r3, #4]
 2554              		.loc 1 1308 37
 2555 0014 0322     		movs	r2, #3
 2556 0016 1A40     		ands	r2, r3
 2557              		.loc 1 1308 35
 2558 0018 7B68     		ldr	r3, [r7, #4]
 2559 001a 5A60     		str	r2, [r3, #4]
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2560              		.loc 1 1311 52
 2561 001c 0B4B     		ldr	r3, .L157
 2562 001e 5B68     		ldr	r3, [r3, #4]
 2563              		.loc 1 1311 38
 2564 0020 F022     		movs	r2, #240
 2565 0022 1A40     		ands	r2, r3
 2566              		.loc 1 1311 36
 2567 0024 7B68     		ldr	r3, [r7, #4]
 2568 0026 9A60     		str	r2, [r3, #8]
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 2569              		.loc 1 1314 53
 2570 0028 084B     		ldr	r3, .L157
 2571 002a 5A68     		ldr	r2, [r3, #4]
 2572              		.loc 1 1314 39
 2573 002c E023     		movs	r3, #224
 2574 002e DB00     		lsls	r3, r3, #3
 2575 0030 1A40     		ands	r2, r3
 2576              		.loc 1 1314 37
 2577 0032 7B68     		ldr	r3, [r7, #4]
 2578 0034 DA60     		str	r2, [r3, #12]
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY(); 
 2579              		.loc 1 1316 16
 2580 0036 064B     		ldr	r3, .L157+4
 2581 0038 1B68     		ldr	r3, [r3]
 2582 003a 0122     		movs	r2, #1
 2583 003c 1A40     		ands	r2, r3
 2584              		.loc 1 1316 14
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 70


 2585 003e 3B68     		ldr	r3, [r7]
 2586 0040 1A60     		str	r2, [r3]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2587              		.loc 1 1317 1
 2588 0042 C046     		nop
 2589 0044 BD46     		mov	sp, r7
 2590 0046 02B0     		add	sp, sp, #8
 2591              		@ sp needed
 2592 0048 80BD     		pop	{r7, pc}
 2593              	.L158:
 2594 004a C046     		.align	2
 2595              	.L157:
 2596 004c 00100240 		.word	1073876992
 2597 0050 00200240 		.word	1073881088
 2598              		.cfi_endproc
 2599              	.LFE50:
 2601              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2602              		.align	1
 2603              		.global	HAL_RCC_NMI_IRQHandler
 2604              		.syntax unified
 2605              		.code	16
 2606              		.thumb_func
 2607              		.fpu softvfp
 2609              	HAL_RCC_NMI_IRQHandler:
 2610              	.LFB51:
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2611              		.loc 1 1325 1
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 1, uses_anonymous_args = 0
 2615 0000 80B5     		push	{r7, lr}
 2616              	.LCFI29:
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 0002 00AF     		add	r7, sp, #0
 2621              	.LCFI30:
 2622              		.cfi_def_cfa_register 7
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2623              		.loc 1 1327 6
 2624 0004 064B     		ldr	r3, .L162
 2625 0006 9B68     		ldr	r3, [r3, #8]
 2626 0008 8022     		movs	r2, #128
 2627 000a 1340     		ands	r3, r2
 2628              		.loc 1 1327 5
 2629 000c 802B     		cmp	r3, #128
 2630 000e 04D1     		bne	.L161
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 71


1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2631              		.loc 1 1330 5
 2632 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2633              		.loc 1 1333 5
 2634 0014 034B     		ldr	r3, .L162+4
 2635 0016 8022     		movs	r2, #128
 2636 0018 1A70     		strb	r2, [r3]
 2637              	.L161:
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2638              		.loc 1 1335 1
 2639 001a C046     		nop
 2640 001c BD46     		mov	sp, r7
 2641              		@ sp needed
 2642 001e 80BD     		pop	{r7, pc}
 2643              	.L163:
 2644              		.align	2
 2645              	.L162:
 2646 0020 00100240 		.word	1073876992
 2647 0024 0A100240 		.word	1073877002
 2648              		.cfi_endproc
 2649              	.LFE51:
 2651              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2652              		.align	1
 2653              		.weak	HAL_RCC_CSSCallback
 2654              		.syntax unified
 2655              		.code	16
 2656              		.thumb_func
 2657              		.fpu softvfp
 2659              	HAL_RCC_CSSCallback:
 2660              	.LFB52:
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2661              		.loc 1 1342 1
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 0
 2664              		@ frame_needed = 1, uses_anonymous_args = 0
 2665 0000 80B5     		push	{r7, lr}
 2666              	.LCFI31:
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 7, -8
 2669              		.cfi_offset 14, -4
 2670 0002 00AF     		add	r7, sp, #0
 2671              	.LCFI32:
 2672              		.cfi_def_cfa_register 7
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 72


 2673              		.loc 1 1346 1
 2674 0004 C046     		nop
 2675 0006 BD46     		mov	sp, r7
 2676              		@ sp needed
 2677 0008 80BD     		pop	{r7, pc}
 2678              		.cfi_endproc
 2679              	.LFE52:
 2681              		.text
 2682              	.Letext0:
 2683              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2684              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 2685              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2686              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 2687              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2688              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2689              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2690              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2691              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s 			page 73


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rcc.c
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:16     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:24     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:201    .text.HAL_RCC_DeInit:000000ec $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:213    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:220    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:796    .text.HAL_RCC_OscConfig:00000338 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:802    .text.HAL_RCC_OscConfig:00000348 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1348   .text.HAL_RCC_OscConfig:0000067c $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1356   .text.HAL_RCC_OscConfig:00000694 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1447   .text.HAL_RCC_OscConfig:00000708 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1452   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1459   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1971   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1760   .text.HAL_RCC_ClockConfig:0000019c $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1770   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1777   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1864   .text.HAL_RCC_MCOConfig:00000078 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1870   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1877   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1907   .text.HAL_RCC_EnableCSS:00000018 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1912   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1919   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1948   .text.HAL_RCC_DisableCSS:00000018 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1955   .rodata:00000000 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:1964   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2153   .text.HAL_RCC_GetSysClockFreq:000000ec $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2162   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2169   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2194   .text.HAL_RCC_GetHCLKFreq:00000010 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2199   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2206   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2244   .text.HAL_RCC_GetPCLK1Freq:00000024 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2250   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2257   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2516   .text.HAL_RCC_GetOscConfig:00000154 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2521   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2528   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2596   .text.HAL_RCC_GetClockConfig:0000004c $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2602   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2609   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2659   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2646   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
C:\Users\Vulca\AppData\Local\Temp\cc5uWuBL.s:2652   .text.HAL_RCC_CSSCallback:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
__aeabi_uidiv
APBPrescTable

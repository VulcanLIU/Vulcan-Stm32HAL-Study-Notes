ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_UART_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_UART_Init:
  25              	.LFB40:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ==================================
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * All rights reserved.</center></h2>
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     are available in reference manual).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   following table.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Table 1. UART frame format.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  27              		.loc 1 288 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
  43              		.loc 1 290 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 292 12
  48 000e 0123     		movs	r3, #1
  49 0010 44E0     		b	.L3
  50              	.L2:
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 7


 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  51              		.loc 1 306 12
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 5B6F     		ldr	r3, [r3, #116]
  54              		.loc 1 306 6
  55 0016 002B     		cmp	r3, #0
  56 0018 07D1     		bne	.L4
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 309 17
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 7022     		movs	r2, #112
  60 001e 0021     		movs	r1, #0
  61 0020 9954     		strb	r1, [r3, r2]
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 323 5
  63 0022 7B68     		ldr	r3, [r7, #4]
  64 0024 1800     		movs	r0, r3
  65 0026 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 327 17
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 2422     		movs	r2, #36
  70 002e 5A67     		str	r2, [r3, #116]
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 329 3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 8


  72 0030 7B68     		ldr	r3, [r7, #4]
  73 0032 1B68     		ldr	r3, [r3]
  74 0034 1A68     		ldr	r2, [r3]
  75 0036 7B68     		ldr	r3, [r7, #4]
  76 0038 1B68     		ldr	r3, [r3]
  77 003a 0121     		movs	r1, #1
  78 003c 8A43     		bics	r2, r1
  79 003e 1A60     		str	r2, [r3]
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  80              		.loc 1 332 7
  81 0040 7B68     		ldr	r3, [r7, #4]
  82 0042 1800     		movs	r0, r3
  83 0044 FFF7FEFF 		bl	UART_SetConfig
  84 0048 0300     		movs	r3, r0
  85              		.loc 1 332 6
  86 004a 012B     		cmp	r3, #1
  87 004c 01D1     		bne	.L5
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  88              		.loc 1 334 12
  89 004e 0123     		movs	r3, #1
  90 0050 24E0     		b	.L3
  91              	.L5:
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  92              		.loc 1 337 26
  93 0052 7B68     		ldr	r3, [r7, #4]
  94 0054 5B6A     		ldr	r3, [r3, #36]
  95              		.loc 1 337 6
  96 0056 002B     		cmp	r3, #0
  97 0058 03D0     		beq	.L6
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  98              		.loc 1 339 5
  99 005a 7B68     		ldr	r3, [r7, #4]
 100 005c 1800     		movs	r0, r3
 101 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 102              	.L6:
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 103              		.loc 1 346 3
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 5A68     		ldr	r2, [r3, #4]
 107 0068 7B68     		ldr	r3, [r7, #4]
 108 006a 1B68     		ldr	r3, [r3]
 109 006c 0D49     		ldr	r1, .L7
 110 006e 0A40     		ands	r2, r1
 111 0070 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 9


 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 112              		.loc 1 352 3
 113 0072 7B68     		ldr	r3, [r7, #4]
 114 0074 1B68     		ldr	r3, [r3]
 115 0076 9A68     		ldr	r2, [r3, #8]
 116 0078 7B68     		ldr	r3, [r7, #4]
 117 007a 1B68     		ldr	r3, [r3]
 118 007c 2A21     		movs	r1, #42
 119 007e 8A43     		bics	r2, r1
 120 0080 9A60     		str	r2, [r3, #8]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 121              		.loc 1 364 3
 122 0082 7B68     		ldr	r3, [r7, #4]
 123 0084 1B68     		ldr	r3, [r3]
 124 0086 1A68     		ldr	r2, [r3]
 125 0088 7B68     		ldr	r3, [r7, #4]
 126 008a 1B68     		ldr	r3, [r3]
 127 008c 0121     		movs	r1, #1
 128 008e 0A43     		orrs	r2, r1
 129 0090 1A60     		str	r2, [r3]
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 130              		.loc 1 367 11
 131 0092 7B68     		ldr	r3, [r7, #4]
 132 0094 1800     		movs	r0, r3
 133 0096 FFF7FEFF 		bl	UART_CheckIdleState
 134 009a 0300     		movs	r3, r0
 135              	.L3:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 136              		.loc 1 368 1
 137 009c 1800     		movs	r0, r3
 138 009e BD46     		mov	sp, r7
 139 00a0 02B0     		add	sp, sp, #8
 140              		@ sp needed
 141 00a2 80BD     		pop	{r7, pc}
 142              	.L8:
 143              		.align	2
 144              	.L7:
 145 00a4 FFB7FFFF 		.word	-18433
 146              		.cfi_endproc
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 10


 147              	.LFE40:
 149              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 150              		.align	1
 151              		.global	HAL_HalfDuplex_Init
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 155              		.fpu softvfp
 157              	HAL_HalfDuplex_Init:
 158              	.LFB41:
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 159              		.loc 1 377 1
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              	.LCFI3:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 82B0     		sub	sp, sp, #8
 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 16
 171 0004 00AF     		add	r7, sp, #0
 172              	.LCFI5:
 173              		.cfi_def_cfa_register 7
 174 0006 7860     		str	r0, [r7, #4]
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 175              		.loc 1 379 6
 176 0008 7B68     		ldr	r3, [r7, #4]
 177 000a 002B     		cmp	r3, #0
 178 000c 01D1     		bne	.L10
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 179              		.loc 1 381 12
 180 000e 0123     		movs	r3, #1
 181 0010 4CE0     		b	.L11
 182              	.L10:
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 183              		.loc 1 387 12
 184 0012 7B68     		ldr	r3, [r7, #4]
 185 0014 5B6F     		ldr	r3, [r3, #116]
 186              		.loc 1 387 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 11


 187 0016 002B     		cmp	r3, #0
 188 0018 07D1     		bne	.L12
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 189              		.loc 1 390 17
 190 001a 7B68     		ldr	r3, [r7, #4]
 191 001c 7022     		movs	r2, #112
 192 001e 0021     		movs	r1, #0
 193 0020 9954     		strb	r1, [r3, r2]
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 194              		.loc 1 404 5
 195 0022 7B68     		ldr	r3, [r7, #4]
 196 0024 1800     		movs	r0, r3
 197 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 198              	.L12:
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 199              		.loc 1 408 17
 200 002a 7B68     		ldr	r3, [r7, #4]
 201 002c 2422     		movs	r2, #36
 202 002e 5A67     		str	r2, [r3, #116]
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 203              		.loc 1 410 3
 204 0030 7B68     		ldr	r3, [r7, #4]
 205 0032 1B68     		ldr	r3, [r3]
 206 0034 1A68     		ldr	r2, [r3]
 207 0036 7B68     		ldr	r3, [r7, #4]
 208 0038 1B68     		ldr	r3, [r3]
 209 003a 0121     		movs	r1, #1
 210 003c 8A43     		bics	r2, r1
 211 003e 1A60     		str	r2, [r3]
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 212              		.loc 1 413 7
 213 0040 7B68     		ldr	r3, [r7, #4]
 214 0042 1800     		movs	r0, r3
 215 0044 FFF7FEFF 		bl	UART_SetConfig
 216 0048 0300     		movs	r3, r0
 217              		.loc 1 413 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 12


 218 004a 012B     		cmp	r3, #1
 219 004c 01D1     		bne	.L13
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 220              		.loc 1 415 12
 221 004e 0123     		movs	r3, #1
 222 0050 2CE0     		b	.L11
 223              	.L13:
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 224              		.loc 1 418 26
 225 0052 7B68     		ldr	r3, [r7, #4]
 226 0054 5B6A     		ldr	r3, [r3, #36]
 227              		.loc 1 418 6
 228 0056 002B     		cmp	r3, #0
 229 0058 03D0     		beq	.L14
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 230              		.loc 1 420 5
 231 005a 7B68     		ldr	r3, [r7, #4]
 232 005c 1800     		movs	r0, r3
 233 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 234              	.L14:
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported) and IREN (if IrDA is supported) bits in the USART_CR3 register
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 235              		.loc 1 427 3
 236 0062 7B68     		ldr	r3, [r7, #4]
 237 0064 1B68     		ldr	r3, [r3]
 238 0066 5A68     		ldr	r2, [r3, #4]
 239 0068 7B68     		ldr	r3, [r7, #4]
 240 006a 1B68     		ldr	r3, [r3]
 241 006c 1149     		ldr	r1, .L15
 242 006e 0A40     		ands	r2, r1
 243 0070 5A60     		str	r2, [r3, #4]
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 244              		.loc 1 433 3
 245 0072 7B68     		ldr	r3, [r7, #4]
 246 0074 1B68     		ldr	r3, [r3]
 247 0076 9A68     		ldr	r2, [r3, #8]
 248 0078 7B68     		ldr	r3, [r7, #4]
 249 007a 1B68     		ldr	r3, [r3]
 250 007c 2221     		movs	r1, #34
 251 007e 8A43     		bics	r2, r1
 252 0080 9A60     		str	r2, [r3, #8]
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 13


 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 253              		.loc 1 444 3
 254 0082 7B68     		ldr	r3, [r7, #4]
 255 0084 1B68     		ldr	r3, [r3]
 256 0086 9A68     		ldr	r2, [r3, #8]
 257 0088 7B68     		ldr	r3, [r7, #4]
 258 008a 1B68     		ldr	r3, [r3]
 259 008c 0821     		movs	r1, #8
 260 008e 0A43     		orrs	r2, r1
 261 0090 9A60     		str	r2, [r3, #8]
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 262              		.loc 1 446 3
 263 0092 7B68     		ldr	r3, [r7, #4]
 264 0094 1B68     		ldr	r3, [r3]
 265 0096 1A68     		ldr	r2, [r3]
 266 0098 7B68     		ldr	r3, [r7, #4]
 267 009a 1B68     		ldr	r3, [r3]
 268 009c 0121     		movs	r1, #1
 269 009e 0A43     		orrs	r2, r1
 270 00a0 1A60     		str	r2, [r3]
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 271              		.loc 1 449 11
 272 00a2 7B68     		ldr	r3, [r7, #4]
 273 00a4 1800     		movs	r0, r3
 274 00a6 FFF7FEFF 		bl	UART_CheckIdleState
 275 00aa 0300     		movs	r3, r0
 276              	.L11:
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 277              		.loc 1 450 1
 278 00ac 1800     		movs	r0, r3
 279 00ae BD46     		mov	sp, r7
 280 00b0 02B0     		add	sp, sp, #8
 281              		@ sp needed
 282 00b2 80BD     		pop	{r7, pc}
 283              	.L16:
 284              		.align	2
 285              	.L15:
 286 00b4 FFB7FFFF 		.word	-18433
 287              		.cfi_endproc
 288              	.LFE41:
 290              		.section	.text.HAL_LIN_Init,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_LIN_Init
 293              		.syntax unified
 294              		.code	16
 295              		.thumb_func
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 14


 296              		.fpu softvfp
 298              	HAL_LIN_Init:
 299              	.LFB42:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart             UART handle.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 300              		.loc 1 465 1
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 82B0     		sub	sp, sp, #8
 310              	.LCFI7:
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI8:
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 316 0008 3960     		str	r1, [r7]
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 317              		.loc 1 467 6
 318 000a 7B68     		ldr	r3, [r7, #4]
 319 000c 002B     		cmp	r3, #0
 320 000e 01D1     		bne	.L18
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 321              		.loc 1 469 12
 322 0010 0123     		movs	r3, #1
 323 0012 66E0     		b	.L19
 324              	.L18:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the LIN UART instance */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 325              		.loc 1 478 18
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 15


 326 0014 7B68     		ldr	r3, [r7, #4]
 327 0016 DA69     		ldr	r2, [r3, #28]
 328              		.loc 1 478 6
 329 0018 8023     		movs	r3, #128
 330 001a 1B02     		lsls	r3, r3, #8
 331 001c 9A42     		cmp	r2, r3
 332 001e 01D1     		bne	.L20
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 333              		.loc 1 480 12
 334 0020 0123     		movs	r3, #1
 335 0022 5EE0     		b	.L19
 336              	.L20:
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 337              		.loc 1 483 18
 338 0024 7B68     		ldr	r3, [r7, #4]
 339 0026 9B68     		ldr	r3, [r3, #8]
 340              		.loc 1 483 6
 341 0028 002B     		cmp	r3, #0
 342 002a 01D0     		beq	.L21
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 343              		.loc 1 485 12
 344 002c 0123     		movs	r3, #1
 345 002e 58E0     		b	.L19
 346              	.L21:
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 347              		.loc 1 488 12
 348 0030 7B68     		ldr	r3, [r7, #4]
 349 0032 5B6F     		ldr	r3, [r3, #116]
 350              		.loc 1 488 6
 351 0034 002B     		cmp	r3, #0
 352 0036 07D1     		bne	.L22
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 353              		.loc 1 491 17
 354 0038 7B68     		ldr	r3, [r7, #4]
 355 003a 7022     		movs	r2, #112
 356 003c 0021     		movs	r1, #0
 357 003e 9954     		strb	r1, [r3, r2]
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 16


 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 358              		.loc 1 505 5
 359 0040 7B68     		ldr	r3, [r7, #4]
 360 0042 1800     		movs	r0, r3
 361 0044 FFF7FEFF 		bl	HAL_UART_MspInit
 362              	.L22:
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 363              		.loc 1 509 17
 364 0048 7B68     		ldr	r3, [r7, #4]
 365 004a 2422     		movs	r2, #36
 366 004c 5A67     		str	r2, [r3, #116]
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 367              		.loc 1 511 3
 368 004e 7B68     		ldr	r3, [r7, #4]
 369 0050 1B68     		ldr	r3, [r3]
 370 0052 1A68     		ldr	r2, [r3]
 371 0054 7B68     		ldr	r3, [r7, #4]
 372 0056 1B68     		ldr	r3, [r3]
 373 0058 0121     		movs	r1, #1
 374 005a 8A43     		bics	r2, r1
 375 005c 1A60     		str	r2, [r3]
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 376              		.loc 1 514 7
 377 005e 7B68     		ldr	r3, [r7, #4]
 378 0060 1800     		movs	r0, r3
 379 0062 FFF7FEFF 		bl	UART_SetConfig
 380 0066 0300     		movs	r3, r0
 381              		.loc 1 514 6
 382 0068 012B     		cmp	r3, #1
 383 006a 01D1     		bne	.L23
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 384              		.loc 1 516 12
 385 006c 0123     		movs	r3, #1
 386 006e 38E0     		b	.L19
 387              	.L23:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 388              		.loc 1 519 26
 389 0070 7B68     		ldr	r3, [r7, #4]
 390 0072 5B6A     		ldr	r3, [r3, #36]
 391              		.loc 1 519 6
 392 0074 002B     		cmp	r3, #0
 393 0076 03D0     		beq	.L24
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 394              		.loc 1 521 5
 395 0078 7B68     		ldr	r3, [r7, #4]
 396 007a 1800     		movs	r0, r3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 17


 397 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 398              	.L24:
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN(if Smartcard is supported) and IREN(if IrDA is supported) bits in the USART_CR3 register.*
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 399              		.loc 1 527 3
 400 0080 7B68     		ldr	r3, [r7, #4]
 401 0082 1B68     		ldr	r3, [r3]
 402 0084 5A68     		ldr	r2, [r3, #4]
 403 0086 7B68     		ldr	r3, [r7, #4]
 404 0088 1B68     		ldr	r3, [r3]
 405 008a 1849     		ldr	r1, .L25
 406 008c 0A40     		ands	r2, r1
 407 008e 5A60     		str	r2, [r3, #4]
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 408              		.loc 1 530 3
 409 0090 7B68     		ldr	r3, [r7, #4]
 410 0092 1B68     		ldr	r3, [r3]
 411 0094 9A68     		ldr	r2, [r3, #8]
 412 0096 7B68     		ldr	r3, [r7, #4]
 413 0098 1B68     		ldr	r3, [r3]
 414 009a 2A21     		movs	r1, #42
 415 009c 8A43     		bics	r2, r1
 416 009e 9A60     		str	r2, [r3, #8]
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 417              		.loc 1 543 3
 418 00a0 7B68     		ldr	r3, [r7, #4]
 419 00a2 1B68     		ldr	r3, [r3]
 420 00a4 5A68     		ldr	r2, [r3, #4]
 421 00a6 7B68     		ldr	r3, [r7, #4]
 422 00a8 1B68     		ldr	r3, [r3]
 423 00aa 8021     		movs	r1, #128
 424 00ac C901     		lsls	r1, r1, #7
 425 00ae 0A43     		orrs	r2, r1
 426 00b0 5A60     		str	r2, [r3, #4]
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 427              		.loc 1 546 3
 428 00b2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 18


 429 00b4 1B68     		ldr	r3, [r3]
 430 00b6 5B68     		ldr	r3, [r3, #4]
 431 00b8 2022     		movs	r2, #32
 432 00ba 9343     		bics	r3, r2
 433 00bc 1900     		movs	r1, r3
 434 00be 7B68     		ldr	r3, [r7, #4]
 435 00c0 1B68     		ldr	r3, [r3]
 436 00c2 3A68     		ldr	r2, [r7]
 437 00c4 0A43     		orrs	r2, r1
 438 00c6 5A60     		str	r2, [r3, #4]
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 439              		.loc 1 548 3
 440 00c8 7B68     		ldr	r3, [r7, #4]
 441 00ca 1B68     		ldr	r3, [r3]
 442 00cc 1A68     		ldr	r2, [r3]
 443 00ce 7B68     		ldr	r3, [r7, #4]
 444 00d0 1B68     		ldr	r3, [r3]
 445 00d2 0121     		movs	r1, #1
 446 00d4 0A43     		orrs	r2, r1
 447 00d6 1A60     		str	r2, [r3]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 448              		.loc 1 551 11
 449 00d8 7B68     		ldr	r3, [r7, #4]
 450 00da 1800     		movs	r0, r3
 451 00dc FFF7FEFF 		bl	UART_CheckIdleState
 452 00e0 0300     		movs	r3, r0
 453              	.L19:
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 454              		.loc 1 552 1
 455 00e2 1800     		movs	r0, r3
 456 00e4 BD46     		mov	sp, r7
 457 00e6 02B0     		add	sp, sp, #8
 458              		@ sp needed
 459 00e8 80BD     		pop	{r7, pc}
 460              	.L26:
 461 00ea C046     		.align	2
 462              	.L25:
 463 00ec FFB7FFFF 		.word	-18433
 464              		.cfi_endproc
 465              	.LFE42:
 467              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 468              		.align	1
 469              		.global	HAL_MultiProcessor_Init
 470              		.syntax unified
 471              		.code	16
 472              		.thumb_func
 473              		.fpu softvfp
 475              	HAL_MultiProcessor_Init:
 476              	.LFB43:
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 19


 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart        UART handle.
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 477              		.loc 1 575 1
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 16
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
 482              	.LCFI9:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 84B0     		sub	sp, sp, #16
 487              	.LCFI10:
 488              		.cfi_def_cfa_offset 24
 489 0004 00AF     		add	r7, sp, #0
 490              	.LCFI11:
 491              		.cfi_def_cfa_register 7
 492 0006 F860     		str	r0, [r7, #12]
 493 0008 7A60     		str	r2, [r7, #4]
 494 000a 0B23     		movs	r3, #11
 495 000c FB18     		adds	r3, r7, r3
 496 000e 0A1C     		adds	r2, r1, #0
 497 0010 1A70     		strb	r2, [r3]
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 498              		.loc 1 577 6
 499 0012 FB68     		ldr	r3, [r7, #12]
 500 0014 002B     		cmp	r3, #0
 501 0016 01D1     		bne	.L28
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 502              		.loc 1 579 12
 503 0018 0123     		movs	r3, #1
 504 001a 61E0     		b	.L29
 505              	.L28:
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 20


 506              		.loc 1 585 12
 507 001c FB68     		ldr	r3, [r7, #12]
 508 001e 5B6F     		ldr	r3, [r3, #116]
 509              		.loc 1 585 6
 510 0020 002B     		cmp	r3, #0
 511 0022 07D1     		bne	.L30
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 512              		.loc 1 588 17
 513 0024 FB68     		ldr	r3, [r7, #12]
 514 0026 7022     		movs	r2, #112
 515 0028 0021     		movs	r1, #0
 516 002a 9954     		strb	r1, [r3, r2]
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 517              		.loc 1 602 5
 518 002c FB68     		ldr	r3, [r7, #12]
 519 002e 1800     		movs	r0, r3
 520 0030 FFF7FEFF 		bl	HAL_UART_MspInit
 521              	.L30:
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 522              		.loc 1 606 17
 523 0034 FB68     		ldr	r3, [r7, #12]
 524 0036 2422     		movs	r2, #36
 525 0038 5A67     		str	r2, [r3, #116]
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 526              		.loc 1 608 3
 527 003a FB68     		ldr	r3, [r7, #12]
 528 003c 1B68     		ldr	r3, [r3]
 529 003e 1A68     		ldr	r2, [r3]
 530 0040 FB68     		ldr	r3, [r7, #12]
 531 0042 1B68     		ldr	r3, [r3]
 532 0044 0121     		movs	r1, #1
 533 0046 8A43     		bics	r2, r1
 534 0048 1A60     		str	r2, [r3]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 535              		.loc 1 611 7
 536 004a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 21


 537 004c 1800     		movs	r0, r3
 538 004e FFF7FEFF 		bl	UART_SetConfig
 539 0052 0300     		movs	r3, r0
 540              		.loc 1 611 6
 541 0054 012B     		cmp	r3, #1
 542 0056 01D1     		bne	.L31
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 543              		.loc 1 613 12
 544 0058 0123     		movs	r3, #1
 545 005a 41E0     		b	.L29
 546              	.L31:
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 547              		.loc 1 616 26
 548 005c FB68     		ldr	r3, [r7, #12]
 549 005e 5B6A     		ldr	r3, [r3, #36]
 550              		.loc 1 616 6
 551 0060 002B     		cmp	r3, #0
 552 0062 03D0     		beq	.L32
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 553              		.loc 1 618 5
 554 0064 FB68     		ldr	r3, [r7, #12]
 555 0066 1800     		movs	r0, r3
 556 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 557              	.L32:
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 558              		.loc 1 625 3
 559 006c FB68     		ldr	r3, [r7, #12]
 560 006e 1B68     		ldr	r3, [r3]
 561 0070 5A68     		ldr	r2, [r3, #4]
 562 0072 FB68     		ldr	r3, [r7, #12]
 563 0074 1B68     		ldr	r3, [r3]
 564 0076 1C49     		ldr	r1, .L34
 565 0078 0A40     		ands	r2, r1
 566 007a 5A60     		str	r2, [r3, #4]
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 567              		.loc 1 631 3
 568 007c FB68     		ldr	r3, [r7, #12]
 569 007e 1B68     		ldr	r3, [r3]
 570 0080 9A68     		ldr	r2, [r3, #8]
 571 0082 FB68     		ldr	r3, [r7, #12]
 572 0084 1B68     		ldr	r3, [r3]
 573 0086 2A21     		movs	r1, #42
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 22


 574 0088 8A43     		bics	r2, r1
 575 008a 9A60     		str	r2, [r3, #8]
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 576              		.loc 1 643 6
 577 008c 7A68     		ldr	r2, [r7, #4]
 578 008e 8023     		movs	r3, #128
 579 0090 1B01     		lsls	r3, r3, #4
 580 0092 9A42     		cmp	r2, r3
 581 0094 0CD1     		bne	.L33
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 582              		.loc 1 646 5
 583 0096 FB68     		ldr	r3, [r7, #12]
 584 0098 1B68     		ldr	r3, [r3]
 585 009a 5B68     		ldr	r3, [r3, #4]
 586 009c 1B02     		lsls	r3, r3, #8
 587 009e 190A     		lsrs	r1, r3, #8
 588 00a0 0B23     		movs	r3, #11
 589 00a2 FB18     		adds	r3, r7, r3
 590 00a4 1B78     		ldrb	r3, [r3]
 591 00a6 1A06     		lsls	r2, r3, #24
 592 00a8 FB68     		ldr	r3, [r7, #12]
 593 00aa 1B68     		ldr	r3, [r3]
 594 00ac 0A43     		orrs	r2, r1
 595 00ae 5A60     		str	r2, [r3, #4]
 596              	.L33:
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 597              		.loc 1 650 3
 598 00b0 FB68     		ldr	r3, [r7, #12]
 599 00b2 1B68     		ldr	r3, [r3]
 600 00b4 1B68     		ldr	r3, [r3]
 601 00b6 0D4A     		ldr	r2, .L34+4
 602 00b8 1340     		ands	r3, r2
 603 00ba 1900     		movs	r1, r3
 604 00bc FB68     		ldr	r3, [r7, #12]
 605 00be 1B68     		ldr	r3, [r3]
 606 00c0 7A68     		ldr	r2, [r7, #4]
 607 00c2 0A43     		orrs	r2, r1
 608 00c4 1A60     		str	r2, [r3]
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 609              		.loc 1 652 3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 23


 610 00c6 FB68     		ldr	r3, [r7, #12]
 611 00c8 1B68     		ldr	r3, [r3]
 612 00ca 1A68     		ldr	r2, [r3]
 613 00cc FB68     		ldr	r3, [r7, #12]
 614 00ce 1B68     		ldr	r3, [r3]
 615 00d0 0121     		movs	r1, #1
 616 00d2 0A43     		orrs	r2, r1
 617 00d4 1A60     		str	r2, [r3]
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 618              		.loc 1 655 11
 619 00d6 FB68     		ldr	r3, [r7, #12]
 620 00d8 1800     		movs	r0, r3
 621 00da FFF7FEFF 		bl	UART_CheckIdleState
 622 00de 0300     		movs	r3, r0
 623              	.L29:
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 624              		.loc 1 656 1
 625 00e0 1800     		movs	r0, r3
 626 00e2 BD46     		mov	sp, r7
 627 00e4 04B0     		add	sp, sp, #16
 628              		@ sp needed
 629 00e6 80BD     		pop	{r7, pc}
 630              	.L35:
 631              		.align	2
 632              	.L34:
 633 00e8 FFB7FFFF 		.word	-18433
 634 00ec FFF7FFFF 		.word	-2049
 635              		.cfi_endproc
 636              	.LFE43:
 638              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 639              		.align	1
 640              		.global	HAL_UART_DeInit
 641              		.syntax unified
 642              		.code	16
 643              		.thumb_func
 644              		.fpu softvfp
 646              	HAL_UART_DeInit:
 647              	.LFB44:
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 648              		.loc 1 665 1
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}
 653              	.LCFI12:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 7, -8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 24


 656              		.cfi_offset 14, -4
 657 0002 82B0     		sub	sp, sp, #8
 658              	.LCFI13:
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI14:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 664              		.loc 1 667 6
 665 0008 7B68     		ldr	r3, [r7, #4]
 666 000a 002B     		cmp	r3, #0
 667 000c 01D1     		bne	.L37
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 668              		.loc 1 669 12
 669 000e 0123     		movs	r3, #1
 670 0010 28E0     		b	.L38
 671              	.L37:
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 672              		.loc 1 675 17
 673 0012 7B68     		ldr	r3, [r7, #4]
 674 0014 2422     		movs	r2, #36
 675 0016 5A67     		str	r2, [r3, #116]
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 676              		.loc 1 677 3
 677 0018 7B68     		ldr	r3, [r7, #4]
 678 001a 1B68     		ldr	r3, [r3]
 679 001c 1A68     		ldr	r2, [r3]
 680 001e 7B68     		ldr	r3, [r7, #4]
 681 0020 1B68     		ldr	r3, [r3]
 682 0022 0121     		movs	r1, #1
 683 0024 8A43     		bics	r2, r1
 684 0026 1A60     		str	r2, [r3]
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 685              		.loc 1 679 8
 686 0028 7B68     		ldr	r3, [r7, #4]
 687 002a 1B68     		ldr	r3, [r3]
 688              		.loc 1 679 24
 689 002c 0022     		movs	r2, #0
 690 002e 1A60     		str	r2, [r3]
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 691              		.loc 1 680 8
 692 0030 7B68     		ldr	r3, [r7, #4]
 693 0032 1B68     		ldr	r3, [r3]
 694              		.loc 1 680 24
 695 0034 0022     		movs	r2, #0
 696 0036 5A60     		str	r2, [r3, #4]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 25


 697              		.loc 1 681 8
 698 0038 7B68     		ldr	r3, [r7, #4]
 699 003a 1B68     		ldr	r3, [r3]
 700              		.loc 1 681 24
 701 003c 0022     		movs	r2, #0
 702 003e 9A60     		str	r2, [r3, #8]
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 703              		.loc 1 692 3
 704 0040 7B68     		ldr	r3, [r7, #4]
 705 0042 1800     		movs	r0, r3
 706 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 707              		.loc 1 695 20
 708 0048 7B68     		ldr	r3, [r7, #4]
 709 004a 0022     		movs	r2, #0
 710 004c DA67     		str	r2, [r3, #124]
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 711              		.loc 1 696 17
 712 004e 7B68     		ldr	r3, [r7, #4]
 713 0050 0022     		movs	r2, #0
 714 0052 5A67     		str	r2, [r3, #116]
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 715              		.loc 1 697 18
 716 0054 7B68     		ldr	r3, [r7, #4]
 717 0056 0022     		movs	r2, #0
 718 0058 9A67     		str	r2, [r3, #120]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 719              		.loc 1 699 3
 720 005a 7B68     		ldr	r3, [r7, #4]
 721 005c 7022     		movs	r2, #112
 722 005e 0021     		movs	r1, #0
 723 0060 9954     		strb	r1, [r3, r2]
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 724              		.loc 1 701 10
 725 0062 0023     		movs	r3, #0
 726              	.L38:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 727              		.loc 1 702 1
 728 0064 1800     		movs	r0, r3
 729 0066 BD46     		mov	sp, r7
 730 0068 02B0     		add	sp, sp, #8
 731              		@ sp needed
 732 006a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 26


 733              		.cfi_endproc
 734              	.LFE44:
 736              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 737              		.align	1
 738              		.weak	HAL_UART_MspInit
 739              		.syntax unified
 740              		.code	16
 741              		.thumb_func
 742              		.fpu softvfp
 744              	HAL_UART_MspInit:
 745              	.LFB45:
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 746              		.loc 1 710 1
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 8
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750 0000 80B5     		push	{r7, lr}
 751              	.LCFI15:
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 82B0     		sub	sp, sp, #8
 756              	.LCFI16:
 757              		.cfi_def_cfa_offset 16
 758 0004 00AF     		add	r7, sp, #0
 759              	.LCFI17:
 760              		.cfi_def_cfa_register 7
 761 0006 7860     		str	r0, [r7, #4]
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762              		.loc 1 717 1
 763 0008 C046     		nop
 764 000a BD46     		mov	sp, r7
 765 000c 02B0     		add	sp, sp, #8
 766              		@ sp needed
 767 000e 80BD     		pop	{r7, pc}
 768              		.cfi_endproc
 769              	.LFE45:
 771              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 772              		.align	1
 773              		.weak	HAL_UART_MspDeInit
 774              		.syntax unified
 775              		.code	16
 776              		.thumb_func
 777              		.fpu softvfp
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 27


 779              	HAL_UART_MspDeInit:
 780              	.LFB46:
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 781              		.loc 1 725 1
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              	.LCFI18:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI19:
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              	.LCFI20:
 795              		.cfi_def_cfa_register 7
 796 0006 7860     		str	r0, [r7, #4]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 797              		.loc 1 732 1
 798 0008 C046     		nop
 799 000a BD46     		mov	sp, r7
 800 000c 02B0     		add	sp, sp, #8
 801              		@ sp needed
 802 000e 80BD     		pop	{r7, pc}
 803              		.cfi_endproc
 804              	.LFE46:
 806              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 807              		.align	1
 808              		.global	HAL_UART_Transmit
 809              		.syntax unified
 810              		.code	16
 811              		.thumb_func
 812              		.fpu softvfp
 814              	HAL_UART_Transmit:
 815              	.LFB47:
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 28


 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 29


 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 30


 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 31


 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 32


 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive()
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 33


1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort()
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 816              		.loc 1 1071 1
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 32
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0000 80B5     		push	{r7, lr}
 821              	.LCFI21:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 8AB0     		sub	sp, sp, #40
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 34


 826              	.LCFI22:
 827              		.cfi_def_cfa_offset 48
 828 0004 02AF     		add	r7, sp, #8
 829              	.LCFI23:
 830              		.cfi_def_cfa 7, 40
 831 0006 F860     		str	r0, [r7, #12]
 832 0008 B960     		str	r1, [r7, #8]
 833 000a 3B60     		str	r3, [r7]
 834 000c BB1D     		adds	r3, r7, #6
 835 000e 1A80     		strh	r2, [r3]
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 836              		.loc 1 1077 12
 837 0010 FB68     		ldr	r3, [r7, #12]
 838 0012 5B6F     		ldr	r3, [r3, #116]
 839              		.loc 1 1077 6
 840 0014 202B     		cmp	r3, #32
 841 0016 00D0     		beq	.LCB700
 842 0018 95E0     		b	.L42	@long jump
 843              	.LCB700:
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 844              		.loc 1 1079 8
 845 001a BB68     		ldr	r3, [r7, #8]
 846 001c 002B     		cmp	r3, #0
 847 001e 03D0     		beq	.L43
 848              		.loc 1 1079 25 discriminator 1
 849 0020 BB1D     		adds	r3, r7, #6
 850 0022 1B88     		ldrh	r3, [r3]
 851 0024 002B     		cmp	r3, #0
 852 0026 01D1     		bne	.L44
 853              	.L43:
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 854              		.loc 1 1081 15
 855 0028 0123     		movs	r3, #1
 856 002a 8DE0     		b	.L45
 857              	.L44:
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 858              		.loc 1 1087 21
 859 002c FB68     		ldr	r3, [r7, #12]
 860 002e 9A68     		ldr	r2, [r3, #8]
 861              		.loc 1 1087 8
 862 0030 8023     		movs	r3, #128
 863 0032 5B01     		lsls	r3, r3, #5
 864 0034 9A42     		cmp	r2, r3
 865 0036 09D1     		bne	.L46
 866              		.loc 1 1087 71 discriminator 1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 35


 867 0038 FB68     		ldr	r3, [r7, #12]
 868 003a 1B69     		ldr	r3, [r3, #16]
 869              		.loc 1 1087 56 discriminator 1
 870 003c 002B     		cmp	r3, #0
 871 003e 05D1     		bne	.L46
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 872              		.loc 1 1089 13
 873 0040 BB68     		ldr	r3, [r7, #8]
 874              		.loc 1 1089 30
 875 0042 0122     		movs	r2, #1
 876 0044 1340     		ands	r3, r2
 877              		.loc 1 1089 10
 878 0046 01D0     		beq	.L46
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879              		.loc 1 1091 17
 880 0048 0123     		movs	r3, #1
 881 004a 7DE0     		b	.L45
 882              	.L46:
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 883              		.loc 1 1095 5
 884 004c FB68     		ldr	r3, [r7, #12]
 885 004e 7022     		movs	r2, #112
 886 0050 9B5C     		ldrb	r3, [r3, r2]
 887 0052 012B     		cmp	r3, #1
 888 0054 01D1     		bne	.L47
 889              		.loc 1 1095 5 is_stmt 0 discriminator 1
 890 0056 0223     		movs	r3, #2
 891 0058 76E0     		b	.L45
 892              	.L47:
 893              		.loc 1 1095 5 discriminator 2
 894 005a FB68     		ldr	r3, [r7, #12]
 895 005c 7022     		movs	r2, #112
 896 005e 0121     		movs	r1, #1
 897 0060 9954     		strb	r1, [r3, r2]
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 898              		.loc 1 1097 22 is_stmt 1 discriminator 2
 899 0062 FB68     		ldr	r3, [r7, #12]
 900 0064 0022     		movs	r2, #0
 901 0066 DA67     		str	r2, [r3, #124]
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 902              		.loc 1 1098 19 discriminator 2
 903 0068 FB68     		ldr	r3, [r7, #12]
 904 006a 2122     		movs	r2, #33
 905 006c 5A67     		str	r2, [r3, #116]
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 906              		.loc 1 1101 17 discriminator 2
 907 006e FFF7FEFF 		bl	HAL_GetTick
 908 0072 0300     		movs	r3, r0
 909 0074 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 36


1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 910              		.loc 1 1103 24 discriminator 2
 911 0076 FB68     		ldr	r3, [r7, #12]
 912 0078 BA1D     		adds	r2, r7, #6
 913 007a 5021     		movs	r1, #80
 914 007c 1288     		ldrh	r2, [r2]
 915 007e 5A52     		strh	r2, [r3, r1]
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 916              		.loc 1 1104 24 discriminator 2
 917 0080 FB68     		ldr	r3, [r7, #12]
 918 0082 BA1D     		adds	r2, r7, #6
 919 0084 5221     		movs	r1, #82
 920 0086 1288     		ldrh	r2, [r2]
 921 0088 5A52     		strh	r2, [r3, r1]
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 922              		.loc 1 1107 21 discriminator 2
 923 008a FB68     		ldr	r3, [r7, #12]
 924 008c 9A68     		ldr	r2, [r3, #8]
 925              		.loc 1 1107 8 discriminator 2
 926 008e 8023     		movs	r3, #128
 927 0090 5B01     		lsls	r3, r3, #5
 928 0092 9A42     		cmp	r2, r3
 929 0094 08D1     		bne	.L48
 930              		.loc 1 1107 71 discriminator 1
 931 0096 FB68     		ldr	r3, [r7, #12]
 932 0098 1B69     		ldr	r3, [r3, #16]
 933              		.loc 1 1107 56 discriminator 1
 934 009a 002B     		cmp	r3, #0
 935 009c 04D1     		bne	.L48
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
 936              		.loc 1 1109 19
 937 009e 0023     		movs	r3, #0
 938 00a0 FB61     		str	r3, [r7, #28]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 939              		.loc 1 1110 19
 940 00a2 BB68     		ldr	r3, [r7, #8]
 941 00a4 BB61     		str	r3, [r7, #24]
 942 00a6 03E0     		b	.L49
 943              	.L48:
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
 944              		.loc 1 1114 19
 945 00a8 BB68     		ldr	r3, [r7, #8]
 946 00aa FB61     		str	r3, [r7, #28]
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
 947              		.loc 1 1115 19
 948 00ac 0023     		movs	r3, #0
 949 00ae BB61     		str	r3, [r7, #24]
 950              	.L49:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 37


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 951              		.loc 1 1118 11
 952 00b0 2DE0     		b	.L50
 953              	.L54:
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 954              		.loc 1 1120 11
 955 00b2 7A69     		ldr	r2, [r7, #20]
 956 00b4 F868     		ldr	r0, [r7, #12]
 957 00b6 3B68     		ldr	r3, [r7]
 958 00b8 0093     		str	r3, [sp]
 959 00ba 1300     		movs	r3, r2
 960 00bc 0022     		movs	r2, #0
 961 00be 8021     		movs	r1, #128
 962 00c0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 963 00c4 031E     		subs	r3, r0, #0
 964              		.loc 1 1120 10
 965 00c6 01D0     		beq	.L51
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 966              		.loc 1 1122 16
 967 00c8 0323     		movs	r3, #3
 968 00ca 3DE0     		b	.L45
 969              	.L51:
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
 970              		.loc 1 1124 10
 971 00cc FB69     		ldr	r3, [r7, #28]
 972 00ce 002B     		cmp	r3, #0
 973 00d0 0BD1     		bne	.L52
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 974              		.loc 1 1126 43
 975 00d2 BB69     		ldr	r3, [r7, #24]
 976 00d4 1A88     		ldrh	r2, [r3]
 977              		.loc 1 1126 14
 978 00d6 FB68     		ldr	r3, [r7, #12]
 979 00d8 1B68     		ldr	r3, [r3]
 980              		.loc 1 1126 32
 981 00da D205     		lsls	r2, r2, #23
 982 00dc D20D     		lsrs	r2, r2, #23
 983 00de 92B2     		uxth	r2, r2
 984              		.loc 1 1126 30
 985 00e0 1A85     		strh	r2, [r3, #40]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 986              		.loc 1 1127 20
 987 00e2 BB69     		ldr	r3, [r7, #24]
 988 00e4 0233     		adds	r3, r3, #2
 989 00e6 BB61     		str	r3, [r7, #24]
 990 00e8 08E0     		b	.L53
 991              	.L52:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 992              		.loc 1 1131 42
 993 00ea FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 38


 994 00ec 1A78     		ldrb	r2, [r3]
 995              		.loc 1 1131 14
 996 00ee FB68     		ldr	r3, [r7, #12]
 997 00f0 1B68     		ldr	r3, [r3]
 998              		.loc 1 1131 32
 999 00f2 92B2     		uxth	r2, r2
 1000              		.loc 1 1131 30
 1001 00f4 1A85     		strh	r2, [r3, #40]
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 1002              		.loc 1 1132 19
 1003 00f6 FB69     		ldr	r3, [r7, #28]
 1004 00f8 0133     		adds	r3, r3, #1
 1005 00fa FB61     		str	r3, [r7, #28]
 1006              	.L53:
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 1007              		.loc 1 1134 12
 1008 00fc FB68     		ldr	r3, [r7, #12]
 1009 00fe 5222     		movs	r2, #82
 1010 0100 9B5A     		ldrh	r3, [r3, r2]
 1011 0102 9BB2     		uxth	r3, r3
 1012              		.loc 1 1134 25
 1013 0104 013B     		subs	r3, r3, #1
 1014 0106 99B2     		uxth	r1, r3
 1015 0108 FB68     		ldr	r3, [r7, #12]
 1016 010a 5222     		movs	r2, #82
 1017 010c 9952     		strh	r1, [r3, r2]
 1018              	.L50:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1019              		.loc 1 1118 17
 1020 010e FB68     		ldr	r3, [r7, #12]
 1021 0110 5222     		movs	r2, #82
 1022 0112 9B5A     		ldrh	r3, [r3, r2]
 1023 0114 9BB2     		uxth	r3, r3
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1024              		.loc 1 1118 11
 1025 0116 002B     		cmp	r3, #0
 1026 0118 CBD1     		bne	.L54
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1027              		.loc 1 1137 9
 1028 011a 7A69     		ldr	r2, [r7, #20]
 1029 011c F868     		ldr	r0, [r7, #12]
 1030 011e 3B68     		ldr	r3, [r7]
 1031 0120 0093     		str	r3, [sp]
 1032 0122 1300     		movs	r3, r2
 1033 0124 0022     		movs	r2, #0
 1034 0126 4021     		movs	r1, #64
 1035 0128 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1036 012c 031E     		subs	r3, r0, #0
 1037              		.loc 1 1137 8
 1038 012e 01D0     		beq	.L55
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 1039              		.loc 1 1139 14
 1040 0130 0323     		movs	r3, #3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 39


 1041 0132 09E0     		b	.L45
 1042              	.L55:
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1043              		.loc 1 1143 19
 1044 0134 FB68     		ldr	r3, [r7, #12]
 1045 0136 2022     		movs	r2, #32
 1046 0138 5A67     		str	r2, [r3, #116]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1047              		.loc 1 1145 5
 1048 013a FB68     		ldr	r3, [r7, #12]
 1049 013c 7022     		movs	r2, #112
 1050 013e 0021     		movs	r1, #0
 1051 0140 9954     		strb	r1, [r3, r2]
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1052              		.loc 1 1147 12
 1053 0142 0023     		movs	r3, #0
 1054 0144 00E0     		b	.L45
 1055              	.L42:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1056              		.loc 1 1151 12
 1057 0146 0223     		movs	r3, #2
 1058              	.L45:
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1059              		.loc 1 1153 1
 1060 0148 1800     		movs	r0, r3
 1061 014a BD46     		mov	sp, r7
 1062 014c 08B0     		add	sp, sp, #32
 1063              		@ sp needed
 1064 014e 80BD     		pop	{r7, pc}
 1065              		.cfi_endproc
 1066              	.LFE47:
 1068              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1069              		.align	1
 1070              		.global	HAL_UART_Receive
 1071              		.syntax unified
 1072              		.code	16
 1073              		.thumb_func
 1074              		.fpu softvfp
 1076              	HAL_UART_Receive:
 1077              	.LFB48:
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 40


1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1078              		.loc 1 1171 1
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 32
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082 0000 80B5     		push	{r7, lr}
 1083              	.LCFI24:
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 8AB0     		sub	sp, sp, #40
 1088              	.LCFI25:
 1089              		.cfi_def_cfa_offset 48
 1090 0004 02AF     		add	r7, sp, #8
 1091              	.LCFI26:
 1092              		.cfi_def_cfa 7, 40
 1093 0006 F860     		str	r0, [r7, #12]
 1094 0008 B960     		str	r1, [r7, #8]
 1095 000a 3B60     		str	r3, [r7]
 1096 000c BB1D     		adds	r3, r7, #6
 1097 000e 1A80     		strh	r2, [r3]
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1098              		.loc 1 1178 12
 1099 0010 FB68     		ldr	r3, [r7, #12]
 1100 0012 9B6F     		ldr	r3, [r3, #120]
 1101              		.loc 1 1178 6
 1102 0014 202B     		cmp	r3, #32
 1103 0016 00D0     		beq	.LCB922
 1104 0018 D6E0     		b	.L57	@long jump
 1105              	.LCB922:
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1106              		.loc 1 1180 8
 1107 001a BB68     		ldr	r3, [r7, #8]
 1108 001c 002B     		cmp	r3, #0
 1109 001e 03D0     		beq	.L58
 1110              		.loc 1 1180 25 discriminator 1
 1111 0020 BB1D     		adds	r3, r7, #6
 1112 0022 1B88     		ldrh	r3, [r3]
 1113 0024 002B     		cmp	r3, #0
 1114 0026 01D1     		bne	.L59
 1115              	.L58:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 41


1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 1116              		.loc 1 1182 15
 1117 0028 0123     		movs	r3, #1
 1118 002a CEE0     		b	.L60
 1119              	.L59:
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1120              		.loc 1 1188 21
 1121 002c FB68     		ldr	r3, [r7, #12]
 1122 002e 9A68     		ldr	r2, [r3, #8]
 1123              		.loc 1 1188 8
 1124 0030 8023     		movs	r3, #128
 1125 0032 5B01     		lsls	r3, r3, #5
 1126 0034 9A42     		cmp	r2, r3
 1127 0036 09D1     		bne	.L61
 1128              		.loc 1 1188 71 discriminator 1
 1129 0038 FB68     		ldr	r3, [r7, #12]
 1130 003a 1B69     		ldr	r3, [r3, #16]
 1131              		.loc 1 1188 56 discriminator 1
 1132 003c 002B     		cmp	r3, #0
 1133 003e 05D1     		bne	.L61
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1134              		.loc 1 1190 13
 1135 0040 BB68     		ldr	r3, [r7, #8]
 1136              		.loc 1 1190 30
 1137 0042 0122     		movs	r2, #1
 1138 0044 1340     		ands	r3, r2
 1139              		.loc 1 1190 10
 1140 0046 01D0     		beq	.L61
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1141              		.loc 1 1192 17
 1142 0048 0123     		movs	r3, #1
 1143 004a BEE0     		b	.L60
 1144              	.L61:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1145              		.loc 1 1196 5
 1146 004c FB68     		ldr	r3, [r7, #12]
 1147 004e 7022     		movs	r2, #112
 1148 0050 9B5C     		ldrb	r3, [r3, r2]
 1149 0052 012B     		cmp	r3, #1
 1150 0054 01D1     		bne	.L62
 1151              		.loc 1 1196 5 is_stmt 0 discriminator 1
 1152 0056 0223     		movs	r3, #2
 1153 0058 B7E0     		b	.L60
 1154              	.L62:
 1155              		.loc 1 1196 5 discriminator 2
 1156 005a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 42


 1157 005c 7022     		movs	r2, #112
 1158 005e 0121     		movs	r1, #1
 1159 0060 9954     		strb	r1, [r3, r2]
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1160              		.loc 1 1198 22 is_stmt 1 discriminator 2
 1161 0062 FB68     		ldr	r3, [r7, #12]
 1162 0064 0022     		movs	r2, #0
 1163 0066 DA67     		str	r2, [r3, #124]
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1164              		.loc 1 1199 20 discriminator 2
 1165 0068 FB68     		ldr	r3, [r7, #12]
 1166 006a 2222     		movs	r2, #34
 1167 006c 9A67     		str	r2, [r3, #120]
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1168              		.loc 1 1202 17 discriminator 2
 1169 006e FFF7FEFF 		bl	HAL_GetTick
 1170 0072 0300     		movs	r3, r0
 1171 0074 7B61     		str	r3, [r7, #20]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1172              		.loc 1 1204 24 discriminator 2
 1173 0076 FB68     		ldr	r3, [r7, #12]
 1174 0078 BA1D     		adds	r2, r7, #6
 1175 007a 5821     		movs	r1, #88
 1176 007c 1288     		ldrh	r2, [r2]
 1177 007e 5A52     		strh	r2, [r3, r1]
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 1178              		.loc 1 1205 24 discriminator 2
 1179 0080 FB68     		ldr	r3, [r7, #12]
 1180 0082 BA1D     		adds	r2, r7, #6
 1181 0084 5A21     		movs	r1, #90
 1182 0086 1288     		ldrh	r2, [r2]
 1183 0088 5A52     		strh	r2, [r3, r1]
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1184              		.loc 1 1208 5 discriminator 2
 1185 008a FB68     		ldr	r3, [r7, #12]
 1186 008c 9A68     		ldr	r2, [r3, #8]
 1187 008e 8023     		movs	r3, #128
 1188 0090 5B01     		lsls	r3, r3, #5
 1189 0092 9A42     		cmp	r2, r3
 1190 0094 0DD1     		bne	.L63
 1191              		.loc 1 1208 5 is_stmt 0 discriminator 1
 1192 0096 FB68     		ldr	r3, [r7, #12]
 1193 0098 1B69     		ldr	r3, [r3, #16]
 1194 009a 002B     		cmp	r3, #0
 1195 009c 04D1     		bne	.L64
 1196              		.loc 1 1208 5 discriminator 3
 1197 009e FB68     		ldr	r3, [r7, #12]
 1198 00a0 5C22     		movs	r2, #92
 1199 00a2 4C49     		ldr	r1, .L77
 1200 00a4 9952     		strh	r1, [r3, r2]
 1201 00a6 2EE0     		b	.L65
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 43


 1202              	.L64:
 1203              		.loc 1 1208 5 discriminator 4
 1204 00a8 FB68     		ldr	r3, [r7, #12]
 1205 00aa 5C22     		movs	r2, #92
 1206 00ac FF21     		movs	r1, #255
 1207 00ae 9952     		strh	r1, [r3, r2]
 1208 00b0 29E0     		b	.L65
 1209              	.L63:
 1210              		.loc 1 1208 5 discriminator 2
 1211 00b2 FB68     		ldr	r3, [r7, #12]
 1212 00b4 9B68     		ldr	r3, [r3, #8]
 1213 00b6 002B     		cmp	r3, #0
 1214 00b8 0DD1     		bne	.L66
 1215              		.loc 1 1208 5 discriminator 5
 1216 00ba FB68     		ldr	r3, [r7, #12]
 1217 00bc 1B69     		ldr	r3, [r3, #16]
 1218 00be 002B     		cmp	r3, #0
 1219 00c0 04D1     		bne	.L67
 1220              		.loc 1 1208 5 discriminator 7
 1221 00c2 FB68     		ldr	r3, [r7, #12]
 1222 00c4 5C22     		movs	r2, #92
 1223 00c6 FF21     		movs	r1, #255
 1224 00c8 9952     		strh	r1, [r3, r2]
 1225 00ca 1CE0     		b	.L65
 1226              	.L67:
 1227              		.loc 1 1208 5 discriminator 8
 1228 00cc FB68     		ldr	r3, [r7, #12]
 1229 00ce 5C22     		movs	r2, #92
 1230 00d0 7F21     		movs	r1, #127
 1231 00d2 9952     		strh	r1, [r3, r2]
 1232 00d4 17E0     		b	.L65
 1233              	.L66:
 1234              		.loc 1 1208 5 discriminator 6
 1235 00d6 FB68     		ldr	r3, [r7, #12]
 1236 00d8 9A68     		ldr	r2, [r3, #8]
 1237 00da 8023     		movs	r3, #128
 1238 00dc 5B05     		lsls	r3, r3, #21
 1239 00de 9A42     		cmp	r2, r3
 1240 00e0 0DD1     		bne	.L68
 1241              		.loc 1 1208 5 discriminator 9
 1242 00e2 FB68     		ldr	r3, [r7, #12]
 1243 00e4 1B69     		ldr	r3, [r3, #16]
 1244 00e6 002B     		cmp	r3, #0
 1245 00e8 04D1     		bne	.L69
 1246              		.loc 1 1208 5 discriminator 11
 1247 00ea FB68     		ldr	r3, [r7, #12]
 1248 00ec 5C22     		movs	r2, #92
 1249 00ee 7F21     		movs	r1, #127
 1250 00f0 9952     		strh	r1, [r3, r2]
 1251 00f2 08E0     		b	.L65
 1252              	.L69:
 1253              		.loc 1 1208 5 discriminator 12
 1254 00f4 FB68     		ldr	r3, [r7, #12]
 1255 00f6 5C22     		movs	r2, #92
 1256 00f8 3F21     		movs	r1, #63
 1257 00fa 9952     		strh	r1, [r3, r2]
 1258 00fc 03E0     		b	.L65
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 44


 1259              	.L68:
 1260              		.loc 1 1208 5 discriminator 10
 1261 00fe FB68     		ldr	r3, [r7, #12]
 1262 0100 5C22     		movs	r2, #92
 1263 0102 0021     		movs	r1, #0
 1264 0104 9952     		strh	r1, [r3, r2]
 1265              	.L65:
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 1266              		.loc 1 1209 12 is_stmt 1
 1267 0106 1223     		movs	r3, #18
 1268 0108 FB18     		adds	r3, r7, r3
 1269 010a FA68     		ldr	r2, [r7, #12]
 1270 010c 5C21     		movs	r1, #92
 1271 010e 525A     		ldrh	r2, [r2, r1]
 1272 0110 1A80     		strh	r2, [r3]
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1273              		.loc 1 1212 21
 1274 0112 FB68     		ldr	r3, [r7, #12]
 1275 0114 9A68     		ldr	r2, [r3, #8]
 1276              		.loc 1 1212 8
 1277 0116 8023     		movs	r3, #128
 1278 0118 5B01     		lsls	r3, r3, #5
 1279 011a 9A42     		cmp	r2, r3
 1280 011c 08D1     		bne	.L70
 1281              		.loc 1 1212 71 discriminator 1
 1282 011e FB68     		ldr	r3, [r7, #12]
 1283 0120 1B69     		ldr	r3, [r3, #16]
 1284              		.loc 1 1212 56 discriminator 1
 1285 0122 002B     		cmp	r3, #0
 1286 0124 04D1     		bne	.L70
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
 1287              		.loc 1 1214 19
 1288 0126 0023     		movs	r3, #0
 1289 0128 FB61     		str	r3, [r7, #28]
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1290              		.loc 1 1215 19
 1291 012a BB68     		ldr	r3, [r7, #8]
 1292 012c BB61     		str	r3, [r7, #24]
 1293 012e 03E0     		b	.L71
 1294              	.L70:
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
 1295              		.loc 1 1219 19
 1296 0130 BB68     		ldr	r3, [r7, #8]
 1297 0132 FB61     		str	r3, [r7, #28]
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
 1298              		.loc 1 1220 19
 1299 0134 0023     		movs	r3, #0
 1300 0136 BB61     		str	r3, [r7, #24]
 1301              	.L71:
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 45


1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1302              		.loc 1 1224 11
 1303 0138 37E0     		b	.L72
 1304              	.L76:
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1305              		.loc 1 1226 11
 1306 013a 7A69     		ldr	r2, [r7, #20]
 1307 013c F868     		ldr	r0, [r7, #12]
 1308 013e 3B68     		ldr	r3, [r7]
 1309 0140 0093     		str	r3, [sp]
 1310 0142 1300     		movs	r3, r2
 1311 0144 0022     		movs	r2, #0
 1312 0146 2021     		movs	r1, #32
 1313 0148 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1314 014c 031E     		subs	r3, r0, #0
 1315              		.loc 1 1226 10
 1316 014e 01D0     		beq	.L73
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 1317              		.loc 1 1228 16
 1318 0150 0323     		movs	r3, #3
 1319 0152 3AE0     		b	.L60
 1320              	.L73:
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
 1321              		.loc 1 1230 10
 1322 0154 FB69     		ldr	r3, [r7, #28]
 1323 0156 002B     		cmp	r3, #0
 1324 0158 0ED1     		bne	.L74
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1325              		.loc 1 1232 40
 1326 015a FB68     		ldr	r3, [r7, #12]
 1327 015c 1B68     		ldr	r3, [r3]
 1328              		.loc 1 1232 50
 1329 015e 9B8C     		ldrh	r3, [r3, #36]
 1330 0160 9BB2     		uxth	r3, r3
 1331              		.loc 1 1232 24
 1332 0162 1222     		movs	r2, #18
 1333 0164 BA18     		adds	r2, r7, r2
 1334 0166 1288     		ldrh	r2, [r2]
 1335 0168 1340     		ands	r3, r2
 1336 016a 9AB2     		uxth	r2, r3
 1337              		.loc 1 1232 22
 1338 016c BB69     		ldr	r3, [r7, #24]
 1339 016e 1A80     		strh	r2, [r3]
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 1340              		.loc 1 1233 20
 1341 0170 BB69     		ldr	r3, [r7, #24]
 1342 0172 0233     		adds	r3, r3, #2
 1343 0174 BB61     		str	r3, [r7, #24]
 1344 0176 0FE0     		b	.L75
 1345              	.L74:
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 46


1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1346              		.loc 1 1237 38
 1347 0178 FB68     		ldr	r3, [r7, #12]
 1348 017a 1B68     		ldr	r3, [r3]
 1349              		.loc 1 1237 48
 1350 017c 9B8C     		ldrh	r3, [r3, #36]
 1351 017e 9BB2     		uxth	r3, r3
 1352              		.loc 1 1237 23
 1353 0180 DBB2     		uxtb	r3, r3
 1354              		.loc 1 1237 56
 1355 0182 1222     		movs	r2, #18
 1356 0184 BA18     		adds	r2, r7, r2
 1357 0186 1288     		ldrh	r2, [r2]
 1358 0188 D2B2     		uxtb	r2, r2
 1359              		.loc 1 1237 23
 1360 018a 1340     		ands	r3, r2
 1361 018c DAB2     		uxtb	r2, r3
 1362              		.loc 1 1237 21
 1363 018e FB69     		ldr	r3, [r7, #28]
 1364 0190 1A70     		strb	r2, [r3]
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 1365              		.loc 1 1238 19
 1366 0192 FB69     		ldr	r3, [r7, #28]
 1367 0194 0133     		adds	r3, r3, #1
 1368 0196 FB61     		str	r3, [r7, #28]
 1369              	.L75:
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 1370              		.loc 1 1240 12
 1371 0198 FB68     		ldr	r3, [r7, #12]
 1372 019a 5A22     		movs	r2, #90
 1373 019c 9B5A     		ldrh	r3, [r3, r2]
 1374 019e 9BB2     		uxth	r3, r3
 1375              		.loc 1 1240 25
 1376 01a0 013B     		subs	r3, r3, #1
 1377 01a2 99B2     		uxth	r1, r3
 1378 01a4 FB68     		ldr	r3, [r7, #12]
 1379 01a6 5A22     		movs	r2, #90
 1380 01a8 9952     		strh	r1, [r3, r2]
 1381              	.L72:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1382              		.loc 1 1224 17
 1383 01aa FB68     		ldr	r3, [r7, #12]
 1384 01ac 5A22     		movs	r2, #90
 1385 01ae 9B5A     		ldrh	r3, [r3, r2]
 1386 01b0 9BB2     		uxth	r3, r3
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1387              		.loc 1 1224 11
 1388 01b2 002B     		cmp	r3, #0
 1389 01b4 C1D1     		bne	.L76
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1390              		.loc 1 1244 20
 1391 01b6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 47


 1392 01b8 2022     		movs	r2, #32
 1393 01ba 9A67     		str	r2, [r3, #120]
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1394              		.loc 1 1246 5
 1395 01bc FB68     		ldr	r3, [r7, #12]
 1396 01be 7022     		movs	r2, #112
 1397 01c0 0021     		movs	r1, #0
 1398 01c2 9954     		strb	r1, [r3, r2]
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1399              		.loc 1 1248 12
 1400 01c4 0023     		movs	r3, #0
 1401 01c6 00E0     		b	.L60
 1402              	.L57:
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1403              		.loc 1 1252 12
 1404 01c8 0223     		movs	r3, #2
 1405              	.L60:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1406              		.loc 1 1254 1
 1407 01ca 1800     		movs	r0, r3
 1408 01cc BD46     		mov	sp, r7
 1409 01ce 08B0     		add	sp, sp, #32
 1410              		@ sp needed
 1411 01d0 80BD     		pop	{r7, pc}
 1412              	.L78:
 1413 01d2 C046     		.align	2
 1414              	.L77:
 1415 01d4 FF010000 		.word	511
 1416              		.cfi_endproc
 1417              	.LFE48:
 1419              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1420              		.align	1
 1421              		.global	HAL_UART_Transmit_IT
 1422              		.syntax unified
 1423              		.code	16
 1424              		.thumb_func
 1425              		.fpu softvfp
 1427              	HAL_UART_Transmit_IT:
 1428              	.LFB49:
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 48


1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1429              		.loc 1 1271 1
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 16
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433 0000 80B5     		push	{r7, lr}
 1434              	.LCFI27:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 7, -8
 1437              		.cfi_offset 14, -4
 1438 0002 84B0     		sub	sp, sp, #16
 1439              	.LCFI28:
 1440              		.cfi_def_cfa_offset 24
 1441 0004 00AF     		add	r7, sp, #0
 1442              	.LCFI29:
 1443              		.cfi_def_cfa_register 7
 1444 0006 F860     		str	r0, [r7, #12]
 1445 0008 B960     		str	r1, [r7, #8]
 1446 000a BB1D     		adds	r3, r7, #6
 1447 000c 1A80     		strh	r2, [r3]
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1448              		.loc 1 1273 12
 1449 000e FB68     		ldr	r3, [r7, #12]
 1450 0010 5B6F     		ldr	r3, [r3, #116]
 1451              		.loc 1 1273 6
 1452 0012 202B     		cmp	r3, #32
 1453 0014 58D1     		bne	.L80
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1454              		.loc 1 1275 8
 1455 0016 BB68     		ldr	r3, [r7, #8]
 1456 0018 002B     		cmp	r3, #0
 1457 001a 03D0     		beq	.L81
 1458              		.loc 1 1275 25 discriminator 1
 1459 001c BB1D     		adds	r3, r7, #6
 1460 001e 1B88     		ldrh	r3, [r3]
 1461 0020 002B     		cmp	r3, #0
 1462 0022 01D1     		bne	.L82
 1463              	.L81:
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1464              		.loc 1 1277 14
 1465 0024 0123     		movs	r3, #1
 1466 0026 50E0     		b	.L83
 1467              	.L82:
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1468              		.loc 1 1283 21
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 49


 1469 0028 FB68     		ldr	r3, [r7, #12]
 1470 002a 9A68     		ldr	r2, [r3, #8]
 1471              		.loc 1 1283 8
 1472 002c 8023     		movs	r3, #128
 1473 002e 5B01     		lsls	r3, r3, #5
 1474 0030 9A42     		cmp	r2, r3
 1475 0032 09D1     		bne	.L84
 1476              		.loc 1 1283 71 discriminator 1
 1477 0034 FB68     		ldr	r3, [r7, #12]
 1478 0036 1B69     		ldr	r3, [r3, #16]
 1479              		.loc 1 1283 56 discriminator 1
 1480 0038 002B     		cmp	r3, #0
 1481 003a 05D1     		bne	.L84
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1482              		.loc 1 1285 13
 1483 003c BB68     		ldr	r3, [r7, #8]
 1484              		.loc 1 1285 30
 1485 003e 0122     		movs	r2, #1
 1486 0040 1340     		ands	r3, r2
 1487              		.loc 1 1285 10
 1488 0042 01D0     		beq	.L84
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1489              		.loc 1 1287 17
 1490 0044 0123     		movs	r3, #1
 1491 0046 40E0     		b	.L83
 1492              	.L84:
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1493              		.loc 1 1291 5
 1494 0048 FB68     		ldr	r3, [r7, #12]
 1495 004a 7022     		movs	r2, #112
 1496 004c 9B5C     		ldrb	r3, [r3, r2]
 1497 004e 012B     		cmp	r3, #1
 1498 0050 01D1     		bne	.L85
 1499              		.loc 1 1291 5 is_stmt 0 discriminator 1
 1500 0052 0223     		movs	r3, #2
 1501 0054 39E0     		b	.L83
 1502              	.L85:
 1503              		.loc 1 1291 5 discriminator 2
 1504 0056 FB68     		ldr	r3, [r7, #12]
 1505 0058 7022     		movs	r2, #112
 1506 005a 0121     		movs	r1, #1
 1507 005c 9954     		strb	r1, [r3, r2]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1508              		.loc 1 1293 24 is_stmt 1 discriminator 2
 1509 005e FB68     		ldr	r3, [r7, #12]
 1510 0060 BA68     		ldr	r2, [r7, #8]
 1511 0062 DA64     		str	r2, [r3, #76]
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1512              		.loc 1 1294 24 discriminator 2
 1513 0064 FB68     		ldr	r3, [r7, #12]
 1514 0066 BA1D     		adds	r2, r7, #6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 50


 1515 0068 5021     		movs	r1, #80
 1516 006a 1288     		ldrh	r2, [r2]
 1517 006c 5A52     		strh	r2, [r3, r1]
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1518              		.loc 1 1295 24 discriminator 2
 1519 006e FB68     		ldr	r3, [r7, #12]
 1520 0070 BA1D     		adds	r2, r7, #6
 1521 0072 5221     		movs	r1, #82
 1522 0074 1288     		ldrh	r2, [r2]
 1523 0076 5A52     		strh	r2, [r3, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
 1524              		.loc 1 1296 24 discriminator 2
 1525 0078 FB68     		ldr	r3, [r7, #12]
 1526 007a 0022     		movs	r2, #0
 1527 007c 5A66     		str	r2, [r3, #100]
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1528              		.loc 1 1298 22 discriminator 2
 1529 007e FB68     		ldr	r3, [r7, #12]
 1530 0080 0022     		movs	r2, #0
 1531 0082 DA67     		str	r2, [r3, #124]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1532              		.loc 1 1299 19 discriminator 2
 1533 0084 FB68     		ldr	r3, [r7, #12]
 1534 0086 2122     		movs	r2, #33
 1535 0088 5A67     		str	r2, [r3, #116]
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1536              		.loc 1 1302 21 discriminator 2
 1537 008a FB68     		ldr	r3, [r7, #12]
 1538 008c 9A68     		ldr	r2, [r3, #8]
 1539              		.loc 1 1302 8 discriminator 2
 1540 008e 8023     		movs	r3, #128
 1541 0090 5B01     		lsls	r3, r3, #5
 1542 0092 9A42     		cmp	r2, r3
 1543 0094 07D1     		bne	.L86
 1544              		.loc 1 1302 71 discriminator 1
 1545 0096 FB68     		ldr	r3, [r7, #12]
 1546 0098 1B69     		ldr	r3, [r3, #16]
 1547              		.loc 1 1302 56 discriminator 1
 1548 009a 002B     		cmp	r3, #0
 1549 009c 03D1     		bne	.L86
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1550              		.loc 1 1304 20
 1551 009e FB68     		ldr	r3, [r7, #12]
 1552 00a0 0C4A     		ldr	r2, .L88
 1553 00a2 5A66     		str	r2, [r3, #100]
 1554 00a4 02E0     		b	.L87
 1555              	.L86:
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1556              		.loc 1 1308 20
 1557 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 51


 1558 00a8 0B4A     		ldr	r2, .L88+4
 1559 00aa 5A66     		str	r2, [r3, #100]
 1560              	.L87:
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1561              		.loc 1 1311 5
 1562 00ac FB68     		ldr	r3, [r7, #12]
 1563 00ae 7022     		movs	r2, #112
 1564 00b0 0021     		movs	r1, #0
 1565 00b2 9954     		strb	r1, [r3, r2]
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1566              		.loc 1 1314 5
 1567 00b4 FB68     		ldr	r3, [r7, #12]
 1568 00b6 1B68     		ldr	r3, [r3]
 1569 00b8 1A68     		ldr	r2, [r3]
 1570 00ba FB68     		ldr	r3, [r7, #12]
 1571 00bc 1B68     		ldr	r3, [r3]
 1572 00be 8021     		movs	r1, #128
 1573 00c0 0A43     		orrs	r2, r1
 1574 00c2 1A60     		str	r2, [r3]
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1575              		.loc 1 1316 12
 1576 00c4 0023     		movs	r3, #0
 1577 00c6 00E0     		b	.L83
 1578              	.L80:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1579              		.loc 1 1320 12
 1580 00c8 0223     		movs	r3, #2
 1581              	.L83:
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1582              		.loc 1 1322 1
 1583 00ca 1800     		movs	r0, r3
 1584 00cc BD46     		mov	sp, r7
 1585 00ce 04B0     		add	sp, sp, #16
 1586              		@ sp needed
 1587 00d0 80BD     		pop	{r7, pc}
 1588              	.L89:
 1589 00d2 C046     		.align	2
 1590              	.L88:
 1591 00d4 00000000 		.word	UART_TxISR_16BIT
 1592 00d8 00000000 		.word	UART_TxISR_8BIT
 1593              		.cfi_endproc
 1594              	.LFE49:
 1596              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1597              		.align	1
 1598              		.global	HAL_UART_Receive_IT
 1599              		.syntax unified
 1600              		.code	16
 1601              		.thumb_func
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 52


 1602              		.fpu softvfp
 1604              	HAL_UART_Receive_IT:
 1605              	.LFB50:
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1606              		.loc 1 1339 1
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 16
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610 0000 80B5     		push	{r7, lr}
 1611              	.LCFI30:
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 84B0     		sub	sp, sp, #16
 1616              	.LCFI31:
 1617              		.cfi_def_cfa_offset 24
 1618 0004 00AF     		add	r7, sp, #0
 1619              	.LCFI32:
 1620              		.cfi_def_cfa_register 7
 1621 0006 F860     		str	r0, [r7, #12]
 1622 0008 B960     		str	r1, [r7, #8]
 1623 000a BB1D     		adds	r3, r7, #6
 1624 000c 1A80     		strh	r2, [r3]
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1625              		.loc 1 1341 12
 1626 000e FB68     		ldr	r3, [r7, #12]
 1627 0010 9B6F     		ldr	r3, [r3, #120]
 1628              		.loc 1 1341 6
 1629 0012 202B     		cmp	r3, #32
 1630 0014 00D0     		beq	.LCB1384
 1631 0016 9FE0     		b	.L91	@long jump
 1632              	.LCB1384:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1633              		.loc 1 1343 8
 1634 0018 BB68     		ldr	r3, [r7, #8]
 1635 001a 002B     		cmp	r3, #0
 1636 001c 03D0     		beq	.L92
 1637              		.loc 1 1343 25 discriminator 1
 1638 001e BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 53


 1639 0020 1B88     		ldrh	r3, [r3]
 1640 0022 002B     		cmp	r3, #0
 1641 0024 01D1     		bne	.L93
 1642              	.L92:
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1643              		.loc 1 1345 14
 1644 0026 0123     		movs	r3, #1
 1645 0028 97E0     		b	.L94
 1646              	.L93:
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1647              		.loc 1 1351 21
 1648 002a FB68     		ldr	r3, [r7, #12]
 1649 002c 9A68     		ldr	r2, [r3, #8]
 1650              		.loc 1 1351 8
 1651 002e 8023     		movs	r3, #128
 1652 0030 5B01     		lsls	r3, r3, #5
 1653 0032 9A42     		cmp	r2, r3
 1654 0034 09D1     		bne	.L95
 1655              		.loc 1 1351 71 discriminator 1
 1656 0036 FB68     		ldr	r3, [r7, #12]
 1657 0038 1B69     		ldr	r3, [r3, #16]
 1658              		.loc 1 1351 56 discriminator 1
 1659 003a 002B     		cmp	r3, #0
 1660 003c 05D1     		bne	.L95
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1661              		.loc 1 1353 13
 1662 003e BB68     		ldr	r3, [r7, #8]
 1663              		.loc 1 1353 30
 1664 0040 0122     		movs	r2, #1
 1665 0042 1340     		ands	r3, r2
 1666              		.loc 1 1353 10
 1667 0044 01D0     		beq	.L95
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1668              		.loc 1 1355 17
 1669 0046 0123     		movs	r3, #1
 1670 0048 87E0     		b	.L94
 1671              	.L95:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1672              		.loc 1 1359 5
 1673 004a FB68     		ldr	r3, [r7, #12]
 1674 004c 7022     		movs	r2, #112
 1675 004e 9B5C     		ldrb	r3, [r3, r2]
 1676 0050 012B     		cmp	r3, #1
 1677 0052 01D1     		bne	.L96
 1678              		.loc 1 1359 5 is_stmt 0 discriminator 1
 1679 0054 0223     		movs	r3, #2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 54


 1680 0056 80E0     		b	.L94
 1681              	.L96:
 1682              		.loc 1 1359 5 discriminator 2
 1683 0058 FB68     		ldr	r3, [r7, #12]
 1684 005a 7022     		movs	r2, #112
 1685 005c 0121     		movs	r1, #1
 1686 005e 9954     		strb	r1, [r3, r2]
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
 1687              		.loc 1 1361 24 is_stmt 1 discriminator 2
 1688 0060 FB68     		ldr	r3, [r7, #12]
 1689 0062 BA68     		ldr	r2, [r7, #8]
 1690 0064 5A65     		str	r2, [r3, #84]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1691              		.loc 1 1362 24 discriminator 2
 1692 0066 FB68     		ldr	r3, [r7, #12]
 1693 0068 BA1D     		adds	r2, r7, #6
 1694 006a 5821     		movs	r1, #88
 1695 006c 1288     		ldrh	r2, [r2]
 1696 006e 5A52     		strh	r2, [r3, r1]
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 1697              		.loc 1 1363 24 discriminator 2
 1698 0070 FB68     		ldr	r3, [r7, #12]
 1699 0072 BA1D     		adds	r2, r7, #6
 1700 0074 5A21     		movs	r1, #90
 1701 0076 1288     		ldrh	r2, [r2]
 1702 0078 5A52     		strh	r2, [r3, r1]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR       = NULL;
 1703              		.loc 1 1364 24 discriminator 2
 1704 007a FB68     		ldr	r3, [r7, #12]
 1705 007c 0022     		movs	r2, #0
 1706 007e 1A66     		str	r2, [r3, #96]
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1707              		.loc 1 1367 5 discriminator 2
 1708 0080 FB68     		ldr	r3, [r7, #12]
 1709 0082 9A68     		ldr	r2, [r3, #8]
 1710 0084 8023     		movs	r3, #128
 1711 0086 5B01     		lsls	r3, r3, #5
 1712 0088 9A42     		cmp	r2, r3
 1713 008a 0DD1     		bne	.L97
 1714              		.loc 1 1367 5 is_stmt 0 discriminator 1
 1715 008c FB68     		ldr	r3, [r7, #12]
 1716 008e 1B69     		ldr	r3, [r3, #16]
 1717 0090 002B     		cmp	r3, #0
 1718 0092 04D1     		bne	.L98
 1719              		.loc 1 1367 5 discriminator 3
 1720 0094 FB68     		ldr	r3, [r7, #12]
 1721 0096 5C22     		movs	r2, #92
 1722 0098 3249     		ldr	r1, .L106
 1723 009a 9952     		strh	r1, [r3, r2]
 1724 009c 2EE0     		b	.L99
 1725              	.L98:
 1726              		.loc 1 1367 5 discriminator 4
 1727 009e FB68     		ldr	r3, [r7, #12]
 1728 00a0 5C22     		movs	r2, #92
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 55


 1729 00a2 FF21     		movs	r1, #255
 1730 00a4 9952     		strh	r1, [r3, r2]
 1731 00a6 29E0     		b	.L99
 1732              	.L97:
 1733              		.loc 1 1367 5 discriminator 2
 1734 00a8 FB68     		ldr	r3, [r7, #12]
 1735 00aa 9B68     		ldr	r3, [r3, #8]
 1736 00ac 002B     		cmp	r3, #0
 1737 00ae 0DD1     		bne	.L100
 1738              		.loc 1 1367 5 discriminator 5
 1739 00b0 FB68     		ldr	r3, [r7, #12]
 1740 00b2 1B69     		ldr	r3, [r3, #16]
 1741 00b4 002B     		cmp	r3, #0
 1742 00b6 04D1     		bne	.L101
 1743              		.loc 1 1367 5 discriminator 7
 1744 00b8 FB68     		ldr	r3, [r7, #12]
 1745 00ba 5C22     		movs	r2, #92
 1746 00bc FF21     		movs	r1, #255
 1747 00be 9952     		strh	r1, [r3, r2]
 1748 00c0 1CE0     		b	.L99
 1749              	.L101:
 1750              		.loc 1 1367 5 discriminator 8
 1751 00c2 FB68     		ldr	r3, [r7, #12]
 1752 00c4 5C22     		movs	r2, #92
 1753 00c6 7F21     		movs	r1, #127
 1754 00c8 9952     		strh	r1, [r3, r2]
 1755 00ca 17E0     		b	.L99
 1756              	.L100:
 1757              		.loc 1 1367 5 discriminator 6
 1758 00cc FB68     		ldr	r3, [r7, #12]
 1759 00ce 9A68     		ldr	r2, [r3, #8]
 1760 00d0 8023     		movs	r3, #128
 1761 00d2 5B05     		lsls	r3, r3, #21
 1762 00d4 9A42     		cmp	r2, r3
 1763 00d6 0DD1     		bne	.L102
 1764              		.loc 1 1367 5 discriminator 9
 1765 00d8 FB68     		ldr	r3, [r7, #12]
 1766 00da 1B69     		ldr	r3, [r3, #16]
 1767 00dc 002B     		cmp	r3, #0
 1768 00de 04D1     		bne	.L103
 1769              		.loc 1 1367 5 discriminator 11
 1770 00e0 FB68     		ldr	r3, [r7, #12]
 1771 00e2 5C22     		movs	r2, #92
 1772 00e4 7F21     		movs	r1, #127
 1773 00e6 9952     		strh	r1, [r3, r2]
 1774 00e8 08E0     		b	.L99
 1775              	.L103:
 1776              		.loc 1 1367 5 discriminator 12
 1777 00ea FB68     		ldr	r3, [r7, #12]
 1778 00ec 5C22     		movs	r2, #92
 1779 00ee 3F21     		movs	r1, #63
 1780 00f0 9952     		strh	r1, [r3, r2]
 1781 00f2 03E0     		b	.L99
 1782              	.L102:
 1783              		.loc 1 1367 5 discriminator 10
 1784 00f4 FB68     		ldr	r3, [r7, #12]
 1785 00f6 5C22     		movs	r2, #92
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 56


 1786 00f8 0021     		movs	r1, #0
 1787 00fa 9952     		strh	r1, [r3, r2]
 1788              	.L99:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1789              		.loc 1 1369 22 is_stmt 1
 1790 00fc FB68     		ldr	r3, [r7, #12]
 1791 00fe 0022     		movs	r2, #0
 1792 0100 DA67     		str	r2, [r3, #124]
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1793              		.loc 1 1370 20
 1794 0102 FB68     		ldr	r3, [r7, #12]
 1795 0104 2222     		movs	r2, #34
 1796 0106 9A67     		str	r2, [r3, #120]
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1797              		.loc 1 1373 5
 1798 0108 FB68     		ldr	r3, [r7, #12]
 1799 010a 1B68     		ldr	r3, [r3]
 1800 010c 9A68     		ldr	r2, [r3, #8]
 1801 010e FB68     		ldr	r3, [r7, #12]
 1802 0110 1B68     		ldr	r3, [r3]
 1803 0112 0121     		movs	r1, #1
 1804 0114 0A43     		orrs	r2, r1
 1805 0116 9A60     		str	r2, [r3, #8]
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1806              		.loc 1 1376 21
 1807 0118 FB68     		ldr	r3, [r7, #12]
 1808 011a 9A68     		ldr	r2, [r3, #8]
 1809              		.loc 1 1376 8
 1810 011c 8023     		movs	r3, #128
 1811 011e 5B01     		lsls	r3, r3, #5
 1812 0120 9A42     		cmp	r2, r3
 1813 0122 07D1     		bne	.L104
 1814              		.loc 1 1376 71 discriminator 1
 1815 0124 FB68     		ldr	r3, [r7, #12]
 1816 0126 1B69     		ldr	r3, [r3, #16]
 1817              		.loc 1 1376 56 discriminator 1
 1818 0128 002B     		cmp	r3, #0
 1819 012a 03D1     		bne	.L104
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 1820              		.loc 1 1378 20
 1821 012c FB68     		ldr	r3, [r7, #12]
 1822 012e 0E4A     		ldr	r2, .L106+4
 1823 0130 1A66     		str	r2, [r3, #96]
 1824 0132 02E0     		b	.L105
 1825              	.L104:
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 1826              		.loc 1 1382 20
 1827 0134 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 57


 1828 0136 0D4A     		ldr	r2, .L106+8
 1829 0138 1A66     		str	r2, [r3, #96]
 1830              	.L105:
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1831              		.loc 1 1385 5
 1832 013a FB68     		ldr	r3, [r7, #12]
 1833 013c 7022     		movs	r2, #112
 1834 013e 0021     		movs	r1, #0
 1835 0140 9954     		strb	r1, [r3, r2]
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1836              		.loc 1 1388 5
 1837 0142 FB68     		ldr	r3, [r7, #12]
 1838 0144 1B68     		ldr	r3, [r3]
 1839 0146 1A68     		ldr	r2, [r3]
 1840 0148 FB68     		ldr	r3, [r7, #12]
 1841 014a 1B68     		ldr	r3, [r3]
 1842 014c 9021     		movs	r1, #144
 1843 014e 4900     		lsls	r1, r1, #1
 1844 0150 0A43     		orrs	r2, r1
 1845 0152 1A60     		str	r2, [r3]
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1846              		.loc 1 1390 12
 1847 0154 0023     		movs	r3, #0
 1848 0156 00E0     		b	.L94
 1849              	.L91:
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1850              		.loc 1 1394 12
 1851 0158 0223     		movs	r3, #2
 1852              	.L94:
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1853              		.loc 1 1396 1
 1854 015a 1800     		movs	r0, r3
 1855 015c BD46     		mov	sp, r7
 1856 015e 04B0     		add	sp, sp, #16
 1857              		@ sp needed
 1858 0160 80BD     		pop	{r7, pc}
 1859              	.L107:
 1860 0162 C046     		.align	2
 1861              	.L106:
 1862 0164 FF010000 		.word	511
 1863 0168 00000000 		.word	UART_RxISR_16BIT
 1864 016c 00000000 		.word	UART_RxISR_8BIT
 1865              		.cfi_endproc
 1866              	.LFE50:
 1868              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1869              		.align	1
 1870              		.global	HAL_UART_Transmit_DMA
 1871              		.syntax unified
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 58


 1872              		.code	16
 1873              		.thumb_func
 1874              		.fpu softvfp
 1876              	HAL_UART_Transmit_DMA:
 1877              	.LFB51:
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1878              		.loc 1 1413 1
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 16
 1881              		@ frame_needed = 1, uses_anonymous_args = 0
 1882 0000 80B5     		push	{r7, lr}
 1883              	.LCFI33:
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 7, -8
 1886              		.cfi_offset 14, -4
 1887 0002 84B0     		sub	sp, sp, #16
 1888              	.LCFI34:
 1889              		.cfi_def_cfa_offset 24
 1890 0004 00AF     		add	r7, sp, #0
 1891              	.LCFI35:
 1892              		.cfi_def_cfa_register 7
 1893 0006 F860     		str	r0, [r7, #12]
 1894 0008 B960     		str	r1, [r7, #8]
 1895 000a BB1D     		adds	r3, r7, #6
 1896 000c 1A80     		strh	r2, [r3]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1897              		.loc 1 1415 12
 1898 000e FB68     		ldr	r3, [r7, #12]
 1899 0010 5B6F     		ldr	r3, [r3, #116]
 1900              		.loc 1 1415 6
 1901 0012 202B     		cmp	r3, #32
 1902 0014 00D0     		beq	.LCB1629
 1903 0016 77E0     		b	.L109	@long jump
 1904              	.LCB1629:
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1905              		.loc 1 1417 8
 1906 0018 BB68     		ldr	r3, [r7, #8]
 1907 001a 002B     		cmp	r3, #0
 1908 001c 03D0     		beq	.L110
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 59


 1909              		.loc 1 1417 25 discriminator 1
 1910 001e BB1D     		adds	r3, r7, #6
 1911 0020 1B88     		ldrh	r3, [r3]
 1912 0022 002B     		cmp	r3, #0
 1913 0024 01D1     		bne	.L111
 1914              	.L110:
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1915              		.loc 1 1419 14
 1916 0026 0123     		movs	r3, #1
 1917 0028 6FE0     		b	.L112
 1918              	.L111:
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1919              		.loc 1 1425 21
 1920 002a FB68     		ldr	r3, [r7, #12]
 1921 002c 9A68     		ldr	r2, [r3, #8]
 1922              		.loc 1 1425 8
 1923 002e 8023     		movs	r3, #128
 1924 0030 5B01     		lsls	r3, r3, #5
 1925 0032 9A42     		cmp	r2, r3
 1926 0034 09D1     		bne	.L113
 1927              		.loc 1 1425 71 discriminator 1
 1928 0036 FB68     		ldr	r3, [r7, #12]
 1929 0038 1B69     		ldr	r3, [r3, #16]
 1930              		.loc 1 1425 56 discriminator 1
 1931 003a 002B     		cmp	r3, #0
 1932 003c 05D1     		bne	.L113
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1933              		.loc 1 1427 13
 1934 003e BB68     		ldr	r3, [r7, #8]
 1935              		.loc 1 1427 30
 1936 0040 0122     		movs	r2, #1
 1937 0042 1340     		ands	r3, r2
 1938              		.loc 1 1427 10
 1939 0044 01D0     		beq	.L113
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1940              		.loc 1 1429 17
 1941 0046 0123     		movs	r3, #1
 1942 0048 5FE0     		b	.L112
 1943              	.L113:
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1944              		.loc 1 1433 5
 1945 004a FB68     		ldr	r3, [r7, #12]
 1946 004c 7022     		movs	r2, #112
 1947 004e 9B5C     		ldrb	r3, [r3, r2]
 1948 0050 012B     		cmp	r3, #1
 1949 0052 01D1     		bne	.L114
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 60


 1950              		.loc 1 1433 5 is_stmt 0 discriminator 1
 1951 0054 0223     		movs	r3, #2
 1952 0056 58E0     		b	.L112
 1953              	.L114:
 1954              		.loc 1 1433 5 discriminator 2
 1955 0058 FB68     		ldr	r3, [r7, #12]
 1956 005a 7022     		movs	r2, #112
 1957 005c 0121     		movs	r1, #1
 1958 005e 9954     		strb	r1, [r3, r2]
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1959              		.loc 1 1435 24 is_stmt 1 discriminator 2
 1960 0060 FB68     		ldr	r3, [r7, #12]
 1961 0062 BA68     		ldr	r2, [r7, #8]
 1962 0064 DA64     		str	r2, [r3, #76]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1963              		.loc 1 1436 24 discriminator 2
 1964 0066 FB68     		ldr	r3, [r7, #12]
 1965 0068 BA1D     		adds	r2, r7, #6
 1966 006a 5021     		movs	r1, #80
 1967 006c 1288     		ldrh	r2, [r2]
 1968 006e 5A52     		strh	r2, [r3, r1]
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1969              		.loc 1 1437 24 discriminator 2
 1970 0070 FB68     		ldr	r3, [r7, #12]
 1971 0072 BA1D     		adds	r2, r7, #6
 1972 0074 5221     		movs	r1, #82
 1973 0076 1288     		ldrh	r2, [r2]
 1974 0078 5A52     		strh	r2, [r3, r1]
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1975              		.loc 1 1439 22 discriminator 2
 1976 007a FB68     		ldr	r3, [r7, #12]
 1977 007c 0022     		movs	r2, #0
 1978 007e DA67     		str	r2, [r3, #124]
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1979              		.loc 1 1440 19 discriminator 2
 1980 0080 FB68     		ldr	r3, [r7, #12]
 1981 0082 2122     		movs	r2, #33
 1982 0084 5A67     		str	r2, [r3, #116]
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1983              		.loc 1 1442 14 discriminator 2
 1984 0086 FB68     		ldr	r3, [r7, #12]
 1985 0088 9B6E     		ldr	r3, [r3, #104]
 1986              		.loc 1 1442 8 discriminator 2
 1987 008a 002B     		cmp	r3, #0
 1988 008c 2AD0     		beq	.L115
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1989              		.loc 1 1445 12
 1990 008e FB68     		ldr	r3, [r7, #12]
 1991 0090 9B6E     		ldr	r3, [r3, #104]
 1992              		.loc 1 1445 39
 1993 0092 204A     		ldr	r2, .L116
 1994 0094 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 61


1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1995              		.loc 1 1448 12
 1996 0096 FB68     		ldr	r3, [r7, #12]
 1997 0098 9B6E     		ldr	r3, [r3, #104]
 1998              		.loc 1 1448 43
 1999 009a 1F4A     		ldr	r2, .L116+4
 2000 009c DA62     		str	r2, [r3, #44]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 2001              		.loc 1 1451 12
 2002 009e FB68     		ldr	r3, [r7, #12]
 2003 00a0 9B6E     		ldr	r3, [r3, #104]
 2004              		.loc 1 1451 40
 2005 00a2 1E4A     		ldr	r2, .L116+8
 2006 00a4 1A63     		str	r2, [r3, #48]
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2007              		.loc 1 1454 12
 2008 00a6 FB68     		ldr	r3, [r7, #12]
 2009 00a8 9B6E     		ldr	r3, [r3, #104]
 2010              		.loc 1 1454 40
 2011 00aa 0022     		movs	r2, #0
 2012 00ac 5A63     		str	r2, [r3, #52]
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 2013              		.loc 1 1457 11
 2014 00ae FB68     		ldr	r3, [r7, #12]
 2015 00b0 986E     		ldr	r0, [r3, #104]
 2016              		.loc 1 1457 58
 2017 00b2 FB68     		ldr	r3, [r7, #12]
 2018 00b4 DB6C     		ldr	r3, [r3, #76]
 2019              		.loc 1 1457 11
 2020 00b6 1900     		movs	r1, r3
 2021              		.loc 1 1457 88
 2022 00b8 FB68     		ldr	r3, [r7, #12]
 2023 00ba 1B68     		ldr	r3, [r3]
 2024              		.loc 1 1457 82
 2025 00bc 2833     		adds	r3, r3, #40
 2026              		.loc 1 1457 11
 2027 00be 1A00     		movs	r2, r3
 2028 00c0 BB1D     		adds	r3, r7, #6
 2029 00c2 1B88     		ldrh	r3, [r3]
 2030 00c4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2031 00c8 031E     		subs	r3, r0, #0
 2032              		.loc 1 1457 10
 2033 00ca 0BD0     		beq	.L115
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 2034              		.loc 1 1460 26
 2035 00cc FB68     		ldr	r3, [r7, #12]
 2036 00ce 1022     		movs	r2, #16
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 62


 2037 00d0 DA67     		str	r2, [r3, #124]
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2038              		.loc 1 1462 9
 2039 00d2 FB68     		ldr	r3, [r7, #12]
 2040 00d4 7022     		movs	r2, #112
 2041 00d6 0021     		movs	r1, #0
 2042 00d8 9954     		strb	r1, [r3, r2]
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2043              		.loc 1 1465 23
 2044 00da FB68     		ldr	r3, [r7, #12]
 2045 00dc 2022     		movs	r2, #32
 2046 00de 5A67     		str	r2, [r3, #116]
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
 2047              		.loc 1 1467 16
 2048 00e0 0123     		movs	r3, #1
 2049 00e2 12E0     		b	.L112
 2050              	.L115:
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 2051              		.loc 1 1471 5
 2052 00e4 FB68     		ldr	r3, [r7, #12]
 2053 00e6 1B68     		ldr	r3, [r3]
 2054 00e8 4022     		movs	r2, #64
 2055 00ea 1A62     		str	r2, [r3, #32]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2056              		.loc 1 1473 5
 2057 00ec FB68     		ldr	r3, [r7, #12]
 2058 00ee 7022     		movs	r2, #112
 2059 00f0 0021     		movs	r1, #0
 2060 00f2 9954     		strb	r1, [r3, r2]
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2061              		.loc 1 1477 5
 2062 00f4 FB68     		ldr	r3, [r7, #12]
 2063 00f6 1B68     		ldr	r3, [r3]
 2064 00f8 9A68     		ldr	r2, [r3, #8]
 2065 00fa FB68     		ldr	r3, [r7, #12]
 2066 00fc 1B68     		ldr	r3, [r3]
 2067 00fe 8021     		movs	r1, #128
 2068 0100 0A43     		orrs	r2, r1
 2069 0102 9A60     		str	r2, [r3, #8]
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 2070              		.loc 1 1479 12
 2071 0104 0023     		movs	r3, #0
 2072 0106 00E0     		b	.L112
 2073              	.L109:
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 63


1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 2074              		.loc 1 1483 12
 2075 0108 0223     		movs	r3, #2
 2076              	.L112:
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2077              		.loc 1 1485 1
 2078 010a 1800     		movs	r0, r3
 2079 010c BD46     		mov	sp, r7
 2080 010e 04B0     		add	sp, sp, #16
 2081              		@ sp needed
 2082 0110 80BD     		pop	{r7, pc}
 2083              	.L117:
 2084 0112 C046     		.align	2
 2085              	.L116:
 2086 0114 00000000 		.word	UART_DMATransmitCplt
 2087 0118 00000000 		.word	UART_DMATxHalfCplt
 2088 011c 00000000 		.word	UART_DMAError
 2089              		.cfi_endproc
 2090              	.LFE51:
 2092              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2093              		.align	1
 2094              		.global	HAL_UART_Receive_DMA
 2095              		.syntax unified
 2096              		.code	16
 2097              		.thumb_func
 2098              		.fpu softvfp
 2100              	HAL_UART_Receive_DMA:
 2101              	.LFB52:
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the parity bit (MSB position).
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2102              		.loc 1 1504 1
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 16
 2105              		@ frame_needed = 1, uses_anonymous_args = 0
 2106 0000 80B5     		push	{r7, lr}
 2107              	.LCFI36:
 2108              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 64


 2109              		.cfi_offset 7, -8
 2110              		.cfi_offset 14, -4
 2111 0002 84B0     		sub	sp, sp, #16
 2112              	.LCFI37:
 2113              		.cfi_def_cfa_offset 24
 2114 0004 00AF     		add	r7, sp, #0
 2115              	.LCFI38:
 2116              		.cfi_def_cfa_register 7
 2117 0006 F860     		str	r0, [r7, #12]
 2118 0008 B960     		str	r1, [r7, #8]
 2119 000a BB1D     		adds	r3, r7, #6
 2120 000c 1A80     		strh	r2, [r3]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2121              		.loc 1 1506 12
 2122 000e FB68     		ldr	r3, [r7, #12]
 2123 0010 9B6F     		ldr	r3, [r3, #120]
 2124              		.loc 1 1506 6
 2125 0012 202B     		cmp	r3, #32
 2126 0014 00D0     		beq	.LCB1811
 2127 0016 7FE0     		b	.L119	@long jump
 2128              	.LCB1811:
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2129              		.loc 1 1508 8
 2130 0018 BB68     		ldr	r3, [r7, #8]
 2131 001a 002B     		cmp	r3, #0
 2132 001c 03D0     		beq	.L120
 2133              		.loc 1 1508 25 discriminator 1
 2134 001e BB1D     		adds	r3, r7, #6
 2135 0020 1B88     		ldrh	r3, [r3]
 2136 0022 002B     		cmp	r3, #0
 2137 0024 01D1     		bne	.L121
 2138              	.L120:
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 2139              		.loc 1 1510 14
 2140 0026 0123     		movs	r3, #1
 2141 0028 77E0     		b	.L122
 2142              	.L121:
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2143              		.loc 1 1516 21
 2144 002a FB68     		ldr	r3, [r7, #12]
 2145 002c 9A68     		ldr	r2, [r3, #8]
 2146              		.loc 1 1516 8
 2147 002e 8023     		movs	r3, #128
 2148 0030 5B01     		lsls	r3, r3, #5
 2149 0032 9A42     		cmp	r2, r3
 2150 0034 09D1     		bne	.L123
 2151              		.loc 1 1516 71 discriminator 1
 2152 0036 FB68     		ldr	r3, [r7, #12]
 2153 0038 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 65


 2154              		.loc 1 1516 56 discriminator 1
 2155 003a 002B     		cmp	r3, #0
 2156 003c 05D1     		bne	.L123
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 2157              		.loc 1 1518 13
 2158 003e BB68     		ldr	r3, [r7, #8]
 2159              		.loc 1 1518 30
 2160 0040 0122     		movs	r2, #1
 2161 0042 1340     		ands	r3, r2
 2162              		.loc 1 1518 10
 2163 0044 01D0     		beq	.L123
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 2164              		.loc 1 1520 17
 2165 0046 0123     		movs	r3, #1
 2166 0048 67E0     		b	.L122
 2167              	.L123:
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 2168              		.loc 1 1524 5
 2169 004a FB68     		ldr	r3, [r7, #12]
 2170 004c 7022     		movs	r2, #112
 2171 004e 9B5C     		ldrb	r3, [r3, r2]
 2172 0050 012B     		cmp	r3, #1
 2173 0052 01D1     		bne	.L124
 2174              		.loc 1 1524 5 is_stmt 0 discriminator 1
 2175 0054 0223     		movs	r3, #2
 2176 0056 60E0     		b	.L122
 2177              	.L124:
 2178              		.loc 1 1524 5 discriminator 2
 2179 0058 FB68     		ldr	r3, [r7, #12]
 2180 005a 7022     		movs	r2, #112
 2181 005c 0121     		movs	r1, #1
 2182 005e 9954     		strb	r1, [r3, r2]
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 2183              		.loc 1 1526 23 is_stmt 1 discriminator 2
 2184 0060 FB68     		ldr	r3, [r7, #12]
 2185 0062 BA68     		ldr	r2, [r7, #8]
 2186 0064 5A65     		str	r2, [r3, #84]
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 2187              		.loc 1 1527 23 discriminator 2
 2188 0066 FB68     		ldr	r3, [r7, #12]
 2189 0068 BA1D     		adds	r2, r7, #6
 2190 006a 5821     		movs	r1, #88
 2191 006c 1288     		ldrh	r2, [r2]
 2192 006e 5A52     		strh	r2, [r3, r1]
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2193              		.loc 1 1529 22 discriminator 2
 2194 0070 FB68     		ldr	r3, [r7, #12]
 2195 0072 0022     		movs	r2, #0
 2196 0074 DA67     		str	r2, [r3, #124]
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 66


 2197              		.loc 1 1530 20 discriminator 2
 2198 0076 FB68     		ldr	r3, [r7, #12]
 2199 0078 2222     		movs	r2, #34
 2200 007a 9A67     		str	r2, [r3, #120]
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2201              		.loc 1 1532 14 discriminator 2
 2202 007c FB68     		ldr	r3, [r7, #12]
 2203 007e DB6E     		ldr	r3, [r3, #108]
 2204              		.loc 1 1532 8 discriminator 2
 2205 0080 002B     		cmp	r3, #0
 2206 0082 2AD0     		beq	.L125
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 2207              		.loc 1 1535 12
 2208 0084 FB68     		ldr	r3, [r7, #12]
 2209 0086 DB6E     		ldr	r3, [r3, #108]
 2210              		.loc 1 1535 39
 2211 0088 264A     		ldr	r2, .L126
 2212 008a 9A62     		str	r2, [r3, #40]
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 2213              		.loc 1 1538 12
 2214 008c FB68     		ldr	r3, [r7, #12]
 2215 008e DB6E     		ldr	r3, [r3, #108]
 2216              		.loc 1 1538 43
 2217 0090 254A     		ldr	r2, .L126+4
 2218 0092 DA62     		str	r2, [r3, #44]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
 2219              		.loc 1 1541 12
 2220 0094 FB68     		ldr	r3, [r7, #12]
 2221 0096 DB6E     		ldr	r3, [r3, #108]
 2222              		.loc 1 1541 40
 2223 0098 244A     		ldr	r2, .L126+8
 2224 009a 1A63     		str	r2, [r3, #48]
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2225              		.loc 1 1544 12
 2226 009c FB68     		ldr	r3, [r7, #12]
 2227 009e DB6E     		ldr	r3, [r3, #108]
 2228              		.loc 1 1544 40
 2229 00a0 0022     		movs	r2, #0
 2230 00a2 5A63     		str	r2, [r3, #52]
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the DMA channel */
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 2231              		.loc 1 1547 11
 2232 00a4 FB68     		ldr	r3, [r7, #12]
 2233 00a6 D86E     		ldr	r0, [r3, #108]
 2234              		.loc 1 1547 59
 2235 00a8 FB68     		ldr	r3, [r7, #12]
 2236 00aa 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 67


 2237              		.loc 1 1547 53
 2238 00ac 2433     		adds	r3, r3, #36
 2239              		.loc 1 1547 11
 2240 00ae 1900     		movs	r1, r3
 2241              		.loc 1 1547 91
 2242 00b0 FB68     		ldr	r3, [r7, #12]
 2243 00b2 5B6D     		ldr	r3, [r3, #84]
 2244              		.loc 1 1547 11
 2245 00b4 1A00     		movs	r2, r3
 2246 00b6 BB1D     		adds	r3, r7, #6
 2247 00b8 1B88     		ldrh	r3, [r3]
 2248 00ba FFF7FEFF 		bl	HAL_DMA_Start_IT
 2249 00be 031E     		subs	r3, r0, #0
 2250              		.loc 1 1547 10
 2251 00c0 0BD0     		beq	.L125
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 2252              		.loc 1 1550 26
 2253 00c2 FB68     		ldr	r3, [r7, #12]
 2254 00c4 1022     		movs	r2, #16
 2255 00c6 DA67     		str	r2, [r3, #124]
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2256              		.loc 1 1552 9
 2257 00c8 FB68     		ldr	r3, [r7, #12]
 2258 00ca 7022     		movs	r2, #112
 2259 00cc 0021     		movs	r1, #0
 2260 00ce 9954     		strb	r1, [r3, r2]
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2261              		.loc 1 1555 23
 2262 00d0 FB68     		ldr	r3, [r7, #12]
 2263 00d2 2022     		movs	r2, #32
 2264 00d4 5A67     		str	r2, [r3, #116]
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
 2265              		.loc 1 1557 16
 2266 00d6 0123     		movs	r3, #1
 2267 00d8 1FE0     		b	.L122
 2268              	.L125:
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2269              		.loc 1 1560 5
 2270 00da FB68     		ldr	r3, [r7, #12]
 2271 00dc 7022     		movs	r2, #112
 2272 00de 0021     		movs	r1, #0
 2273 00e0 9954     		strb	r1, [r3, r2]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2274              		.loc 1 1563 5
 2275 00e2 FB68     		ldr	r3, [r7, #12]
 2276 00e4 1B68     		ldr	r3, [r3]
 2277 00e6 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 68


 2278 00e8 FB68     		ldr	r3, [r7, #12]
 2279 00ea 1B68     		ldr	r3, [r3]
 2280 00ec 8021     		movs	r1, #128
 2281 00ee 4900     		lsls	r1, r1, #1
 2282 00f0 0A43     		orrs	r2, r1
 2283 00f2 1A60     		str	r2, [r3]
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2284              		.loc 1 1566 5
 2285 00f4 FB68     		ldr	r3, [r7, #12]
 2286 00f6 1B68     		ldr	r3, [r3]
 2287 00f8 9A68     		ldr	r2, [r3, #8]
 2288 00fa FB68     		ldr	r3, [r7, #12]
 2289 00fc 1B68     		ldr	r3, [r3]
 2290 00fe 0121     		movs	r1, #1
 2291 0100 0A43     		orrs	r2, r1
 2292 0102 9A60     		str	r2, [r3, #8]
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2293              		.loc 1 1570 5
 2294 0104 FB68     		ldr	r3, [r7, #12]
 2295 0106 1B68     		ldr	r3, [r3]
 2296 0108 9A68     		ldr	r2, [r3, #8]
 2297 010a FB68     		ldr	r3, [r7, #12]
 2298 010c 1B68     		ldr	r3, [r3]
 2299 010e 4021     		movs	r1, #64
 2300 0110 0A43     		orrs	r2, r1
 2301 0112 9A60     		str	r2, [r3, #8]
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 2302              		.loc 1 1572 12
 2303 0114 0023     		movs	r3, #0
 2304 0116 00E0     		b	.L122
 2305              	.L119:
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 2306              		.loc 1 1576 12
 2307 0118 0223     		movs	r3, #2
 2308              	.L122:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2309              		.loc 1 1578 1
 2310 011a 1800     		movs	r0, r3
 2311 011c BD46     		mov	sp, r7
 2312 011e 04B0     		add	sp, sp, #16
 2313              		@ sp needed
 2314 0120 80BD     		pop	{r7, pc}
 2315              	.L127:
 2316 0122 C046     		.align	2
 2317              	.L126:
 2318 0124 00000000 		.word	UART_DMAReceiveCplt
 2319 0128 00000000 		.word	UART_DMARxHalfCplt
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 69


 2320 012c 00000000 		.word	UART_DMAError
 2321              		.cfi_endproc
 2322              	.LFE52:
 2324              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2325              		.align	1
 2326              		.global	HAL_UART_DMAPause
 2327              		.syntax unified
 2328              		.code	16
 2329              		.thumb_func
 2330              		.fpu softvfp
 2332              	HAL_UART_DMAPause:
 2333              	.LFB53:
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2334              		.loc 1 1586 1
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 16
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338 0000 80B5     		push	{r7, lr}
 2339              	.LCFI39:
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
 2343 0002 84B0     		sub	sp, sp, #16
 2344              	.LCFI40:
 2345              		.cfi_def_cfa_offset 24
 2346 0004 00AF     		add	r7, sp, #0
 2347              	.LCFI41:
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2350              		.loc 1 1587 31
 2351 0008 7B68     		ldr	r3, [r7, #4]
 2352 000a 5B6F     		ldr	r3, [r3, #116]
 2353 000c FB60     		str	r3, [r7, #12]
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2354              		.loc 1 1588 31
 2355 000e 7B68     		ldr	r3, [r7, #4]
 2356 0010 9B6F     		ldr	r3, [r3, #120]
 2357 0012 BB60     		str	r3, [r7, #8]
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 2358              		.loc 1 1590 3
 2359 0014 7B68     		ldr	r3, [r7, #4]
 2360 0016 7022     		movs	r2, #112
 2361 0018 9B5C     		ldrb	r3, [r3, r2]
 2362 001a 012B     		cmp	r3, #1
 2363 001c 01D1     		bne	.L129
 2364              		.loc 1 1590 3 is_stmt 0 discriminator 1
 2365 001e 0223     		movs	r3, #2
 2366 0020 3CE0     		b	.L130
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 70


 2367              	.L129:
 2368              		.loc 1 1590 3 discriminator 2
 2369 0022 7B68     		ldr	r3, [r7, #4]
 2370 0024 7022     		movs	r2, #112
 2371 0026 0121     		movs	r1, #1
 2372 0028 9954     		strb	r1, [r3, r2]
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2373              		.loc 1 1592 8 is_stmt 1 discriminator 2
 2374 002a 7B68     		ldr	r3, [r7, #4]
 2375 002c 1B68     		ldr	r3, [r3]
 2376 002e 9B68     		ldr	r3, [r3, #8]
 2377 0030 8022     		movs	r2, #128
 2378 0032 1340     		ands	r3, r2
 2379              		.loc 1 1592 6 discriminator 2
 2380 0034 802B     		cmp	r3, #128
 2381 0036 0AD1     		bne	.L131
 2382              		.loc 1 1592 62 discriminator 1
 2383 0038 FB68     		ldr	r3, [r7, #12]
 2384 003a 212B     		cmp	r3, #33
 2385 003c 07D1     		bne	.L131
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2386              		.loc 1 1596 5
 2387 003e 7B68     		ldr	r3, [r7, #4]
 2388 0040 1B68     		ldr	r3, [r3]
 2389 0042 9A68     		ldr	r2, [r3, #8]
 2390 0044 7B68     		ldr	r3, [r7, #4]
 2391 0046 1B68     		ldr	r3, [r3]
 2392 0048 8021     		movs	r1, #128
 2393 004a 8A43     		bics	r2, r1
 2394 004c 9A60     		str	r2, [r3, #8]
 2395              	.L131:
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2396              		.loc 1 1598 8
 2397 004e 7B68     		ldr	r3, [r7, #4]
 2398 0050 1B68     		ldr	r3, [r3]
 2399 0052 9B68     		ldr	r3, [r3, #8]
 2400 0054 4022     		movs	r2, #64
 2401 0056 1340     		ands	r3, r2
 2402              		.loc 1 1598 6
 2403 0058 402B     		cmp	r3, #64
 2404 005a 1AD1     		bne	.L132
 2405              		.loc 1 1598 62 discriminator 1
 2406 005c BB68     		ldr	r3, [r7, #8]
 2407 005e 222B     		cmp	r3, #34
 2408 0060 17D1     		bne	.L132
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2409              		.loc 1 1602 5
 2410 0062 7B68     		ldr	r3, [r7, #4]
 2411 0064 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 71


 2412 0066 1A68     		ldr	r2, [r3]
 2413 0068 7B68     		ldr	r3, [r7, #4]
 2414 006a 1B68     		ldr	r3, [r3]
 2415 006c 0D49     		ldr	r1, .L133
 2416 006e 0A40     		ands	r2, r1
 2417 0070 1A60     		str	r2, [r3]
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2418              		.loc 1 1603 5
 2419 0072 7B68     		ldr	r3, [r7, #4]
 2420 0074 1B68     		ldr	r3, [r3]
 2421 0076 9A68     		ldr	r2, [r3, #8]
 2422 0078 7B68     		ldr	r3, [r7, #4]
 2423 007a 1B68     		ldr	r3, [r3]
 2424 007c 0121     		movs	r1, #1
 2425 007e 8A43     		bics	r2, r1
 2426 0080 9A60     		str	r2, [r3, #8]
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2427              		.loc 1 1606 5
 2428 0082 7B68     		ldr	r3, [r7, #4]
 2429 0084 1B68     		ldr	r3, [r3]
 2430 0086 9A68     		ldr	r2, [r3, #8]
 2431 0088 7B68     		ldr	r3, [r7, #4]
 2432 008a 1B68     		ldr	r3, [r3]
 2433 008c 4021     		movs	r1, #64
 2434 008e 8A43     		bics	r2, r1
 2435 0090 9A60     		str	r2, [r3, #8]
 2436              	.L132:
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2437              		.loc 1 1609 3
 2438 0092 7B68     		ldr	r3, [r7, #4]
 2439 0094 7022     		movs	r2, #112
 2440 0096 0021     		movs	r1, #0
 2441 0098 9954     		strb	r1, [r3, r2]
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2442              		.loc 1 1611 10
 2443 009a 0023     		movs	r3, #0
 2444              	.L130:
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2445              		.loc 1 1612 1
 2446 009c 1800     		movs	r0, r3
 2447 009e BD46     		mov	sp, r7
 2448 00a0 04B0     		add	sp, sp, #16
 2449              		@ sp needed
 2450 00a2 80BD     		pop	{r7, pc}
 2451              	.L134:
 2452              		.align	2
 2453              	.L133:
 2454 00a4 FFFEFFFF 		.word	-257
 2455              		.cfi_endproc
 2456              	.LFE53:
 2458              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2459              		.align	1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 72


 2460              		.global	HAL_UART_DMAResume
 2461              		.syntax unified
 2462              		.code	16
 2463              		.thumb_func
 2464              		.fpu softvfp
 2466              	HAL_UART_DMAResume:
 2467              	.LFB54:
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2468              		.loc 1 1620 1
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 8
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472 0000 80B5     		push	{r7, lr}
 2473              	.LCFI42:
 2474              		.cfi_def_cfa_offset 8
 2475              		.cfi_offset 7, -8
 2476              		.cfi_offset 14, -4
 2477 0002 82B0     		sub	sp, sp, #8
 2478              	.LCFI43:
 2479              		.cfi_def_cfa_offset 16
 2480 0004 00AF     		add	r7, sp, #0
 2481              	.LCFI44:
 2482              		.cfi_def_cfa_register 7
 2483 0006 7860     		str	r0, [r7, #4]
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 2484              		.loc 1 1621 3
 2485 0008 7B68     		ldr	r3, [r7, #4]
 2486 000a 7022     		movs	r2, #112
 2487 000c 9B5C     		ldrb	r3, [r3, r2]
 2488 000e 012B     		cmp	r3, #1
 2489 0010 01D1     		bne	.L136
 2490              		.loc 1 1621 3 is_stmt 0 discriminator 1
 2491 0012 0223     		movs	r3, #2
 2492 0014 35E0     		b	.L137
 2493              	.L136:
 2494              		.loc 1 1621 3 discriminator 2
 2495 0016 7B68     		ldr	r3, [r7, #4]
 2496 0018 7022     		movs	r2, #112
 2497 001a 0121     		movs	r1, #1
 2498 001c 9954     		strb	r1, [r3, r2]
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2499              		.loc 1 1623 12 is_stmt 1 discriminator 2
 2500 001e 7B68     		ldr	r3, [r7, #4]
 2501 0020 5B6F     		ldr	r3, [r3, #116]
 2502              		.loc 1 1623 6 discriminator 2
 2503 0022 212B     		cmp	r3, #33
 2504 0024 07D1     		bne	.L138
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 73


1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2505              		.loc 1 1626 5
 2506 0026 7B68     		ldr	r3, [r7, #4]
 2507 0028 1B68     		ldr	r3, [r3]
 2508 002a 9A68     		ldr	r2, [r3, #8]
 2509 002c 7B68     		ldr	r3, [r7, #4]
 2510 002e 1B68     		ldr	r3, [r3]
 2511 0030 8021     		movs	r1, #128
 2512 0032 0A43     		orrs	r2, r1
 2513 0034 9A60     		str	r2, [r3, #8]
 2514              	.L138:
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2515              		.loc 1 1628 12
 2516 0036 7B68     		ldr	r3, [r7, #4]
 2517 0038 9B6F     		ldr	r3, [r3, #120]
 2518              		.loc 1 1628 6
 2519 003a 222B     		cmp	r3, #34
 2520 003c 1CD1     		bne	.L139
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2521              		.loc 1 1631 5
 2522 003e 7B68     		ldr	r3, [r7, #4]
 2523 0040 1B68     		ldr	r3, [r3]
 2524 0042 0822     		movs	r2, #8
 2525 0044 1A62     		str	r2, [r3, #32]
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2526              		.loc 1 1634 5
 2527 0046 7B68     		ldr	r3, [r7, #4]
 2528 0048 1B68     		ldr	r3, [r3]
 2529 004a 1A68     		ldr	r2, [r3]
 2530 004c 7B68     		ldr	r3, [r7, #4]
 2531 004e 1B68     		ldr	r3, [r3]
 2532 0050 8021     		movs	r1, #128
 2533 0052 4900     		lsls	r1, r1, #1
 2534 0054 0A43     		orrs	r2, r1
 2535 0056 1A60     		str	r2, [r3]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2536              		.loc 1 1635 5
 2537 0058 7B68     		ldr	r3, [r7, #4]
 2538 005a 1B68     		ldr	r3, [r3]
 2539 005c 9A68     		ldr	r2, [r3, #8]
 2540 005e 7B68     		ldr	r3, [r7, #4]
 2541 0060 1B68     		ldr	r3, [r3]
 2542 0062 0121     		movs	r1, #1
 2543 0064 0A43     		orrs	r2, r1
 2544 0066 9A60     		str	r2, [r3, #8]
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2545              		.loc 1 1638 5
 2546 0068 7B68     		ldr	r3, [r7, #4]
 2547 006a 1B68     		ldr	r3, [r3]
 2548 006c 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 74


 2549 006e 7B68     		ldr	r3, [r7, #4]
 2550 0070 1B68     		ldr	r3, [r3]
 2551 0072 4021     		movs	r1, #64
 2552 0074 0A43     		orrs	r2, r1
 2553 0076 9A60     		str	r2, [r3, #8]
 2554              	.L139:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2555              		.loc 1 1641 3
 2556 0078 7B68     		ldr	r3, [r7, #4]
 2557 007a 7022     		movs	r2, #112
 2558 007c 0021     		movs	r1, #0
 2559 007e 9954     		strb	r1, [r3, r2]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2560              		.loc 1 1643 10
 2561 0080 0023     		movs	r3, #0
 2562              	.L137:
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2563              		.loc 1 1644 1
 2564 0082 1800     		movs	r0, r3
 2565 0084 BD46     		mov	sp, r7
 2566 0086 02B0     		add	sp, sp, #8
 2567              		@ sp needed
 2568 0088 80BD     		pop	{r7, pc}
 2569              		.cfi_endproc
 2570              	.LFE54:
 2572              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2573              		.align	1
 2574              		.global	HAL_UART_DMAStop
 2575              		.syntax unified
 2576              		.code	16
 2577              		.thumb_func
 2578              		.fpu softvfp
 2580              	HAL_UART_DMAStop:
 2581              	.LFB55:
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2582              		.loc 1 1652 1
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 16
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586 0000 80B5     		push	{r7, lr}
 2587              	.LCFI45:
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
 2590              		.cfi_offset 14, -4
 2591 0002 84B0     		sub	sp, sp, #16
 2592              	.LCFI46:
 2593              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 75


 2594 0004 00AF     		add	r7, sp, #0
 2595              	.LCFI47:
 2596              		.cfi_def_cfa_register 7
 2597 0006 7860     		str	r0, [r7, #4]
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2598              		.loc 1 1660 31
 2599 0008 7B68     		ldr	r3, [r7, #4]
 2600 000a 5B6F     		ldr	r3, [r3, #116]
 2601 000c FB60     		str	r3, [r7, #12]
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2602              		.loc 1 1661 31
 2603 000e 7B68     		ldr	r3, [r7, #4]
 2604 0010 9B6F     		ldr	r3, [r3, #120]
 2605 0012 BB60     		str	r3, [r7, #8]
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2606              		.loc 1 1664 8
 2607 0014 7B68     		ldr	r3, [r7, #4]
 2608 0016 1B68     		ldr	r3, [r3]
 2609 0018 9B68     		ldr	r3, [r3, #8]
 2610 001a 8022     		movs	r2, #128
 2611 001c 1340     		ands	r3, r2
 2612              		.loc 1 1664 6
 2613 001e 802B     		cmp	r3, #128
 2614 0020 26D1     		bne	.L141
 2615              		.loc 1 1664 62 discriminator 1
 2616 0022 FB68     		ldr	r3, [r7, #12]
 2617 0024 212B     		cmp	r3, #33
 2618 0026 23D1     		bne	.L141
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2619              		.loc 1 1667 5
 2620 0028 7B68     		ldr	r3, [r7, #4]
 2621 002a 1B68     		ldr	r3, [r3]
 2622 002c 9A68     		ldr	r2, [r3, #8]
 2623 002e 7B68     		ldr	r3, [r7, #4]
 2624 0030 1B68     		ldr	r3, [r3]
 2625 0032 8021     		movs	r1, #128
 2626 0034 8A43     		bics	r2, r1
 2627 0036 9A60     		str	r2, [r3, #8]
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2628              		.loc 1 1670 14
 2629 0038 7B68     		ldr	r3, [r7, #4]
 2630 003a 9B6E     		ldr	r3, [r3, #104]
 2631              		.loc 1 1670 8
 2632 003c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 76


 2633 003e 13D0     		beq	.L142
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2634              		.loc 1 1672 11
 2635 0040 7B68     		ldr	r3, [r7, #4]
 2636 0042 9B6E     		ldr	r3, [r3, #104]
 2637 0044 1800     		movs	r0, r3
 2638 0046 FFF7FEFF 		bl	HAL_DMA_Abort
 2639 004a 031E     		subs	r3, r0, #0
 2640              		.loc 1 1672 10
 2641 004c 0CD0     		beq	.L142
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2642              		.loc 1 1674 13
 2643 004e 7B68     		ldr	r3, [r7, #4]
 2644 0050 9B6E     		ldr	r3, [r3, #104]
 2645 0052 1800     		movs	r0, r3
 2646 0054 FFF7FEFF 		bl	HAL_DMA_GetError
 2647 0058 0300     		movs	r3, r0
 2648              		.loc 1 1674 12
 2649 005a 202B     		cmp	r3, #32
 2650 005c 04D1     		bne	.L142
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2651              		.loc 1 1677 28
 2652 005e 7B68     		ldr	r3, [r7, #4]
 2653 0060 1022     		movs	r2, #16
 2654 0062 DA67     		str	r2, [r3, #124]
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 2655              		.loc 1 1679 18
 2656 0064 0323     		movs	r3, #3
 2657 0066 32E0     		b	.L143
 2658              	.L142:
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2659              		.loc 1 1684 5
 2660 0068 7B68     		ldr	r3, [r7, #4]
 2661 006a 1800     		movs	r0, r3
 2662 006c FFF7FEFF 		bl	UART_EndTxTransfer
 2663              	.L141:
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2664              		.loc 1 1688 8
 2665 0070 7B68     		ldr	r3, [r7, #4]
 2666 0072 1B68     		ldr	r3, [r3]
 2667 0074 9B68     		ldr	r3, [r3, #8]
 2668 0076 4022     		movs	r2, #64
 2669 0078 1340     		ands	r3, r2
 2670              		.loc 1 1688 6
 2671 007a 402B     		cmp	r3, #64
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 77


 2672 007c 26D1     		bne	.L144
 2673              		.loc 1 1688 62 discriminator 1
 2674 007e BB68     		ldr	r3, [r7, #8]
 2675 0080 222B     		cmp	r3, #34
 2676 0082 23D1     		bne	.L144
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2677              		.loc 1 1691 5
 2678 0084 7B68     		ldr	r3, [r7, #4]
 2679 0086 1B68     		ldr	r3, [r3]
 2680 0088 9A68     		ldr	r2, [r3, #8]
 2681 008a 7B68     		ldr	r3, [r7, #4]
 2682 008c 1B68     		ldr	r3, [r3]
 2683 008e 4021     		movs	r1, #64
 2684 0090 8A43     		bics	r2, r1
 2685 0092 9A60     		str	r2, [r3, #8]
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2686              		.loc 1 1694 14
 2687 0094 7B68     		ldr	r3, [r7, #4]
 2688 0096 DB6E     		ldr	r3, [r3, #108]
 2689              		.loc 1 1694 8
 2690 0098 002B     		cmp	r3, #0
 2691 009a 13D0     		beq	.L145
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2692              		.loc 1 1696 11
 2693 009c 7B68     		ldr	r3, [r7, #4]
 2694 009e DB6E     		ldr	r3, [r3, #108]
 2695 00a0 1800     		movs	r0, r3
 2696 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2697 00a6 031E     		subs	r3, r0, #0
 2698              		.loc 1 1696 10
 2699 00a8 0CD0     		beq	.L145
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2700              		.loc 1 1698 13
 2701 00aa 7B68     		ldr	r3, [r7, #4]
 2702 00ac DB6E     		ldr	r3, [r3, #108]
 2703 00ae 1800     		movs	r0, r3
 2704 00b0 FFF7FEFF 		bl	HAL_DMA_GetError
 2705 00b4 0300     		movs	r3, r0
 2706              		.loc 1 1698 12
 2707 00b6 202B     		cmp	r3, #32
 2708 00b8 04D1     		bne	.L145
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2709              		.loc 1 1701 28
 2710 00ba 7B68     		ldr	r3, [r7, #4]
 2711 00bc 1022     		movs	r2, #16
 2712 00be DA67     		str	r2, [r3, #124]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 2713              		.loc 1 1703 18
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 78


 2714 00c0 0323     		movs	r3, #3
 2715 00c2 04E0     		b	.L143
 2716              	.L145:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2717              		.loc 1 1708 5
 2718 00c4 7B68     		ldr	r3, [r7, #4]
 2719 00c6 1800     		movs	r0, r3
 2720 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 2721              	.L144:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2722              		.loc 1 1711 10
 2723 00cc 0023     		movs	r3, #0
 2724              	.L143:
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2725              		.loc 1 1712 1
 2726 00ce 1800     		movs	r0, r3
 2727 00d0 BD46     		mov	sp, r7
 2728 00d2 04B0     		add	sp, sp, #16
 2729              		@ sp needed
 2730 00d4 80BD     		pop	{r7, pc}
 2731              		.cfi_endproc
 2732              	.LFE55:
 2734              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2735              		.align	1
 2736              		.global	HAL_UART_Abort
 2737              		.syntax unified
 2738              		.code	16
 2739              		.thumb_func
 2740              		.fpu softvfp
 2742              	HAL_UART_Abort:
 2743              	.LFB56:
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2744              		.loc 1 1727 1
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 8
 2747              		@ frame_needed = 1, uses_anonymous_args = 0
 2748 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 79


 2749              	.LCFI48:
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 82B0     		sub	sp, sp, #8
 2754              	.LCFI49:
 2755              		.cfi_def_cfa_offset 16
 2756 0004 00AF     		add	r7, sp, #0
 2757              	.LCFI50:
 2758              		.cfi_def_cfa_register 7
 2759 0006 7860     		str	r0, [r7, #4]
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2760              		.loc 1 1729 3
 2761 0008 7B68     		ldr	r3, [r7, #4]
 2762 000a 1B68     		ldr	r3, [r3]
 2763 000c 1A68     		ldr	r2, [r3]
 2764 000e 7B68     		ldr	r3, [r7, #4]
 2765 0010 1B68     		ldr	r3, [r3]
 2766 0012 4149     		ldr	r1, .L150
 2767 0014 0A40     		ands	r2, r1
 2768 0016 1A60     		str	r2, [r3]
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2769              		.loc 1 1730 3
 2770 0018 7B68     		ldr	r3, [r7, #4]
 2771 001a 1B68     		ldr	r3, [r3]
 2772 001c 9A68     		ldr	r2, [r3, #8]
 2773 001e 7B68     		ldr	r3, [r7, #4]
 2774 0020 1B68     		ldr	r3, [r3]
 2775 0022 0121     		movs	r1, #1
 2776 0024 8A43     		bics	r2, r1
 2777 0026 9A60     		str	r2, [r3, #8]
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2778              		.loc 1 1733 7
 2779 0028 7B68     		ldr	r3, [r7, #4]
 2780 002a 1B68     		ldr	r3, [r3]
 2781 002c 9B68     		ldr	r3, [r3, #8]
 2782 002e 8022     		movs	r2, #128
 2783 0030 1340     		ands	r3, r2
 2784              		.loc 1 1733 6
 2785 0032 802B     		cmp	r3, #128
 2786 0034 23D1     		bne	.L147
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2787              		.loc 1 1735 5
 2788 0036 7B68     		ldr	r3, [r7, #4]
 2789 0038 1B68     		ldr	r3, [r3]
 2790 003a 9A68     		ldr	r2, [r3, #8]
 2791 003c 7B68     		ldr	r3, [r7, #4]
 2792 003e 1B68     		ldr	r3, [r3]
 2793 0040 8021     		movs	r1, #128
 2794 0042 8A43     		bics	r2, r1
 2795 0044 9A60     		str	r2, [r3, #8]
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 80


1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2796              		.loc 1 1738 14
 2797 0046 7B68     		ldr	r3, [r7, #4]
 2798 0048 9B6E     		ldr	r3, [r3, #104]
 2799              		.loc 1 1738 8
 2800 004a 002B     		cmp	r3, #0
 2801 004c 17D0     		beq	.L147
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2802              		.loc 1 1742 12
 2803 004e 7B68     		ldr	r3, [r7, #4]
 2804 0050 9B6E     		ldr	r3, [r3, #104]
 2805              		.loc 1 1742 40
 2806 0052 0022     		movs	r2, #0
 2807 0054 5A63     		str	r2, [r3, #52]
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2808              		.loc 1 1744 11
 2809 0056 7B68     		ldr	r3, [r7, #4]
 2810 0058 9B6E     		ldr	r3, [r3, #104]
 2811 005a 1800     		movs	r0, r3
 2812 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2813 0060 031E     		subs	r3, r0, #0
 2814              		.loc 1 1744 10
 2815 0062 0CD0     		beq	.L147
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2816              		.loc 1 1746 13
 2817 0064 7B68     		ldr	r3, [r7, #4]
 2818 0066 9B6E     		ldr	r3, [r3, #104]
 2819 0068 1800     		movs	r0, r3
 2820 006a FFF7FEFF 		bl	HAL_DMA_GetError
 2821 006e 0300     		movs	r3, r0
 2822              		.loc 1 1746 12
 2823 0070 202B     		cmp	r3, #32
 2824 0072 04D1     		bne	.L147
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2825              		.loc 1 1749 28
 2826 0074 7B68     		ldr	r3, [r7, #4]
 2827 0076 1022     		movs	r2, #16
 2828 0078 DA67     		str	r2, [r3, #124]
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 2829              		.loc 1 1751 18
 2830 007a 0323     		movs	r3, #3
 2831 007c 48E0     		b	.L148
 2832              	.L147:
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 81


1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2833              		.loc 1 1758 7
 2834 007e 7B68     		ldr	r3, [r7, #4]
 2835 0080 1B68     		ldr	r3, [r3]
 2836 0082 9B68     		ldr	r3, [r3, #8]
 2837 0084 4022     		movs	r2, #64
 2838 0086 1340     		ands	r3, r2
 2839              		.loc 1 1758 6
 2840 0088 402B     		cmp	r3, #64
 2841 008a 23D1     		bne	.L149
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2842              		.loc 1 1760 5
 2843 008c 7B68     		ldr	r3, [r7, #4]
 2844 008e 1B68     		ldr	r3, [r3]
 2845 0090 9A68     		ldr	r2, [r3, #8]
 2846 0092 7B68     		ldr	r3, [r7, #4]
 2847 0094 1B68     		ldr	r3, [r3]
 2848 0096 4021     		movs	r1, #64
 2849 0098 8A43     		bics	r2, r1
 2850 009a 9A60     		str	r2, [r3, #8]
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2851              		.loc 1 1763 14
 2852 009c 7B68     		ldr	r3, [r7, #4]
 2853 009e DB6E     		ldr	r3, [r3, #108]
 2854              		.loc 1 1763 8
 2855 00a0 002B     		cmp	r3, #0
 2856 00a2 17D0     		beq	.L149
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2857              		.loc 1 1767 12
 2858 00a4 7B68     		ldr	r3, [r7, #4]
 2859 00a6 DB6E     		ldr	r3, [r3, #108]
 2860              		.loc 1 1767 40
 2861 00a8 0022     		movs	r2, #0
 2862 00aa 5A63     		str	r2, [r3, #52]
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2863              		.loc 1 1769 11
 2864 00ac 7B68     		ldr	r3, [r7, #4]
 2865 00ae DB6E     		ldr	r3, [r3, #108]
 2866 00b0 1800     		movs	r0, r3
 2867 00b2 FFF7FEFF 		bl	HAL_DMA_Abort
 2868 00b6 031E     		subs	r3, r0, #0
 2869              		.loc 1 1769 10
 2870 00b8 0CD0     		beq	.L149
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2871              		.loc 1 1771 13
 2872 00ba 7B68     		ldr	r3, [r7, #4]
 2873 00bc DB6E     		ldr	r3, [r3, #108]
 2874 00be 1800     		movs	r0, r3
 2875 00c0 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 82


 2876 00c4 0300     		movs	r3, r0
 2877              		.loc 1 1771 12
 2878 00c6 202B     		cmp	r3, #32
 2879 00c8 04D1     		bne	.L149
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2880              		.loc 1 1774 28
 2881 00ca 7B68     		ldr	r3, [r7, #4]
 2882 00cc 1022     		movs	r2, #16
 2883 00ce DA67     		str	r2, [r3, #124]
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 2884              		.loc 1 1776 18
 2885 00d0 0323     		movs	r3, #3
 2886 00d2 1DE0     		b	.L148
 2887              	.L149:
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2888              		.loc 1 1783 22
 2889 00d4 7B68     		ldr	r3, [r7, #4]
 2890 00d6 5222     		movs	r2, #82
 2891 00d8 0021     		movs	r1, #0
 2892 00da 9952     		strh	r1, [r3, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2893              		.loc 1 1784 22
 2894 00dc 7B68     		ldr	r3, [r7, #4]
 2895 00de 5A22     		movs	r2, #90
 2896 00e0 0021     		movs	r1, #0
 2897 00e2 9952     		strh	r1, [r3, r2]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2898              		.loc 1 1787 3
 2899 00e4 7B68     		ldr	r3, [r7, #4]
 2900 00e6 1B68     		ldr	r3, [r3]
 2901 00e8 0F22     		movs	r2, #15
 2902 00ea 1A62     		str	r2, [r3, #32]
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2903              		.loc 1 1791 3
 2904 00ec 7B68     		ldr	r3, [r7, #4]
 2905 00ee 1B68     		ldr	r3, [r3]
 2906 00f0 9A69     		ldr	r2, [r3, #24]
 2907 00f2 7B68     		ldr	r3, [r7, #4]
 2908 00f4 1B68     		ldr	r3, [r3]
 2909 00f6 0821     		movs	r1, #8
 2910 00f8 0A43     		orrs	r2, r1
 2911 00fa 9A61     		str	r2, [r3, #24]
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 83


1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2912              		.loc 1 1794 18
 2913 00fc 7B68     		ldr	r3, [r7, #4]
 2914 00fe 2022     		movs	r2, #32
 2915 0100 5A67     		str	r2, [r3, #116]
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2916              		.loc 1 1795 18
 2917 0102 7B68     		ldr	r3, [r7, #4]
 2918 0104 2022     		movs	r2, #32
 2919 0106 9A67     		str	r2, [r3, #120]
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2920              		.loc 1 1797 20
 2921 0108 7B68     		ldr	r3, [r7, #4]
 2922 010a 0022     		movs	r2, #0
 2923 010c DA67     		str	r2, [r3, #124]
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2924              		.loc 1 1799 10
 2925 010e 0023     		movs	r3, #0
 2926              	.L148:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2927              		.loc 1 1800 1
 2928 0110 1800     		movs	r0, r3
 2929 0112 BD46     		mov	sp, r7
 2930 0114 02B0     		add	sp, sp, #8
 2931              		@ sp needed
 2932 0116 80BD     		pop	{r7, pc}
 2933              	.L151:
 2934              		.align	2
 2935              	.L150:
 2936 0118 1FFEFFFF 		.word	-481
 2937              		.cfi_endproc
 2938              	.LFE56:
 2940              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2941              		.align	1
 2942              		.global	HAL_UART_AbortTransmit
 2943              		.syntax unified
 2944              		.code	16
 2945              		.thumb_func
 2946              		.fpu softvfp
 2948              	HAL_UART_AbortTransmit:
 2949              	.LFB57:
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 84


1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2950              		.loc 1 1815 1
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 8
 2953              		@ frame_needed = 1, uses_anonymous_args = 0
 2954 0000 80B5     		push	{r7, lr}
 2955              	.LCFI51:
 2956              		.cfi_def_cfa_offset 8
 2957              		.cfi_offset 7, -8
 2958              		.cfi_offset 14, -4
 2959 0002 82B0     		sub	sp, sp, #8
 2960              	.LCFI52:
 2961              		.cfi_def_cfa_offset 16
 2962 0004 00AF     		add	r7, sp, #0
 2963              	.LCFI53:
 2964              		.cfi_def_cfa_register 7
 2965 0006 7860     		str	r0, [r7, #4]
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2966              		.loc 1 1817 3
 2967 0008 7B68     		ldr	r3, [r7, #4]
 2968 000a 1B68     		ldr	r3, [r3]
 2969 000c 1A68     		ldr	r2, [r3]
 2970 000e 7B68     		ldr	r3, [r7, #4]
 2971 0010 1B68     		ldr	r3, [r3]
 2972 0012 C021     		movs	r1, #192
 2973 0014 8A43     		bics	r2, r1
 2974 0016 1A60     		str	r2, [r3]
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2975              		.loc 1 1820 7
 2976 0018 7B68     		ldr	r3, [r7, #4]
 2977 001a 1B68     		ldr	r3, [r3]
 2978 001c 9B68     		ldr	r3, [r3, #8]
 2979 001e 8022     		movs	r2, #128
 2980 0020 1340     		ands	r3, r2
 2981              		.loc 1 1820 6
 2982 0022 802B     		cmp	r3, #128
 2983 0024 23D1     		bne	.L153
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2984              		.loc 1 1822 5
 2985 0026 7B68     		ldr	r3, [r7, #4]
 2986 0028 1B68     		ldr	r3, [r3]
 2987 002a 9A68     		ldr	r2, [r3, #8]
 2988 002c 7B68     		ldr	r3, [r7, #4]
 2989 002e 1B68     		ldr	r3, [r3]
 2990 0030 8021     		movs	r1, #128
 2991 0032 8A43     		bics	r2, r1
 2992 0034 9A60     		str	r2, [r3, #8]
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2993              		.loc 1 1825 14
 2994 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 85


 2995 0038 9B6E     		ldr	r3, [r3, #104]
 2996              		.loc 1 1825 8
 2997 003a 002B     		cmp	r3, #0
 2998 003c 17D0     		beq	.L153
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2999              		.loc 1 1829 12
 3000 003e 7B68     		ldr	r3, [r7, #4]
 3001 0040 9B6E     		ldr	r3, [r3, #104]
 3002              		.loc 1 1829 40
 3003 0042 0022     		movs	r2, #0
 3004 0044 5A63     		str	r2, [r3, #52]
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3005              		.loc 1 1831 11
 3006 0046 7B68     		ldr	r3, [r7, #4]
 3007 0048 9B6E     		ldr	r3, [r3, #104]
 3008 004a 1800     		movs	r0, r3
 3009 004c FFF7FEFF 		bl	HAL_DMA_Abort
 3010 0050 031E     		subs	r3, r0, #0
 3011              		.loc 1 1831 10
 3012 0052 0CD0     		beq	.L153
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3013              		.loc 1 1833 13
 3014 0054 7B68     		ldr	r3, [r7, #4]
 3015 0056 9B6E     		ldr	r3, [r3, #104]
 3016 0058 1800     		movs	r0, r3
 3017 005a FFF7FEFF 		bl	HAL_DMA_GetError
 3018 005e 0300     		movs	r3, r0
 3019              		.loc 1 1833 12
 3020 0060 202B     		cmp	r3, #32
 3021 0062 04D1     		bne	.L153
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3022              		.loc 1 1836 28
 3023 0064 7B68     		ldr	r3, [r7, #4]
 3024 0066 1022     		movs	r2, #16
 3025 0068 DA67     		str	r2, [r3, #124]
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 3026              		.loc 1 1838 18
 3027 006a 0323     		movs	r3, #3
 3028 006c 07E0     		b	.L154
 3029              	.L153:
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3030              		.loc 1 1845 22
 3031 006e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 86


 3032 0070 5222     		movs	r2, #82
 3033 0072 0021     		movs	r1, #0
 3034 0074 9952     		strh	r1, [r3, r2]
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3035              		.loc 1 1849 17
 3036 0076 7B68     		ldr	r3, [r7, #4]
 3037 0078 2022     		movs	r2, #32
 3038 007a 5A67     		str	r2, [r3, #116]
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3039              		.loc 1 1851 10
 3040 007c 0023     		movs	r3, #0
 3041              	.L154:
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3042              		.loc 1 1852 1
 3043 007e 1800     		movs	r0, r3
 3044 0080 BD46     		mov	sp, r7
 3045 0082 02B0     		add	sp, sp, #8
 3046              		@ sp needed
 3047 0084 80BD     		pop	{r7, pc}
 3048              		.cfi_endproc
 3049              	.LFE57:
 3051              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3052              		.align	1
 3053              		.global	HAL_UART_AbortReceive
 3054              		.syntax unified
 3055              		.code	16
 3056              		.thumb_func
 3057              		.fpu softvfp
 3059              	HAL_UART_AbortReceive:
 3060              	.LFB58:
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3061              		.loc 1 1867 1
 3062              		.cfi_startproc
 3063              		@ args = 0, pretend = 0, frame = 8
 3064              		@ frame_needed = 1, uses_anonymous_args = 0
 3065 0000 80B5     		push	{r7, lr}
 3066              	.LCFI54:
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 7, -8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 87


 3069              		.cfi_offset 14, -4
 3070 0002 82B0     		sub	sp, sp, #8
 3071              	.LCFI55:
 3072              		.cfi_def_cfa_offset 16
 3073 0004 00AF     		add	r7, sp, #0
 3074              	.LCFI56:
 3075              		.cfi_def_cfa_register 7
 3076 0006 7860     		str	r0, [r7, #4]
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3077              		.loc 1 1869 3
 3078 0008 7B68     		ldr	r3, [r7, #4]
 3079 000a 1B68     		ldr	r3, [r3]
 3080 000c 1A68     		ldr	r2, [r3]
 3081 000e 7B68     		ldr	r3, [r7, #4]
 3082 0010 1B68     		ldr	r3, [r3]
 3083 0012 2749     		ldr	r1, .L158
 3084 0014 0A40     		ands	r2, r1
 3085 0016 1A60     		str	r2, [r3]
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3086              		.loc 1 1870 3
 3087 0018 7B68     		ldr	r3, [r7, #4]
 3088 001a 1B68     		ldr	r3, [r3]
 3089 001c 9A68     		ldr	r2, [r3, #8]
 3090 001e 7B68     		ldr	r3, [r7, #4]
 3091 0020 1B68     		ldr	r3, [r3]
 3092 0022 0121     		movs	r1, #1
 3093 0024 8A43     		bics	r2, r1
 3094 0026 9A60     		str	r2, [r3, #8]
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3095              		.loc 1 1873 7
 3096 0028 7B68     		ldr	r3, [r7, #4]
 3097 002a 1B68     		ldr	r3, [r3]
 3098 002c 9B68     		ldr	r3, [r3, #8]
 3099 002e 4022     		movs	r2, #64
 3100 0030 1340     		ands	r3, r2
 3101              		.loc 1 1873 6
 3102 0032 402B     		cmp	r3, #64
 3103 0034 23D1     		bne	.L156
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3104              		.loc 1 1875 5
 3105 0036 7B68     		ldr	r3, [r7, #4]
 3106 0038 1B68     		ldr	r3, [r3]
 3107 003a 9A68     		ldr	r2, [r3, #8]
 3108 003c 7B68     		ldr	r3, [r7, #4]
 3109 003e 1B68     		ldr	r3, [r3]
 3110 0040 4021     		movs	r1, #64
 3111 0042 8A43     		bics	r2, r1
 3112 0044 9A60     		str	r2, [r3, #8]
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3113              		.loc 1 1878 14
 3114 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 88


 3115 0048 DB6E     		ldr	r3, [r3, #108]
 3116              		.loc 1 1878 8
 3117 004a 002B     		cmp	r3, #0
 3118 004c 17D0     		beq	.L156
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3119              		.loc 1 1882 12
 3120 004e 7B68     		ldr	r3, [r7, #4]
 3121 0050 DB6E     		ldr	r3, [r3, #108]
 3122              		.loc 1 1882 40
 3123 0052 0022     		movs	r2, #0
 3124 0054 5A63     		str	r2, [r3, #52]
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3125              		.loc 1 1884 11
 3126 0056 7B68     		ldr	r3, [r7, #4]
 3127 0058 DB6E     		ldr	r3, [r3, #108]
 3128 005a 1800     		movs	r0, r3
 3129 005c FFF7FEFF 		bl	HAL_DMA_Abort
 3130 0060 031E     		subs	r3, r0, #0
 3131              		.loc 1 1884 10
 3132 0062 0CD0     		beq	.L156
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3133              		.loc 1 1886 13
 3134 0064 7B68     		ldr	r3, [r7, #4]
 3135 0066 DB6E     		ldr	r3, [r3, #108]
 3136 0068 1800     		movs	r0, r3
 3137 006a FFF7FEFF 		bl	HAL_DMA_GetError
 3138 006e 0300     		movs	r3, r0
 3139              		.loc 1 1886 12
 3140 0070 202B     		cmp	r3, #32
 3141 0072 04D1     		bne	.L156
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3142              		.loc 1 1889 28
 3143 0074 7B68     		ldr	r3, [r7, #4]
 3144 0076 1022     		movs	r2, #16
 3145 0078 DA67     		str	r2, [r3, #124]
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 3146              		.loc 1 1891 18
 3147 007a 0323     		movs	r3, #3
 3148 007c 13E0     		b	.L157
 3149              	.L156:
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3150              		.loc 1 1898 22
 3151 007e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 89


 3152 0080 5A22     		movs	r2, #90
 3153 0082 0021     		movs	r1, #0
 3154 0084 9952     		strh	r1, [r3, r2]
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3155              		.loc 1 1901 3
 3156 0086 7B68     		ldr	r3, [r7, #4]
 3157 0088 1B68     		ldr	r3, [r3]
 3158 008a 0F22     		movs	r2, #15
 3159 008c 1A62     		str	r2, [r3, #32]
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3160              		.loc 1 1904 3
 3161 008e 7B68     		ldr	r3, [r7, #4]
 3162 0090 1B68     		ldr	r3, [r3]
 3163 0092 9A69     		ldr	r2, [r3, #24]
 3164 0094 7B68     		ldr	r3, [r7, #4]
 3165 0096 1B68     		ldr	r3, [r3]
 3166 0098 0821     		movs	r1, #8
 3167 009a 0A43     		orrs	r2, r1
 3168 009c 9A61     		str	r2, [r3, #24]
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3169              		.loc 1 1907 18
 3170 009e 7B68     		ldr	r3, [r7, #4]
 3171 00a0 2022     		movs	r2, #32
 3172 00a2 9A67     		str	r2, [r3, #120]
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3173              		.loc 1 1909 10
 3174 00a4 0023     		movs	r3, #0
 3175              	.L157:
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3176              		.loc 1 1910 1
 3177 00a6 1800     		movs	r0, r3
 3178 00a8 BD46     		mov	sp, r7
 3179 00aa 02B0     		add	sp, sp, #8
 3180              		@ sp needed
 3181 00ac 80BD     		pop	{r7, pc}
 3182              	.L159:
 3183 00ae C046     		.align	2
 3184              	.L158:
 3185 00b0 DFFEFFFF 		.word	-289
 3186              		.cfi_endproc
 3187              	.LFE58:
 3189              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3190              		.align	1
 3191              		.global	HAL_UART_Abort_IT
 3192              		.syntax unified
 3193              		.code	16
 3194              		.thumb_func
 3195              		.fpu softvfp
 3197              	HAL_UART_Abort_IT:
 3198              	.LFB59:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 90


1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3199              		.loc 1 1927 1
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 16
 3202              		@ frame_needed = 1, uses_anonymous_args = 0
 3203 0000 80B5     		push	{r7, lr}
 3204              	.LCFI57:
 3205              		.cfi_def_cfa_offset 8
 3206              		.cfi_offset 7, -8
 3207              		.cfi_offset 14, -4
 3208 0002 84B0     		sub	sp, sp, #16
 3209              	.LCFI58:
 3210              		.cfi_def_cfa_offset 24
 3211 0004 00AF     		add	r7, sp, #0
 3212              	.LCFI59:
 3213              		.cfi_def_cfa_register 7
 3214 0006 7860     		str	r0, [r7, #4]
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3215              		.loc 1 1928 12
 3216 0008 0123     		movs	r3, #1
 3217 000a FB60     		str	r3, [r7, #12]
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 3218              		.loc 1 1931 3
 3219 000c 7B68     		ldr	r3, [r7, #4]
 3220 000e 1B68     		ldr	r3, [r3]
 3221 0010 1A68     		ldr	r2, [r3]
 3222 0012 7B68     		ldr	r3, [r7, #4]
 3223 0014 1B68     		ldr	r3, [r3]
 3224 0016 5349     		ldr	r1, .L171
 3225 0018 0A40     		ands	r2, r1
 3226 001a 1A60     		str	r2, [r3]
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3227              		.loc 1 1932 3
 3228 001c 7B68     		ldr	r3, [r7, #4]
 3229 001e 1B68     		ldr	r3, [r3]
 3230 0020 9A68     		ldr	r2, [r3, #8]
 3231 0022 7B68     		ldr	r3, [r7, #4]
 3232 0024 1B68     		ldr	r3, [r3]
 3233 0026 0121     		movs	r1, #1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 91


 3234 0028 8A43     		bics	r2, r1
 3235 002a 9A60     		str	r2, [r3, #8]
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3236              		.loc 1 1937 12
 3237 002c 7B68     		ldr	r3, [r7, #4]
 3238 002e 9B6E     		ldr	r3, [r3, #104]
 3239              		.loc 1 1937 6
 3240 0030 002B     		cmp	r3, #0
 3241 0032 0FD0     		beq	.L161
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3242              		.loc 1 1941 9
 3243 0034 7B68     		ldr	r3, [r7, #4]
 3244 0036 1B68     		ldr	r3, [r3]
 3245 0038 9B68     		ldr	r3, [r3, #8]
 3246 003a 8022     		movs	r2, #128
 3247 003c 1340     		ands	r3, r2
 3248              		.loc 1 1941 8
 3249 003e 802B     		cmp	r3, #128
 3250 0040 04D1     		bne	.L162
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3251              		.loc 1 1943 12
 3252 0042 7B68     		ldr	r3, [r7, #4]
 3253 0044 9B6E     		ldr	r3, [r3, #104]
 3254              		.loc 1 1943 40
 3255 0046 484A     		ldr	r2, .L171+4
 3256 0048 5A63     		str	r2, [r3, #52]
 3257 004a 03E0     		b	.L161
 3258              	.L162:
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3259              		.loc 1 1947 12
 3260 004c 7B68     		ldr	r3, [r7, #4]
 3261 004e 9B6E     		ldr	r3, [r3, #104]
 3262              		.loc 1 1947 40
 3263 0050 0022     		movs	r2, #0
 3264 0052 5A63     		str	r2, [r3, #52]
 3265              	.L161:
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 3266              		.loc 1 1951 12
 3267 0054 7B68     		ldr	r3, [r7, #4]
 3268 0056 DB6E     		ldr	r3, [r3, #108]
 3269              		.loc 1 1951 6
 3270 0058 002B     		cmp	r3, #0
 3271 005a 0FD0     		beq	.L163
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 92


1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3272              		.loc 1 1955 9
 3273 005c 7B68     		ldr	r3, [r7, #4]
 3274 005e 1B68     		ldr	r3, [r3]
 3275 0060 9B68     		ldr	r3, [r3, #8]
 3276 0062 4022     		movs	r2, #64
 3277 0064 1340     		ands	r3, r2
 3278              		.loc 1 1955 8
 3279 0066 402B     		cmp	r3, #64
 3280 0068 04D1     		bne	.L164
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3281              		.loc 1 1957 12
 3282 006a 7B68     		ldr	r3, [r7, #4]
 3283 006c DB6E     		ldr	r3, [r3, #108]
 3284              		.loc 1 1957 40
 3285 006e 3F4A     		ldr	r2, .L171+8
 3286 0070 5A63     		str	r2, [r3, #52]
 3287 0072 03E0     		b	.L163
 3288              	.L164:
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3289              		.loc 1 1961 12
 3290 0074 7B68     		ldr	r3, [r7, #4]
 3291 0076 DB6E     		ldr	r3, [r3, #108]
 3292              		.loc 1 1961 40
 3293 0078 0022     		movs	r2, #0
 3294 007a 5A63     		str	r2, [r3, #52]
 3295              	.L163:
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3296              		.loc 1 1966 7
 3297 007c 7B68     		ldr	r3, [r7, #4]
 3298 007e 1B68     		ldr	r3, [r3]
 3299 0080 9B68     		ldr	r3, [r3, #8]
 3300 0082 8022     		movs	r2, #128
 3301 0084 1340     		ands	r3, r2
 3302              		.loc 1 1966 6
 3303 0086 802B     		cmp	r3, #128
 3304 0088 19D1     		bne	.L165
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3305              		.loc 1 1969 5
 3306 008a 7B68     		ldr	r3, [r7, #4]
 3307 008c 1B68     		ldr	r3, [r3]
 3308 008e 9A68     		ldr	r2, [r3, #8]
 3309 0090 7B68     		ldr	r3, [r7, #4]
 3310 0092 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 93


 3311 0094 8021     		movs	r1, #128
 3312 0096 8A43     		bics	r2, r1
 3313 0098 9A60     		str	r2, [r3, #8]
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3314              		.loc 1 1972 14
 3315 009a 7B68     		ldr	r3, [r7, #4]
 3316 009c 9B6E     		ldr	r3, [r3, #104]
 3317              		.loc 1 1972 8
 3318 009e 002B     		cmp	r3, #0
 3319 00a0 0DD0     		beq	.L165
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3320              		.loc 1 1978 11
 3321 00a2 7B68     		ldr	r3, [r7, #4]
 3322 00a4 9B6E     		ldr	r3, [r3, #104]
 3323 00a6 1800     		movs	r0, r3
 3324 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3325 00ac 031E     		subs	r3, r0, #0
 3326              		.loc 1 1978 10
 3327 00ae 04D0     		beq	.L166
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3328              		.loc 1 1980 14
 3329 00b0 7B68     		ldr	r3, [r7, #4]
 3330 00b2 9B6E     		ldr	r3, [r3, #104]
 3331              		.loc 1 1980 42
 3332 00b4 0022     		movs	r2, #0
 3333 00b6 5A63     		str	r2, [r3, #52]
 3334 00b8 01E0     		b	.L165
 3335              	.L166:
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 3336              		.loc 1 1984 19
 3337 00ba 0023     		movs	r3, #0
 3338 00bc FB60     		str	r3, [r7, #12]
 3339              	.L165:
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3340              		.loc 1 1990 7
 3341 00be 7B68     		ldr	r3, [r7, #4]
 3342 00c0 1B68     		ldr	r3, [r3]
 3343 00c2 9B68     		ldr	r3, [r3, #8]
 3344 00c4 4022     		movs	r2, #64
 3345 00c6 1340     		ands	r3, r2
 3346              		.loc 1 1990 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 94


 3347 00c8 402B     		cmp	r3, #64
 3348 00ca 1BD1     		bne	.L167
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3349              		.loc 1 1992 5
 3350 00cc 7B68     		ldr	r3, [r7, #4]
 3351 00ce 1B68     		ldr	r3, [r3]
 3352 00d0 9A68     		ldr	r2, [r3, #8]
 3353 00d2 7B68     		ldr	r3, [r7, #4]
 3354 00d4 1B68     		ldr	r3, [r3]
 3355 00d6 4021     		movs	r1, #64
 3356 00d8 8A43     		bics	r2, r1
 3357 00da 9A60     		str	r2, [r3, #8]
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3358              		.loc 1 1995 14
 3359 00dc 7B68     		ldr	r3, [r7, #4]
 3360 00de DB6E     		ldr	r3, [r3, #108]
 3361              		.loc 1 1995 8
 3362 00e0 002B     		cmp	r3, #0
 3363 00e2 0FD0     		beq	.L167
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3364              		.loc 1 2001 11
 3365 00e4 7B68     		ldr	r3, [r7, #4]
 3366 00e6 DB6E     		ldr	r3, [r3, #108]
 3367 00e8 1800     		movs	r0, r3
 3368 00ea FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3369 00ee 031E     		subs	r3, r0, #0
 3370              		.loc 1 2001 10
 3371 00f0 06D0     		beq	.L168
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3372              		.loc 1 2003 14
 3373 00f2 7B68     		ldr	r3, [r7, #4]
 3374 00f4 DB6E     		ldr	r3, [r3, #108]
 3375              		.loc 1 2003 42
 3376 00f6 0022     		movs	r2, #0
 3377 00f8 5A63     		str	r2, [r3, #52]
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 3378              		.loc 1 2004 19
 3379 00fa 0123     		movs	r3, #1
 3380 00fc FB60     		str	r3, [r7, #12]
 3381 00fe 01E0     		b	.L167
 3382              	.L168:
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 3383              		.loc 1 2008 19
 3384 0100 0023     		movs	r3, #0
 3385 0102 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 95


 3386              	.L167:
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
 3387              		.loc 1 2014 6
 3388 0104 FB68     		ldr	r3, [r7, #12]
 3389 0106 012B     		cmp	r3, #1
 3390 0108 26D1     		bne	.L169
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3391              		.loc 1 2017 24
 3392 010a 7B68     		ldr	r3, [r7, #4]
 3393 010c 5222     		movs	r2, #82
 3394 010e 0021     		movs	r1, #0
 3395 0110 9952     		strh	r1, [r3, r2]
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3396              		.loc 1 2018 24
 3397 0112 7B68     		ldr	r3, [r7, #4]
 3398 0114 5A22     		movs	r2, #90
 3399 0116 0021     		movs	r1, #0
 3400 0118 9952     		strh	r1, [r3, r2]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear ISR function pointers */
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = NULL;
 3401              		.loc 1 2021 18
 3402 011a 7B68     		ldr	r3, [r7, #4]
 3403 011c 0022     		movs	r2, #0
 3404 011e 1A66     		str	r2, [r3, #96]
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 3405              		.loc 1 2022 18
 3406 0120 7B68     		ldr	r3, [r7, #4]
 3407 0122 0022     		movs	r2, #0
 3408 0124 5A66     		str	r2, [r3, #100]
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3409              		.loc 1 2025 22
 3410 0126 7B68     		ldr	r3, [r7, #4]
 3411 0128 0022     		movs	r2, #0
 3412 012a DA67     		str	r2, [r3, #124]
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3413              		.loc 1 2028 5
 3414 012c 7B68     		ldr	r3, [r7, #4]
 3415 012e 1B68     		ldr	r3, [r3]
 3416 0130 0F22     		movs	r2, #15
 3417 0132 1A62     		str	r2, [r3, #32]
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Discard the received data */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3418              		.loc 1 2032 5
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 96


 3419 0134 7B68     		ldr	r3, [r7, #4]
 3420 0136 1B68     		ldr	r3, [r3]
 3421 0138 9A69     		ldr	r2, [r3, #24]
 3422 013a 7B68     		ldr	r3, [r7, #4]
 3423 013c 1B68     		ldr	r3, [r3]
 3424 013e 0821     		movs	r1, #8
 3425 0140 0A43     		orrs	r2, r1
 3426 0142 9A61     		str	r2, [r3, #24]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3427              		.loc 1 2035 20
 3428 0144 7B68     		ldr	r3, [r7, #4]
 3429 0146 2022     		movs	r2, #32
 3430 0148 5A67     		str	r2, [r3, #116]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3431              		.loc 1 2036 20
 3432 014a 7B68     		ldr	r3, [r7, #4]
 3433 014c 2022     		movs	r2, #32
 3434 014e 9A67     		str	r2, [r3, #120]
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3435              		.loc 1 2044 5
 3436 0150 7B68     		ldr	r3, [r7, #4]
 3437 0152 1800     		movs	r0, r3
 3438 0154 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3439              	.L169:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3440              		.loc 1 2048 10
 3441 0158 0023     		movs	r3, #0
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3442              		.loc 1 2049 1
 3443 015a 1800     		movs	r0, r3
 3444 015c BD46     		mov	sp, r7
 3445 015e 04B0     		add	sp, sp, #16
 3446              		@ sp needed
 3447 0160 80BD     		pop	{r7, pc}
 3448              	.L172:
 3449 0162 C046     		.align	2
 3450              	.L171:
 3451 0164 1FFEFFFF 		.word	-481
 3452 0168 00000000 		.word	UART_DMATxAbortCallback
 3453 016c 00000000 		.word	UART_DMARxAbortCallback
 3454              		.cfi_endproc
 3455              	.LFE59:
 3457              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3458              		.align	1
 3459              		.global	HAL_UART_AbortTransmit_IT
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 97


 3460              		.syntax unified
 3461              		.code	16
 3462              		.thumb_func
 3463              		.fpu softvfp
 3465              	HAL_UART_AbortTransmit_IT:
 3466              	.LFB60:
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3467              		.loc 1 2066 1
 3468              		.cfi_startproc
 3469              		@ args = 0, pretend = 0, frame = 8
 3470              		@ frame_needed = 1, uses_anonymous_args = 0
 3471 0000 80B5     		push	{r7, lr}
 3472              	.LCFI60:
 3473              		.cfi_def_cfa_offset 8
 3474              		.cfi_offset 7, -8
 3475              		.cfi_offset 14, -4
 3476 0002 82B0     		sub	sp, sp, #8
 3477              	.LCFI61:
 3478              		.cfi_def_cfa_offset 16
 3479 0004 00AF     		add	r7, sp, #0
 3480              	.LCFI62:
 3481              		.cfi_def_cfa_register 7
 3482 0006 7860     		str	r0, [r7, #4]
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3483              		.loc 1 2068 3
 3484 0008 7B68     		ldr	r3, [r7, #4]
 3485 000a 1B68     		ldr	r3, [r3]
 3486 000c 1A68     		ldr	r2, [r3]
 3487 000e 7B68     		ldr	r3, [r7, #4]
 3488 0010 1B68     		ldr	r3, [r3]
 3489 0012 C021     		movs	r1, #192
 3490 0014 8A43     		bics	r2, r1
 3491 0016 1A60     		str	r2, [r3]
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3492              		.loc 1 2071 7
 3493 0018 7B68     		ldr	r3, [r7, #4]
 3494 001a 1B68     		ldr	r3, [r3]
 3495 001c 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 98


 3496 001e 8022     		movs	r2, #128
 3497 0020 1340     		ands	r3, r2
 3498              		.loc 1 2071 6
 3499 0022 802B     		cmp	r3, #128
 3500 0024 2DD1     		bne	.L174
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3501              		.loc 1 2073 5
 3502 0026 7B68     		ldr	r3, [r7, #4]
 3503 0028 1B68     		ldr	r3, [r3]
 3504 002a 9A68     		ldr	r2, [r3, #8]
 3505 002c 7B68     		ldr	r3, [r7, #4]
 3506 002e 1B68     		ldr	r3, [r3]
 3507 0030 8021     		movs	r1, #128
 3508 0032 8A43     		bics	r2, r1
 3509 0034 9A60     		str	r2, [r3, #8]
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3510              		.loc 1 2076 14
 3511 0036 7B68     		ldr	r3, [r7, #4]
 3512 0038 9B6E     		ldr	r3, [r3, #104]
 3513              		.loc 1 2076 8
 3514 003a 002B     		cmp	r3, #0
 3515 003c 12D0     		beq	.L175
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3516              		.loc 1 2080 12
 3517 003e 7B68     		ldr	r3, [r7, #4]
 3518 0040 9B6E     		ldr	r3, [r3, #104]
 3519              		.loc 1 2080 40
 3520 0042 194A     		ldr	r2, .L178
 3521 0044 5A63     		str	r2, [r3, #52]
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3522              		.loc 1 2083 11
 3523 0046 7B68     		ldr	r3, [r7, #4]
 3524 0048 9B6E     		ldr	r3, [r3, #104]
 3525 004a 1800     		movs	r0, r3
 3526 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3527 0050 031E     		subs	r3, r0, #0
 3528              		.loc 1 2083 10
 3529 0052 24D0     		beq	.L176
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3530              		.loc 1 2086 14
 3531 0054 7B68     		ldr	r3, [r7, #4]
 3532 0056 9B6E     		ldr	r3, [r3, #104]
 3533              		.loc 1 2086 22
 3534 0058 5A6B     		ldr	r2, [r3, #52]
 3535              		.loc 1 2086 47
 3536 005a 7B68     		ldr	r3, [r7, #4]
 3537 005c 9B6E     		ldr	r3, [r3, #104]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 99


 3538              		.loc 1 2086 9
 3539 005e 1800     		movs	r0, r3
 3540 0060 9047     		blx	r2
 3541              	.LVL0:
 3542 0062 1CE0     		b	.L176
 3543              	.L175:
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3544              		.loc 1 2092 26
 3545 0064 7B68     		ldr	r3, [r7, #4]
 3546 0066 5222     		movs	r2, #82
 3547 0068 0021     		movs	r1, #0
 3548 006a 9952     		strh	r1, [r3, r2]
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = NULL;
 3549              		.loc 1 2095 20
 3550 006c 7B68     		ldr	r3, [r7, #4]
 3551 006e 0022     		movs	r2, #0
 3552 0070 5A66     		str	r2, [r3, #100]
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3553              		.loc 1 2098 21
 3554 0072 7B68     		ldr	r3, [r7, #4]
 3555 0074 2022     		movs	r2, #32
 3556 0076 5A67     		str	r2, [r3, #116]
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3557              		.loc 1 2106 7
 3558 0078 7B68     		ldr	r3, [r7, #4]
 3559 007a 1800     		movs	r0, r3
 3560 007c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3561 0080 0DE0     		b	.L176
 3562              	.L174:
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3563              		.loc 1 2113 24
 3564 0082 7B68     		ldr	r3, [r7, #4]
 3565 0084 5222     		movs	r2, #82
 3566 0086 0021     		movs	r1, #0
 3567 0088 9952     		strh	r1, [r3, r2]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 100


2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 3568              		.loc 1 2116 18
 3569 008a 7B68     		ldr	r3, [r7, #4]
 3570 008c 0022     		movs	r2, #0
 3571 008e 5A66     		str	r2, [r3, #100]
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3572              		.loc 1 2120 19
 3573 0090 7B68     		ldr	r3, [r7, #4]
 3574 0092 2022     		movs	r2, #32
 3575 0094 5A67     		str	r2, [r3, #116]
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3576              		.loc 1 2128 5
 3577 0096 7B68     		ldr	r3, [r7, #4]
 3578 0098 1800     		movs	r0, r3
 3579 009a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3580              	.L176:
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3581              		.loc 1 2132 10
 3582 009e 0023     		movs	r3, #0
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3583              		.loc 1 2133 1
 3584 00a0 1800     		movs	r0, r3
 3585 00a2 BD46     		mov	sp, r7
 3586 00a4 02B0     		add	sp, sp, #8
 3587              		@ sp needed
 3588 00a6 80BD     		pop	{r7, pc}
 3589              	.L179:
 3590              		.align	2
 3591              	.L178:
 3592 00a8 00000000 		.word	UART_DMATxOnlyAbortCallback
 3593              		.cfi_endproc
 3594              	.LFE60:
 3596              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3597              		.align	1
 3598              		.global	HAL_UART_AbortReceive_IT
 3599              		.syntax unified
 3600              		.code	16
 3601              		.thumb_func
 3602              		.fpu softvfp
 3604              	HAL_UART_AbortReceive_IT:
 3605              	.LFB61:
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 101


2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3606              		.loc 1 2150 1
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 8
 3609              		@ frame_needed = 1, uses_anonymous_args = 0
 3610 0000 80B5     		push	{r7, lr}
 3611              	.LCFI63:
 3612              		.cfi_def_cfa_offset 8
 3613              		.cfi_offset 7, -8
 3614              		.cfi_offset 14, -4
 3615 0002 82B0     		sub	sp, sp, #8
 3616              	.LCFI64:
 3617              		.cfi_def_cfa_offset 16
 3618 0004 00AF     		add	r7, sp, #0
 3619              	.LCFI65:
 3620              		.cfi_def_cfa_register 7
 3621 0006 7860     		str	r0, [r7, #4]
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3622              		.loc 1 2152 3
 3623 0008 7B68     		ldr	r3, [r7, #4]
 3624 000a 1B68     		ldr	r3, [r3]
 3625 000c 1A68     		ldr	r2, [r3]
 3626 000e 7B68     		ldr	r3, [r7, #4]
 3627 0010 1B68     		ldr	r3, [r3]
 3628 0012 3149     		ldr	r1, .L185
 3629 0014 0A40     		ands	r2, r1
 3630 0016 1A60     		str	r2, [r3]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3631              		.loc 1 2153 3
 3632 0018 7B68     		ldr	r3, [r7, #4]
 3633 001a 1B68     		ldr	r3, [r3]
 3634 001c 9A68     		ldr	r2, [r3, #8]
 3635 001e 7B68     		ldr	r3, [r7, #4]
 3636 0020 1B68     		ldr	r3, [r3]
 3637 0022 0121     		movs	r1, #1
 3638 0024 8A43     		bics	r2, r1
 3639 0026 9A60     		str	r2, [r3, #8]
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3640              		.loc 1 2156 7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 102


 3641 0028 7B68     		ldr	r3, [r7, #4]
 3642 002a 1B68     		ldr	r3, [r3]
 3643 002c 9B68     		ldr	r3, [r3, #8]
 3644 002e 4022     		movs	r2, #64
 3645 0030 1340     		ands	r3, r2
 3646              		.loc 1 2156 6
 3647 0032 402B     		cmp	r3, #64
 3648 0034 39D1     		bne	.L181
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3649              		.loc 1 2158 5
 3650 0036 7B68     		ldr	r3, [r7, #4]
 3651 0038 1B68     		ldr	r3, [r3]
 3652 003a 9A68     		ldr	r2, [r3, #8]
 3653 003c 7B68     		ldr	r3, [r7, #4]
 3654 003e 1B68     		ldr	r3, [r3]
 3655 0040 4021     		movs	r1, #64
 3656 0042 8A43     		bics	r2, r1
 3657 0044 9A60     		str	r2, [r3, #8]
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3658              		.loc 1 2161 14
 3659 0046 7B68     		ldr	r3, [r7, #4]
 3660 0048 DB6E     		ldr	r3, [r3, #108]
 3661              		.loc 1 2161 8
 3662 004a 002B     		cmp	r3, #0
 3663 004c 12D0     		beq	.L182
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3664              		.loc 1 2165 12
 3665 004e 7B68     		ldr	r3, [r7, #4]
 3666 0050 DB6E     		ldr	r3, [r3, #108]
 3667              		.loc 1 2165 40
 3668 0052 224A     		ldr	r2, .L185+4
 3669 0054 5A63     		str	r2, [r3, #52]
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3670              		.loc 1 2168 11
 3671 0056 7B68     		ldr	r3, [r7, #4]
 3672 0058 DB6E     		ldr	r3, [r3, #108]
 3673 005a 1800     		movs	r0, r3
 3674 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3675 0060 031E     		subs	r3, r0, #0
 3676              		.loc 1 2168 10
 3677 0062 34D0     		beq	.L183
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3678              		.loc 1 2171 14
 3679 0064 7B68     		ldr	r3, [r7, #4]
 3680 0066 DB6E     		ldr	r3, [r3, #108]
 3681              		.loc 1 2171 22
 3682 0068 5A6B     		ldr	r2, [r3, #52]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 103


 3683              		.loc 1 2171 47
 3684 006a 7B68     		ldr	r3, [r7, #4]
 3685 006c DB6E     		ldr	r3, [r3, #108]
 3686              		.loc 1 2171 9
 3687 006e 1800     		movs	r0, r3
 3688 0070 9047     		blx	r2
 3689              	.LVL1:
 3690 0072 2CE0     		b	.L183
 3691              	.L182:
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3692              		.loc 1 2177 26
 3693 0074 7B68     		ldr	r3, [r7, #4]
 3694 0076 5A22     		movs	r2, #90
 3695 0078 0021     		movs	r1, #0
 3696 007a 9952     		strh	r1, [r3, r2]
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3697              		.loc 1 2180 25
 3698 007c 7B68     		ldr	r3, [r7, #4]
 3699 007e 0022     		movs	r2, #0
 3700 0080 5A65     		str	r2, [r3, #84]
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3701              		.loc 1 2183 7
 3702 0082 7B68     		ldr	r3, [r7, #4]
 3703 0084 1B68     		ldr	r3, [r3]
 3704 0086 0F22     		movs	r2, #15
 3705 0088 1A62     		str	r2, [r3, #32]
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Discard the received data */
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3706              		.loc 1 2186 7
 3707 008a 7B68     		ldr	r3, [r7, #4]
 3708 008c 1B68     		ldr	r3, [r3]
 3709 008e 9A69     		ldr	r2, [r3, #24]
 3710 0090 7B68     		ldr	r3, [r7, #4]
 3711 0092 1B68     		ldr	r3, [r3]
 3712 0094 0821     		movs	r1, #8
 3713 0096 0A43     		orrs	r2, r1
 3714 0098 9A61     		str	r2, [r3, #24]
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3715              		.loc 1 2189 22
 3716 009a 7B68     		ldr	r3, [r7, #4]
 3717 009c 2022     		movs	r2, #32
 3718 009e 9A67     		str	r2, [r3, #120]
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 104


2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3719              		.loc 1 2197 7
 3720 00a0 7B68     		ldr	r3, [r7, #4]
 3721 00a2 1800     		movs	r0, r3
 3722 00a4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3723 00a8 11E0     		b	.L183
 3724              	.L181:
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3725              		.loc 1 2204 24
 3726 00aa 7B68     		ldr	r3, [r7, #4]
 3727 00ac 5A22     		movs	r2, #90
 3728 00ae 0021     		movs	r1, #0
 3729 00b0 9952     		strh	r1, [r3, r2]
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3730              		.loc 1 2207 23
 3731 00b2 7B68     		ldr	r3, [r7, #4]
 3732 00b4 0022     		movs	r2, #0
 3733 00b6 5A65     		str	r2, [r3, #84]
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3734              		.loc 1 2210 5
 3735 00b8 7B68     		ldr	r3, [r7, #4]
 3736 00ba 1B68     		ldr	r3, [r3]
 3737 00bc 0F22     		movs	r2, #15
 3738 00be 1A62     		str	r2, [r3, #32]
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3739              		.loc 1 2213 20
 3740 00c0 7B68     		ldr	r3, [r7, #4]
 3741 00c2 2022     		movs	r2, #32
 3742 00c4 9A67     		str	r2, [r3, #120]
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3743              		.loc 1 2221 5
 3744 00c6 7B68     		ldr	r3, [r7, #4]
 3745 00c8 1800     		movs	r0, r3
 3746 00ca FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 105


 3747              	.L183:
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3748              		.loc 1 2225 10
 3749 00ce 0023     		movs	r3, #0
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3750              		.loc 1 2226 1
 3751 00d0 1800     		movs	r0, r3
 3752 00d2 BD46     		mov	sp, r7
 3753 00d4 02B0     		add	sp, sp, #8
 3754              		@ sp needed
 3755 00d6 80BD     		pop	{r7, pc}
 3756              	.L186:
 3757              		.align	2
 3758              	.L185:
 3759 00d8 DFFEFFFF 		.word	-289
 3760 00dc 00000000 		.word	UART_DMARxOnlyAbortCallback
 3761              		.cfi_endproc
 3762              	.LFE61:
 3764              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3765              		.align	1
 3766              		.global	HAL_UART_IRQHandler
 3767              		.syntax unified
 3768              		.code	16
 3769              		.thumb_func
 3770              		.fpu softvfp
 3772              	HAL_UART_IRQHandler:
 3773              	.LFB62:
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3774              		.loc 1 2234 1
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 32
 3777              		@ frame_needed = 1, uses_anonymous_args = 0
 3778 0000 80B5     		push	{r7, lr}
 3779              	.LCFI66:
 3780              		.cfi_def_cfa_offset 8
 3781              		.cfi_offset 7, -8
 3782              		.cfi_offset 14, -4
 3783 0002 88B0     		sub	sp, sp, #32
 3784              	.LCFI67:
 3785              		.cfi_def_cfa_offset 40
 3786 0004 00AF     		add	r7, sp, #0
 3787              	.LCFI68:
 3788              		.cfi_def_cfa_register 7
 3789 0006 7860     		str	r0, [r7, #4]
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3790              		.loc 1 2235 25
 3791 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 106


 3792 000a 1B68     		ldr	r3, [r3]
 3793              		.loc 1 2235 12
 3794 000c DB69     		ldr	r3, [r3, #28]
 3795 000e FB61     		str	r3, [r7, #28]
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3796              		.loc 1 2236 25
 3797 0010 7B68     		ldr	r3, [r7, #4]
 3798 0012 1B68     		ldr	r3, [r3]
 3799              		.loc 1 2236 12
 3800 0014 1B68     		ldr	r3, [r3]
 3801 0016 BB61     		str	r3, [r7, #24]
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3802              		.loc 1 2237 25
 3803 0018 7B68     		ldr	r3, [r7, #4]
 3804 001a 1B68     		ldr	r3, [r3]
 3805              		.loc 1 2237 12
 3806 001c 9B68     		ldr	r3, [r3, #8]
 3807 001e 7B61     		str	r3, [r7, #20]
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorcode;
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 3808              		.loc 1 2243 14
 3809 0020 FB69     		ldr	r3, [r7, #28]
 3810 0022 934A     		ldr	r2, .L213
 3811 0024 1340     		ands	r3, r2
 3812 0026 3B61     		str	r3, [r7, #16]
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
 3813              		.loc 1 2244 6
 3814 0028 3B69     		ldr	r3, [r7, #16]
 3815 002a 002B     		cmp	r3, #0
 3816 002c 12D1     		bne	.L188
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 3817              		.loc 1 2247 20
 3818 002e FB69     		ldr	r3, [r7, #28]
 3819 0030 2022     		movs	r2, #32
 3820 0032 1340     		ands	r3, r2
 3821              		.loc 1 2247 8
 3822 0034 0ED0     		beq	.L188
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3823              		.loc 1 2248 21
 3824 0036 BB69     		ldr	r3, [r7, #24]
 3825 0038 2022     		movs	r2, #32
 3826 003a 1340     		ands	r3, r2
 3827              		.loc 1 2248 9
 3828 003c 0AD0     		beq	.L188
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3829              		.loc 1 2250 16
 3830 003e 7B68     		ldr	r3, [r7, #4]
 3831 0040 1B6E     		ldr	r3, [r3, #96]
 3832              		.loc 1 2250 10
 3833 0042 002B     		cmp	r3, #0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 107


 3834 0044 00D1     		bne	.LCB3233
 3835 0046 0AE1     		b	.L209	@long jump
 3836              	.LCB3233:
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR(huart);
 3837              		.loc 1 2252 14
 3838 0048 7B68     		ldr	r3, [r7, #4]
 3839 004a 1B6E     		ldr	r3, [r3, #96]
 3840              		.loc 1 2252 9
 3841 004c 7A68     		ldr	r2, [r7, #4]
 3842 004e 1000     		movs	r0, r2
 3843 0050 9847     		blx	r3
 3844              	.LVL2:
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 3845              		.loc 1 2254 7
 3846 0052 04E1     		b	.L209
 3847              	.L188:
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((errorflags != 0U)
 3848              		.loc 1 2259 6
 3849 0054 3B69     		ldr	r3, [r7, #16]
 3850 0056 002B     		cmp	r3, #0
 3851 0058 00D1     		bne	.LCB3245
 3852 005a CDE0     		b	.L191	@long jump
 3853              	.LCB3245:
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3854              		.loc 1 2260 20
 3855 005c 7B69     		ldr	r3, [r7, #20]
 3856 005e 0122     		movs	r2, #1
 3857 0060 1340     		ands	r3, r2
 3858              		.loc 1 2260 7
 3859 0062 05D1     		bne	.L192
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 3860              		.loc 1 2261 23
 3861 0064 BA69     		ldr	r2, [r7, #24]
 3862 0066 9023     		movs	r3, #144
 3863 0068 5B00     		lsls	r3, r3, #1
 3864 006a 1340     		ands	r3, r2
 3865              		.loc 1 2261 11
 3866 006c 00D1     		bne	.LCB3256
 3867 006e C3E0     		b	.L191	@long jump
 3868              	.LCB3256:
 3869              	.L192:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3870              		.loc 1 2264 20
 3871 0070 FB69     		ldr	r3, [r7, #28]
 3872 0072 0122     		movs	r2, #1
 3873 0074 1340     		ands	r3, r2
 3874              		.loc 1 2264 8
 3875 0076 0ED0     		beq	.L193
 3876              		.loc 1 2264 55 discriminator 1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 108


 3877 0078 BA69     		ldr	r2, [r7, #24]
 3878 007a 8023     		movs	r3, #128
 3879 007c 5B00     		lsls	r3, r3, #1
 3880 007e 1340     		ands	r3, r2
 3881              		.loc 1 2264 43 discriminator 1
 3882 0080 09D0     		beq	.L193
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3883              		.loc 1 2266 7
 3884 0082 7B68     		ldr	r3, [r7, #4]
 3885 0084 1B68     		ldr	r3, [r3]
 3886 0086 0122     		movs	r2, #1
 3887 0088 1A62     		str	r2, [r3, #32]
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3888              		.loc 1 2268 24
 3889 008a 7B68     		ldr	r3, [r7, #4]
 3890 008c DB6F     		ldr	r3, [r3, #124]
 3891 008e 0122     		movs	r2, #1
 3892 0090 1A43     		orrs	r2, r3
 3893 0092 7B68     		ldr	r3, [r7, #4]
 3894 0094 DA67     		str	r2, [r3, #124]
 3895              	.L193:
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3896              		.loc 1 2272 20
 3897 0096 FB69     		ldr	r3, [r7, #28]
 3898 0098 0222     		movs	r2, #2
 3899 009a 1340     		ands	r3, r2
 3900              		.loc 1 2272 8
 3901 009c 0DD0     		beq	.L194
 3902              		.loc 1 2272 55 discriminator 1
 3903 009e 7B69     		ldr	r3, [r7, #20]
 3904 00a0 0122     		movs	r2, #1
 3905 00a2 1340     		ands	r3, r2
 3906              		.loc 1 2272 43 discriminator 1
 3907 00a4 09D0     		beq	.L194
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3908              		.loc 1 2274 7
 3909 00a6 7B68     		ldr	r3, [r7, #4]
 3910 00a8 1B68     		ldr	r3, [r3]
 3911 00aa 0222     		movs	r2, #2
 3912 00ac 1A62     		str	r2, [r3, #32]
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3913              		.loc 1 2276 24
 3914 00ae 7B68     		ldr	r3, [r7, #4]
 3915 00b0 DB6F     		ldr	r3, [r3, #124]
 3916 00b2 0422     		movs	r2, #4
 3917 00b4 1A43     		orrs	r2, r3
 3918 00b6 7B68     		ldr	r3, [r7, #4]
 3919 00b8 DA67     		str	r2, [r3, #124]
 3920              	.L194:
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 109


2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3921              		.loc 1 2280 20
 3922 00ba FB69     		ldr	r3, [r7, #28]
 3923 00bc 0422     		movs	r2, #4
 3924 00be 1340     		ands	r3, r2
 3925              		.loc 1 2280 8
 3926 00c0 0DD0     		beq	.L195
 3927              		.loc 1 2280 55 discriminator 1
 3928 00c2 7B69     		ldr	r3, [r7, #20]
 3929 00c4 0122     		movs	r2, #1
 3930 00c6 1340     		ands	r3, r2
 3931              		.loc 1 2280 43 discriminator 1
 3932 00c8 09D0     		beq	.L195
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3933              		.loc 1 2282 7
 3934 00ca 7B68     		ldr	r3, [r7, #4]
 3935 00cc 1B68     		ldr	r3, [r3]
 3936 00ce 0422     		movs	r2, #4
 3937 00d0 1A62     		str	r2, [r3, #32]
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3938              		.loc 1 2284 24
 3939 00d2 7B68     		ldr	r3, [r7, #4]
 3940 00d4 DB6F     		ldr	r3, [r3, #124]
 3941 00d6 0222     		movs	r2, #2
 3942 00d8 1A43     		orrs	r2, r3
 3943 00da 7B68     		ldr	r3, [r7, #4]
 3944 00dc DA67     		str	r2, [r3, #124]
 3945              	.L195:
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3946              		.loc 1 2288 20
 3947 00de FB69     		ldr	r3, [r7, #28]
 3948 00e0 0822     		movs	r2, #8
 3949 00e2 1340     		ands	r3, r2
 3950              		.loc 1 2288 8
 3951 00e4 11D0     		beq	.L196
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3952              		.loc 1 2289 22
 3953 00e6 BB69     		ldr	r3, [r7, #24]
 3954 00e8 2022     		movs	r2, #32
 3955 00ea 1340     		ands	r3, r2
 3956              		.loc 1 2289 9
 3957 00ec 03D1     		bne	.L197
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3958              		.loc 1 2290 22 discriminator 1
 3959 00ee 7B69     		ldr	r3, [r7, #20]
 3960 00f0 0122     		movs	r2, #1
 3961 00f2 1340     		ands	r3, r2
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3962              		.loc 1 2289 49 discriminator 1
 3963 00f4 09D0     		beq	.L196
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 110


 3964              	.L197:
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3965              		.loc 1 2292 7
 3966 00f6 7B68     		ldr	r3, [r7, #4]
 3967 00f8 1B68     		ldr	r3, [r3]
 3968 00fa 0822     		movs	r2, #8
 3969 00fc 1A62     		str	r2, [r3, #32]
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3970              		.loc 1 2294 24
 3971 00fe 7B68     		ldr	r3, [r7, #4]
 3972 0100 DB6F     		ldr	r3, [r3, #124]
 3973 0102 0822     		movs	r2, #8
 3974 0104 1A43     		orrs	r2, r3
 3975 0106 7B68     		ldr	r3, [r7, #4]
 3976 0108 DA67     		str	r2, [r3, #124]
 3977              	.L196:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 3978              		.loc 1 2298 20
 3979 010a FA69     		ldr	r2, [r7, #28]
 3980 010c 8023     		movs	r3, #128
 3981 010e 1B01     		lsls	r3, r3, #4
 3982 0110 1340     		ands	r3, r2
 3983              		.loc 1 2298 8
 3984 0112 0FD0     		beq	.L198
 3985              		.loc 1 2298 57 discriminator 1
 3986 0114 BA69     		ldr	r2, [r7, #24]
 3987 0116 8023     		movs	r3, #128
 3988 0118 DB04     		lsls	r3, r3, #19
 3989 011a 1340     		ands	r3, r2
 3990              		.loc 1 2298 45 discriminator 1
 3991 011c 0AD0     		beq	.L198
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 3992              		.loc 1 2300 7
 3993 011e 7B68     		ldr	r3, [r7, #4]
 3994 0120 1B68     		ldr	r3, [r3]
 3995 0122 8022     		movs	r2, #128
 3996 0124 1201     		lsls	r2, r2, #4
 3997 0126 1A62     		str	r2, [r3, #32]
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 3998              		.loc 1 2302 24
 3999 0128 7B68     		ldr	r3, [r7, #4]
 4000 012a DB6F     		ldr	r3, [r3, #124]
 4001 012c 2022     		movs	r2, #32
 4002 012e 1A43     		orrs	r2, r3
 4003 0130 7B68     		ldr	r3, [r7, #4]
 4004 0132 DA67     		str	r2, [r3, #124]
 4005              	.L198:
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 111


2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 4006              		.loc 1 2306 14
 4007 0134 7B68     		ldr	r3, [r7, #4]
 4008 0136 DB6F     		ldr	r3, [r3, #124]
 4009              		.loc 1 2306 8
 4010 0138 002B     		cmp	r3, #0
 4011 013a 00D1     		bne	.LCB3381
 4012 013c 91E0     		b	.L210	@long jump
 4013              	.LCB3381:
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 4014              		.loc 1 2309 22
 4015 013e FB69     		ldr	r3, [r7, #28]
 4016 0140 2022     		movs	r2, #32
 4017 0142 1340     		ands	r3, r2
 4018              		.loc 1 2309 10
 4019 0144 0CD0     		beq	.L200
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4020              		.loc 1 2310 23
 4021 0146 BB69     		ldr	r3, [r7, #24]
 4022 0148 2022     		movs	r2, #32
 4023 014a 1340     		ands	r3, r2
 4024              		.loc 1 2310 11
 4025 014c 08D0     		beq	.L200
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->RxISR != NULL)
 4026              		.loc 1 2312 18
 4027 014e 7B68     		ldr	r3, [r7, #4]
 4028 0150 1B6E     		ldr	r3, [r3, #96]
 4029              		.loc 1 2312 12
 4030 0152 002B     		cmp	r3, #0
 4031 0154 04D0     		beq	.L200
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxISR(huart);
 4032              		.loc 1 2314 16
 4033 0156 7B68     		ldr	r3, [r7, #4]
 4034 0158 1B6E     		ldr	r3, [r3, #96]
 4035              		.loc 1 2314 11
 4036 015a 7A68     		ldr	r2, [r7, #4]
 4037 015c 1000     		movs	r0, r2
 4038 015e 9847     		blx	r3
 4039              	.LVL3:
 4040              	.L200:
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Receiver Timeout error in Reception
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Overrun error in Reception
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - any error occurs in DMA mode reception
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       */
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 4041              		.loc 1 2323 17
 4042 0160 7B68     		ldr	r3, [r7, #4]
 4043 0162 DB6F     		ldr	r3, [r3, #124]
 4044 0164 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 112


2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4045              		.loc 1 2324 12
 4046 0166 7B68     		ldr	r3, [r7, #4]
 4047 0168 1B68     		ldr	r3, [r3]
 4048 016a 9B68     		ldr	r3, [r3, #8]
 4049 016c 4022     		movs	r2, #64
 4050 016e 1340     		ands	r3, r2
 4051              		.loc 1 2324 10
 4052 0170 402B     		cmp	r3, #64
 4053 0172 03D0     		beq	.L201
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4054              		.loc 1 2325 23 discriminator 1
 4055 0174 FB68     		ldr	r3, [r7, #12]
 4056 0176 2822     		movs	r2, #40
 4057 0178 1340     		ands	r3, r2
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4058              		.loc 1 2324 66 discriminator 1
 4059 017a 33D0     		beq	.L202
 4060              	.L201:
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 4061              		.loc 1 2330 9
 4062 017c 7B68     		ldr	r3, [r7, #4]
 4063 017e 1800     		movs	r0, r3
 4064 0180 FFF7FEFF 		bl	UART_EndRxTransfer
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4065              		.loc 1 2333 13
 4066 0184 7B68     		ldr	r3, [r7, #4]
 4067 0186 1B68     		ldr	r3, [r3]
 4068 0188 9B68     		ldr	r3, [r3, #8]
 4069 018a 4022     		movs	r2, #64
 4070 018c 1340     		ands	r3, r2
 4071              		.loc 1 2333 12
 4072 018e 402B     		cmp	r3, #64
 4073 0190 23D1     		bne	.L203
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4074              		.loc 1 2335 11
 4075 0192 7B68     		ldr	r3, [r7, #4]
 4076 0194 1B68     		ldr	r3, [r3]
 4077 0196 9A68     		ldr	r2, [r3, #8]
 4078 0198 7B68     		ldr	r3, [r7, #4]
 4079 019a 1B68     		ldr	r3, [r3]
 4080 019c 4021     		movs	r1, #64
 4081 019e 8A43     		bics	r2, r1
 4082 01a0 9A60     		str	r2, [r3, #8]
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 4083              		.loc 1 2338 20
 4084 01a2 7B68     		ldr	r3, [r7, #4]
 4085 01a4 DB6E     		ldr	r3, [r3, #108]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 113


 4086              		.loc 1 2338 14
 4087 01a6 002B     		cmp	r3, #0
 4088 01a8 12D0     		beq	.L204
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 4089              		.loc 1 2342 18
 4090 01aa 7B68     		ldr	r3, [r7, #4]
 4091 01ac DB6E     		ldr	r3, [r3, #108]
 4092              		.loc 1 2342 46
 4093 01ae 314A     		ldr	r2, .L213+4
 4094 01b0 5A63     		str	r2, [r3, #52]
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4095              		.loc 1 2345 17
 4096 01b2 7B68     		ldr	r3, [r7, #4]
 4097 01b4 DB6E     		ldr	r3, [r3, #108]
 4098 01b6 1800     		movs	r0, r3
 4099 01b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4100 01bc 031E     		subs	r3, r0, #0
 4101              		.loc 1 2345 16
 4102 01be 19D0     		beq	.L211
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4103              		.loc 1 2348 20
 4104 01c0 7B68     		ldr	r3, [r7, #4]
 4105 01c2 DB6E     		ldr	r3, [r3, #108]
 4106              		.loc 1 2348 28
 4107 01c4 5A6B     		ldr	r2, [r3, #52]
 4108              		.loc 1 2348 53
 4109 01c6 7B68     		ldr	r3, [r7, #4]
 4110 01c8 DB6E     		ldr	r3, [r3, #108]
 4111              		.loc 1 2348 15
 4112 01ca 1800     		movs	r0, r3
 4113 01cc 9047     		blx	r2
 4114              	.LVL4:
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4115              		.loc 1 2333 12
 4116 01ce 11E0     		b	.L211
 4117              	.L204:
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call registered error callback*/
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->ErrorCallback(huart);
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 4118              		.loc 1 2359 13
 4119 01d0 7B68     		ldr	r3, [r7, #4]
 4120 01d2 1800     		movs	r0, r3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 114


 4121 01d4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4122              		.loc 1 2333 12
 4123 01d8 0CE0     		b	.L211
 4124              	.L203:
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call registered error callback*/
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 4125              		.loc 1 2372 11
 4126 01da 7B68     		ldr	r3, [r7, #4]
 4127 01dc 1800     		movs	r0, r3
 4128 01de FFF7FEFF 		bl	HAL_UART_ErrorCallback
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4129              		.loc 1 2333 12
 4130 01e2 07E0     		b	.L211
 4131              	.L202:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered error callback*/
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 4132              		.loc 1 2385 9
 4133 01e4 7B68     		ldr	r3, [r7, #4]
 4134 01e6 1800     		movs	r0, r3
 4135 01e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4136              		.loc 1 2387 26
 4137 01ec 7B68     		ldr	r3, [r7, #4]
 4138 01ee 0022     		movs	r2, #0
 4139 01f0 DA67     		str	r2, [r3, #124]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4140              		.loc 1 2390 5
 4141 01f2 36E0     		b	.L210
 4142              	.L211:
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4143              		.loc 1 2333 12
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 115


 4144 01f4 C046     		nop
 4145              		.loc 1 2390 5
 4146 01f6 34E0     		b	.L210
 4147              	.L191:
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 4148              		.loc 1 2396 18
 4149 01f8 FA69     		ldr	r2, [r7, #28]
 4150 01fa 8023     		movs	r3, #128
 4151 01fc 5B03     		lsls	r3, r3, #13
 4152 01fe 1340     		ands	r3, r2
 4153              		.loc 1 2396 6
 4154 0200 0ED0     		beq	.L206
 4155              		.loc 1 2396 54 discriminator 1
 4156 0202 7A69     		ldr	r2, [r7, #20]
 4157 0204 8023     		movs	r3, #128
 4158 0206 DB03     		lsls	r3, r3, #15
 4159 0208 1340     		ands	r3, r2
 4160              		.loc 1 2396 42 discriminator 1
 4161 020a 09D0     		beq	.L206
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 4162              		.loc 1 2398 5
 4163 020c 7B68     		ldr	r3, [r7, #4]
 4164 020e 1B68     		ldr	r3, [r3]
 4165 0210 8022     		movs	r2, #128
 4166 0212 5203     		lsls	r2, r2, #13
 4167 0214 1A62     		str	r2, [r3, #32]
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4168              		.loc 1 2408 5
 4169 0216 7B68     		ldr	r3, [r7, #4]
 4170 0218 1800     		movs	r0, r3
 4171 021a FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4172              		.loc 1 2410 5
 4173 021e 23E0     		b	.L187
 4174              	.L206:
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 4175              		.loc 1 2415 18
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 116


 4176 0220 FB69     		ldr	r3, [r7, #28]
 4177 0222 8022     		movs	r2, #128
 4178 0224 1340     		ands	r3, r2
 4179              		.loc 1 2415 6
 4180 0226 0DD0     		beq	.L207
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 4181              		.loc 1 2416 19
 4182 0228 BB69     		ldr	r3, [r7, #24]
 4183 022a 8022     		movs	r2, #128
 4184 022c 1340     		ands	r3, r2
 4185              		.loc 1 2416 7
 4186 022e 09D0     		beq	.L207
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxISR != NULL)
 4187              		.loc 1 2418 14
 4188 0230 7B68     		ldr	r3, [r7, #4]
 4189 0232 5B6E     		ldr	r3, [r3, #100]
 4190              		.loc 1 2418 8
 4191 0234 002B     		cmp	r3, #0
 4192 0236 16D0     		beq	.L212
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR(huart);
 4193              		.loc 1 2420 12
 4194 0238 7B68     		ldr	r3, [r7, #4]
 4195 023a 5B6E     		ldr	r3, [r3, #100]
 4196              		.loc 1 2420 7
 4197 023c 7A68     		ldr	r2, [r7, #4]
 4198 023e 1000     		movs	r0, r2
 4199 0240 9847     		blx	r3
 4200              	.LVL5:
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4201              		.loc 1 2422 5
 4202 0242 10E0     		b	.L212
 4203              	.L207:
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 4204              		.loc 1 2426 18
 4205 0244 FB69     		ldr	r3, [r7, #28]
 4206 0246 4022     		movs	r2, #64
 4207 0248 1340     		ands	r3, r2
 4208              		.loc 1 2426 6
 4209 024a 0DD0     		beq	.L187
 4210              		.loc 1 2426 53 discriminator 1
 4211 024c BB69     		ldr	r3, [r7, #24]
 4212 024e 4022     		movs	r2, #64
 4213 0250 1340     		ands	r3, r2
 4214              		.loc 1 2426 41 discriminator 1
 4215 0252 09D0     		beq	.L187
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 4216              		.loc 1 2428 5
 4217 0254 7B68     		ldr	r3, [r7, #4]
 4218 0256 1800     		movs	r0, r3
 4219 0258 FFF7FEFF 		bl	UART_EndTransmit_IT
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 117


2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4220              		.loc 1 2429 5
 4221 025c 04E0     		b	.L187
 4222              	.L209:
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4223              		.loc 1 2254 7
 4224 025e C046     		nop
 4225 0260 02E0     		b	.L187
 4226              	.L210:
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4227              		.loc 1 2390 5
 4228 0262 C046     		nop
 4229 0264 00E0     		b	.L187
 4230              	.L212:
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4231              		.loc 1 2422 5
 4232 0266 C046     		nop
 4233              	.L187:
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4234              		.loc 1 2432 1
 4235 0268 BD46     		mov	sp, r7
 4236 026a 08B0     		add	sp, sp, #32
 4237              		@ sp needed
 4238 026c 80BD     		pop	{r7, pc}
 4239              	.L214:
 4240 026e C046     		.align	2
 4241              	.L213:
 4242 0270 0F080000 		.word	2063
 4243 0274 00000000 		.word	UART_DMAAbortOnError
 4244              		.cfi_endproc
 4245              	.LFE62:
 4247              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 4248              		.align	1
 4249              		.weak	HAL_UART_TxCpltCallback
 4250              		.syntax unified
 4251              		.code	16
 4252              		.thumb_func
 4253              		.fpu softvfp
 4255              	HAL_UART_TxCpltCallback:
 4256              	.LFB63:
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4257              		.loc 1 2440 1
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 8
 4260              		@ frame_needed = 1, uses_anonymous_args = 0
 4261 0000 80B5     		push	{r7, lr}
 4262              	.LCFI69:
 4263              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 118


 4264              		.cfi_offset 7, -8
 4265              		.cfi_offset 14, -4
 4266 0002 82B0     		sub	sp, sp, #8
 4267              	.LCFI70:
 4268              		.cfi_def_cfa_offset 16
 4269 0004 00AF     		add	r7, sp, #0
 4270              	.LCFI71:
 4271              		.cfi_def_cfa_register 7
 4272 0006 7860     		str	r0, [r7, #4]
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4273              		.loc 1 2447 1
 4274 0008 C046     		nop
 4275 000a BD46     		mov	sp, r7
 4276 000c 02B0     		add	sp, sp, #8
 4277              		@ sp needed
 4278 000e 80BD     		pop	{r7, pc}
 4279              		.cfi_endproc
 4280              	.LFE63:
 4282              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 4283              		.align	1
 4284              		.weak	HAL_UART_TxHalfCpltCallback
 4285              		.syntax unified
 4286              		.code	16
 4287              		.thumb_func
 4288              		.fpu softvfp
 4290              	HAL_UART_TxHalfCpltCallback:
 4291              	.LFB64:
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4292              		.loc 1 2455 1
 4293              		.cfi_startproc
 4294              		@ args = 0, pretend = 0, frame = 8
 4295              		@ frame_needed = 1, uses_anonymous_args = 0
 4296 0000 80B5     		push	{r7, lr}
 4297              	.LCFI72:
 4298              		.cfi_def_cfa_offset 8
 4299              		.cfi_offset 7, -8
 4300              		.cfi_offset 14, -4
 4301 0002 82B0     		sub	sp, sp, #8
 4302              	.LCFI73:
 4303              		.cfi_def_cfa_offset 16
 4304 0004 00AF     		add	r7, sp, #0
 4305              	.LCFI74:
 4306              		.cfi_def_cfa_register 7
 4307 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 119


2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4308              		.loc 1 2462 1
 4309 0008 C046     		nop
 4310 000a BD46     		mov	sp, r7
 4311 000c 02B0     		add	sp, sp, #8
 4312              		@ sp needed
 4313 000e 80BD     		pop	{r7, pc}
 4314              		.cfi_endproc
 4315              	.LFE64:
 4317              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4318              		.align	1
 4319              		.weak	HAL_UART_RxCpltCallback
 4320              		.syntax unified
 4321              		.code	16
 4322              		.thumb_func
 4323              		.fpu softvfp
 4325              	HAL_UART_RxCpltCallback:
 4326              	.LFB65:
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4327              		.loc 1 2470 1
 4328              		.cfi_startproc
 4329              		@ args = 0, pretend = 0, frame = 8
 4330              		@ frame_needed = 1, uses_anonymous_args = 0
 4331 0000 80B5     		push	{r7, lr}
 4332              	.LCFI75:
 4333              		.cfi_def_cfa_offset 8
 4334              		.cfi_offset 7, -8
 4335              		.cfi_offset 14, -4
 4336 0002 82B0     		sub	sp, sp, #8
 4337              	.LCFI76:
 4338              		.cfi_def_cfa_offset 16
 4339 0004 00AF     		add	r7, sp, #0
 4340              	.LCFI77:
 4341              		.cfi_def_cfa_register 7
 4342 0006 7860     		str	r0, [r7, #4]
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4343              		.loc 1 2477 1
 4344 0008 C046     		nop
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 120


 4345 000a BD46     		mov	sp, r7
 4346 000c 02B0     		add	sp, sp, #8
 4347              		@ sp needed
 4348 000e 80BD     		pop	{r7, pc}
 4349              		.cfi_endproc
 4350              	.LFE65:
 4352              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4353              		.align	1
 4354              		.weak	HAL_UART_RxHalfCpltCallback
 4355              		.syntax unified
 4356              		.code	16
 4357              		.thumb_func
 4358              		.fpu softvfp
 4360              	HAL_UART_RxHalfCpltCallback:
 4361              	.LFB66:
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4362              		.loc 1 2485 1
 4363              		.cfi_startproc
 4364              		@ args = 0, pretend = 0, frame = 8
 4365              		@ frame_needed = 1, uses_anonymous_args = 0
 4366 0000 80B5     		push	{r7, lr}
 4367              	.LCFI78:
 4368              		.cfi_def_cfa_offset 8
 4369              		.cfi_offset 7, -8
 4370              		.cfi_offset 14, -4
 4371 0002 82B0     		sub	sp, sp, #8
 4372              	.LCFI79:
 4373              		.cfi_def_cfa_offset 16
 4374 0004 00AF     		add	r7, sp, #0
 4375              	.LCFI80:
 4376              		.cfi_def_cfa_register 7
 4377 0006 7860     		str	r0, [r7, #4]
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4378              		.loc 1 2492 1
 4379 0008 C046     		nop
 4380 000a BD46     		mov	sp, r7
 4381 000c 02B0     		add	sp, sp, #8
 4382              		@ sp needed
 4383 000e 80BD     		pop	{r7, pc}
 4384              		.cfi_endproc
 4385              	.LFE66:
 4387              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4388              		.align	1
 4389              		.weak	HAL_UART_ErrorCallback
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 121


 4390              		.syntax unified
 4391              		.code	16
 4392              		.thumb_func
 4393              		.fpu softvfp
 4395              	HAL_UART_ErrorCallback:
 4396              	.LFB67:
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART error callback.
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4397              		.loc 1 2500 1
 4398              		.cfi_startproc
 4399              		@ args = 0, pretend = 0, frame = 8
 4400              		@ frame_needed = 1, uses_anonymous_args = 0
 4401 0000 80B5     		push	{r7, lr}
 4402              	.LCFI81:
 4403              		.cfi_def_cfa_offset 8
 4404              		.cfi_offset 7, -8
 4405              		.cfi_offset 14, -4
 4406 0002 82B0     		sub	sp, sp, #8
 4407              	.LCFI82:
 4408              		.cfi_def_cfa_offset 16
 4409 0004 00AF     		add	r7, sp, #0
 4410              	.LCFI83:
 4411              		.cfi_def_cfa_register 7
 4412 0006 7860     		str	r0, [r7, #4]
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4413              		.loc 1 2507 1
 4414 0008 C046     		nop
 4415 000a BD46     		mov	sp, r7
 4416 000c 02B0     		add	sp, sp, #8
 4417              		@ sp needed
 4418 000e 80BD     		pop	{r7, pc}
 4419              		.cfi_endproc
 4420              	.LFE67:
 4422              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4423              		.align	1
 4424              		.weak	HAL_UART_AbortCpltCallback
 4425              		.syntax unified
 4426              		.code	16
 4427              		.thumb_func
 4428              		.fpu softvfp
 4430              	HAL_UART_AbortCpltCallback:
 4431              	.LFB68:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 122


2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4432              		.loc 1 2515 1
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 8
 4435              		@ frame_needed = 1, uses_anonymous_args = 0
 4436 0000 80B5     		push	{r7, lr}
 4437              	.LCFI84:
 4438              		.cfi_def_cfa_offset 8
 4439              		.cfi_offset 7, -8
 4440              		.cfi_offset 14, -4
 4441 0002 82B0     		sub	sp, sp, #8
 4442              	.LCFI85:
 4443              		.cfi_def_cfa_offset 16
 4444 0004 00AF     		add	r7, sp, #0
 4445              	.LCFI86:
 4446              		.cfi_def_cfa_register 7
 4447 0006 7860     		str	r0, [r7, #4]
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4448              		.loc 1 2522 1
 4449 0008 C046     		nop
 4450 000a BD46     		mov	sp, r7
 4451 000c 02B0     		add	sp, sp, #8
 4452              		@ sp needed
 4453 000e 80BD     		pop	{r7, pc}
 4454              		.cfi_endproc
 4455              	.LFE68:
 4457              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4458              		.align	1
 4459              		.weak	HAL_UART_AbortTransmitCpltCallback
 4460              		.syntax unified
 4461              		.code	16
 4462              		.thumb_func
 4463              		.fpu softvfp
 4465              	HAL_UART_AbortTransmitCpltCallback:
 4466              	.LFB69:
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4467              		.loc 1 2530 1
 4468              		.cfi_startproc
 4469              		@ args = 0, pretend = 0, frame = 8
 4470              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 123


 4471 0000 80B5     		push	{r7, lr}
 4472              	.LCFI87:
 4473              		.cfi_def_cfa_offset 8
 4474              		.cfi_offset 7, -8
 4475              		.cfi_offset 14, -4
 4476 0002 82B0     		sub	sp, sp, #8
 4477              	.LCFI88:
 4478              		.cfi_def_cfa_offset 16
 4479 0004 00AF     		add	r7, sp, #0
 4480              	.LCFI89:
 4481              		.cfi_def_cfa_register 7
 4482 0006 7860     		str	r0, [r7, #4]
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4483              		.loc 1 2537 1
 4484 0008 C046     		nop
 4485 000a BD46     		mov	sp, r7
 4486 000c 02B0     		add	sp, sp, #8
 4487              		@ sp needed
 4488 000e 80BD     		pop	{r7, pc}
 4489              		.cfi_endproc
 4490              	.LFE69:
 4492              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4493              		.align	1
 4494              		.weak	HAL_UART_AbortReceiveCpltCallback
 4495              		.syntax unified
 4496              		.code	16
 4497              		.thumb_func
 4498              		.fpu softvfp
 4500              	HAL_UART_AbortReceiveCpltCallback:
 4501              	.LFB70:
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4502              		.loc 1 2545 1
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 8
 4505              		@ frame_needed = 1, uses_anonymous_args = 0
 4506 0000 80B5     		push	{r7, lr}
 4507              	.LCFI90:
 4508              		.cfi_def_cfa_offset 8
 4509              		.cfi_offset 7, -8
 4510              		.cfi_offset 14, -4
 4511 0002 82B0     		sub	sp, sp, #8
 4512              	.LCFI91:
 4513              		.cfi_def_cfa_offset 16
 4514 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 124


 4515              	.LCFI92:
 4516              		.cfi_def_cfa_register 7
 4517 0006 7860     		str	r0, [r7, #4]
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4518              		.loc 1 2552 1
 4519 0008 C046     		nop
 4520 000a BD46     		mov	sp, r7
 4521 000c 02B0     		add	sp, sp, #8
 4522              		@ sp needed
 4523 000e 80BD     		pop	{r7, pc}
 4524              		.cfi_endproc
 4525              	.LFE70:
 4527              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 4528              		.align	1
 4529              		.global	HAL_UART_ReceiverTimeout_Config
 4530              		.syntax unified
 4531              		.code	16
 4532              		.thumb_func
 4533              		.fpu softvfp
 4535              	HAL_UART_ReceiverTimeout_Config:
 4536              	.LFB71:
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 125


2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4537              		.loc 1 2592 1
 4538              		.cfi_startproc
 4539              		@ args = 0, pretend = 0, frame = 8
 4540              		@ frame_needed = 1, uses_anonymous_args = 0
 4541 0000 80B5     		push	{r7, lr}
 4542              	.LCFI93:
 4543              		.cfi_def_cfa_offset 8
 4544              		.cfi_offset 7, -8
 4545              		.cfi_offset 14, -4
 4546 0002 82B0     		sub	sp, sp, #8
 4547              	.LCFI94:
 4548              		.cfi_def_cfa_offset 16
 4549 0004 00AF     		add	r7, sp, #0
 4550              	.LCFI95:
 4551              		.cfi_def_cfa_register 7
 4552 0006 7860     		str	r0, [r7, #4]
 4553 0008 3960     		str	r1, [r7]
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 4554              		.loc 1 2594 3
 4555 000a 7B68     		ldr	r3, [r7, #4]
 4556 000c 1B68     		ldr	r3, [r3]
 4557 000e 5B69     		ldr	r3, [r3, #20]
 4558 0010 1B0E     		lsrs	r3, r3, #24
 4559 0012 1906     		lsls	r1, r3, #24
 4560 0014 7B68     		ldr	r3, [r7, #4]
 4561 0016 1B68     		ldr	r3, [r3]
 4562 0018 3A68     		ldr	r2, [r7]
 4563 001a 0A43     		orrs	r2, r1
 4564 001c 5A61     		str	r2, [r3, #20]
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4565              		.loc 1 2595 1
 4566 001e C046     		nop
 4567 0020 BD46     		mov	sp, r7
 4568 0022 02B0     		add	sp, sp, #8
 4569              		@ sp needed
 4570 0024 80BD     		pop	{r7, pc}
 4571              		.cfi_endproc
 4572              	.LFE71:
 4574              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 4575              		.align	1
 4576              		.global	HAL_UART_EnableReceiverTimeout
 4577              		.syntax unified
 4578              		.code	16
 4579              		.thumb_func
 4580              		.fpu softvfp
 4582              	HAL_UART_EnableReceiverTimeout:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 126


 4583              	.LFB72:
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4584              		.loc 1 2604 1
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 8
 4587              		@ frame_needed = 1, uses_anonymous_args = 0
 4588 0000 80B5     		push	{r7, lr}
 4589              	.LCFI96:
 4590              		.cfi_def_cfa_offset 8
 4591              		.cfi_offset 7, -8
 4592              		.cfi_offset 14, -4
 4593 0002 82B0     		sub	sp, sp, #8
 4594              	.LCFI97:
 4595              		.cfi_def_cfa_offset 16
 4596 0004 00AF     		add	r7, sp, #0
 4597              	.LCFI98:
 4598              		.cfi_def_cfa_register 7
 4599 0006 7860     		str	r0, [r7, #4]
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 4600              		.loc 1 2605 12
 4601 0008 7B68     		ldr	r3, [r7, #4]
 4602 000a 5B6F     		ldr	r3, [r3, #116]
 4603              		.loc 1 2605 6
 4604 000c 202B     		cmp	r3, #32
 4605 000e 1FD1     		bne	.L225
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 4606              		.loc 1 2608 5
 4607 0010 7B68     		ldr	r3, [r7, #4]
 4608 0012 7022     		movs	r2, #112
 4609 0014 9B5C     		ldrb	r3, [r3, r2]
 4610 0016 012B     		cmp	r3, #1
 4611 0018 01D1     		bne	.L226
 4612              		.loc 1 2608 5 is_stmt 0 discriminator 1
 4613 001a 0223     		movs	r3, #2
 4614 001c 19E0     		b	.L227
 4615              	.L226:
 4616              		.loc 1 2608 5 discriminator 2
 4617 001e 7B68     		ldr	r3, [r7, #4]
 4618 0020 7022     		movs	r2, #112
 4619 0022 0121     		movs	r1, #1
 4620 0024 9954     		strb	r1, [r3, r2]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 4621              		.loc 1 2610 19 is_stmt 1 discriminator 2
 4622 0026 7B68     		ldr	r3, [r7, #4]
 4623 0028 2422     		movs	r2, #36
 4624 002a 5A67     		str	r2, [r3, #116]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 127


2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4625              		.loc 1 2613 5 discriminator 2
 4626 002c 7B68     		ldr	r3, [r7, #4]
 4627 002e 1B68     		ldr	r3, [r3]
 4628 0030 5A68     		ldr	r2, [r3, #4]
 4629 0032 7B68     		ldr	r3, [r7, #4]
 4630 0034 1B68     		ldr	r3, [r3]
 4631 0036 8021     		movs	r1, #128
 4632 0038 0904     		lsls	r1, r1, #16
 4633 003a 0A43     		orrs	r2, r1
 4634 003c 5A60     		str	r2, [r3, #4]
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4635              		.loc 1 2615 19 discriminator 2
 4636 003e 7B68     		ldr	r3, [r7, #4]
 4637 0040 2022     		movs	r2, #32
 4638 0042 5A67     		str	r2, [r3, #116]
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 4639              		.loc 1 2618 5 discriminator 2
 4640 0044 7B68     		ldr	r3, [r7, #4]
 4641 0046 7022     		movs	r2, #112
 4642 0048 0021     		movs	r1, #0
 4643 004a 9954     		strb	r1, [r3, r2]
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 4644              		.loc 1 2620 12 discriminator 2
 4645 004c 0023     		movs	r3, #0
 4646 004e 00E0     		b	.L227
 4647              	.L225:
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4648              		.loc 1 2624 12
 4649 0050 0223     		movs	r3, #2
 4650              	.L227:
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4651              		.loc 1 2626 1
 4652 0052 1800     		movs	r0, r3
 4653 0054 BD46     		mov	sp, r7
 4654 0056 02B0     		add	sp, sp, #8
 4655              		@ sp needed
 4656 0058 80BD     		pop	{r7, pc}
 4657              		.cfi_endproc
 4658              	.LFE72:
 4660              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 4661              		.align	1
 4662              		.global	HAL_UART_DisableReceiverTimeout
 4663              		.syntax unified
 4664              		.code	16
 4665              		.thumb_func
 4666              		.fpu softvfp
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 128


 4668              	HAL_UART_DisableReceiverTimeout:
 4669              	.LFB73:
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4670              		.loc 1 2635 1
 4671              		.cfi_startproc
 4672              		@ args = 0, pretend = 0, frame = 8
 4673              		@ frame_needed = 1, uses_anonymous_args = 0
 4674 0000 80B5     		push	{r7, lr}
 4675              	.LCFI99:
 4676              		.cfi_def_cfa_offset 8
 4677              		.cfi_offset 7, -8
 4678              		.cfi_offset 14, -4
 4679 0002 82B0     		sub	sp, sp, #8
 4680              	.LCFI100:
 4681              		.cfi_def_cfa_offset 16
 4682 0004 00AF     		add	r7, sp, #0
 4683              	.LCFI101:
 4684              		.cfi_def_cfa_register 7
 4685 0006 7860     		str	r0, [r7, #4]
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 4686              		.loc 1 2636 12
 4687 0008 7B68     		ldr	r3, [r7, #4]
 4688 000a 5B6F     		ldr	r3, [r3, #116]
 4689              		.loc 1 2636 6
 4690 000c 202B     		cmp	r3, #32
 4691 000e 1ED1     		bne	.L229
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 4692              		.loc 1 2639 5
 4693 0010 7B68     		ldr	r3, [r7, #4]
 4694 0012 7022     		movs	r2, #112
 4695 0014 9B5C     		ldrb	r3, [r3, r2]
 4696 0016 012B     		cmp	r3, #1
 4697 0018 01D1     		bne	.L230
 4698              		.loc 1 2639 5 is_stmt 0 discriminator 1
 4699 001a 0223     		movs	r3, #2
 4700 001c 18E0     		b	.L231
 4701              	.L230:
 4702              		.loc 1 2639 5 discriminator 2
 4703 001e 7B68     		ldr	r3, [r7, #4]
 4704 0020 7022     		movs	r2, #112
 4705 0022 0121     		movs	r1, #1
 4706 0024 9954     		strb	r1, [r3, r2]
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 4707              		.loc 1 2641 19 is_stmt 1 discriminator 2
 4708 0026 7B68     		ldr	r3, [r7, #4]
 4709 0028 2422     		movs	r2, #36
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 129


 4710 002a 5A67     		str	r2, [r3, #116]
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4711              		.loc 1 2644 5 discriminator 2
 4712 002c 7B68     		ldr	r3, [r7, #4]
 4713 002e 1B68     		ldr	r3, [r3]
 4714 0030 5A68     		ldr	r2, [r3, #4]
 4715 0032 7B68     		ldr	r3, [r7, #4]
 4716 0034 1B68     		ldr	r3, [r3]
 4717 0036 0849     		ldr	r1, .L232
 4718 0038 0A40     		ands	r2, r1
 4719 003a 5A60     		str	r2, [r3, #4]
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4720              		.loc 1 2646 19 discriminator 2
 4721 003c 7B68     		ldr	r3, [r7, #4]
 4722 003e 2022     		movs	r2, #32
 4723 0040 5A67     		str	r2, [r3, #116]
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 4724              		.loc 1 2649 5 discriminator 2
 4725 0042 7B68     		ldr	r3, [r7, #4]
 4726 0044 7022     		movs	r2, #112
 4727 0046 0021     		movs	r1, #0
 4728 0048 9954     		strb	r1, [r3, r2]
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 4729              		.loc 1 2651 12 discriminator 2
 4730 004a 0023     		movs	r3, #0
 4731 004c 00E0     		b	.L231
 4732              	.L229:
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4733              		.loc 1 2655 12
 4734 004e 0223     		movs	r3, #2
 4735              	.L231:
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4736              		.loc 1 2657 1
 4737 0050 1800     		movs	r0, r3
 4738 0052 BD46     		mov	sp, r7
 4739 0054 02B0     		add	sp, sp, #8
 4740              		@ sp needed
 4741 0056 80BD     		pop	{r7, pc}
 4742              	.L233:
 4743              		.align	2
 4744              	.L232:
 4745 0058 FFFF7FFF 		.word	-8388609
 4746              		.cfi_endproc
 4747              	.LFE73:
 4749              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4750              		.align	1
 4751              		.global	HAL_MultiProcessor_EnableMuteMode
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 130


 4752              		.syntax unified
 4753              		.code	16
 4754              		.thumb_func
 4755              		.fpu softvfp
 4757              	HAL_MultiProcessor_EnableMuteMode:
 4758              	.LFB74:
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4759              		.loc 1 2666 1
 4760              		.cfi_startproc
 4761              		@ args = 0, pretend = 0, frame = 8
 4762              		@ frame_needed = 1, uses_anonymous_args = 0
 4763 0000 80B5     		push	{r7, lr}
 4764              	.LCFI102:
 4765              		.cfi_def_cfa_offset 8
 4766              		.cfi_offset 7, -8
 4767              		.cfi_offset 14, -4
 4768 0002 82B0     		sub	sp, sp, #8
 4769              	.LCFI103:
 4770              		.cfi_def_cfa_offset 16
 4771 0004 00AF     		add	r7, sp, #0
 4772              	.LCFI104:
 4773              		.cfi_def_cfa_register 7
 4774 0006 7860     		str	r0, [r7, #4]
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4775              		.loc 1 2667 3
 4776 0008 7B68     		ldr	r3, [r7, #4]
 4777 000a 7022     		movs	r2, #112
 4778 000c 9B5C     		ldrb	r3, [r3, r2]
 4779 000e 012B     		cmp	r3, #1
 4780 0010 01D1     		bne	.L235
 4781              		.loc 1 2667 3 is_stmt 0 discriminator 1
 4782 0012 0223     		movs	r3, #2
 4783 0014 17E0     		b	.L236
 4784              	.L235:
 4785              		.loc 1 2667 3 discriminator 2
 4786 0016 7B68     		ldr	r3, [r7, #4]
 4787 0018 7022     		movs	r2, #112
 4788 001a 0121     		movs	r1, #1
 4789 001c 9954     		strb	r1, [r3, r2]
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4790              		.loc 1 2669 17 is_stmt 1 discriminator 2
 4791 001e 7B68     		ldr	r3, [r7, #4]
 4792 0020 2422     		movs	r2, #36
 4793 0022 5A67     		str	r2, [r3, #116]
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4794              		.loc 1 2672 3 discriminator 2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 131


 4795 0024 7B68     		ldr	r3, [r7, #4]
 4796 0026 1B68     		ldr	r3, [r3]
 4797 0028 1A68     		ldr	r2, [r3]
 4798 002a 7B68     		ldr	r3, [r7, #4]
 4799 002c 1B68     		ldr	r3, [r3]
 4800 002e 8021     		movs	r1, #128
 4801 0030 8901     		lsls	r1, r1, #6
 4802 0032 0A43     		orrs	r2, r1
 4803 0034 1A60     		str	r2, [r3]
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4804              		.loc 1 2674 17 discriminator 2
 4805 0036 7B68     		ldr	r3, [r7, #4]
 4806 0038 2022     		movs	r2, #32
 4807 003a 5A67     		str	r2, [r3, #116]
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4808              		.loc 1 2676 11 discriminator 2
 4809 003c 7B68     		ldr	r3, [r7, #4]
 4810 003e 1800     		movs	r0, r3
 4811 0040 FFF7FEFF 		bl	UART_CheckIdleState
 4812 0044 0300     		movs	r3, r0
 4813              	.L236:
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4814              		.loc 1 2677 1
 4815 0046 1800     		movs	r0, r3
 4816 0048 BD46     		mov	sp, r7
 4817 004a 02B0     		add	sp, sp, #8
 4818              		@ sp needed
 4819 004c 80BD     		pop	{r7, pc}
 4820              		.cfi_endproc
 4821              	.LFE74:
 4823              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4824              		.align	1
 4825              		.global	HAL_MultiProcessor_DisableMuteMode
 4826              		.syntax unified
 4827              		.code	16
 4828              		.thumb_func
 4829              		.fpu softvfp
 4831              	HAL_MultiProcessor_DisableMuteMode:
 4832              	.LFB75:
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4833              		.loc 1 2686 1
 4834              		.cfi_startproc
 4835              		@ args = 0, pretend = 0, frame = 8
 4836              		@ frame_needed = 1, uses_anonymous_args = 0
 4837 0000 80B5     		push	{r7, lr}
 4838              	.LCFI105:
 4839              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 132


 4840              		.cfi_offset 7, -8
 4841              		.cfi_offset 14, -4
 4842 0002 82B0     		sub	sp, sp, #8
 4843              	.LCFI106:
 4844              		.cfi_def_cfa_offset 16
 4845 0004 00AF     		add	r7, sp, #0
 4846              	.LCFI107:
 4847              		.cfi_def_cfa_register 7
 4848 0006 7860     		str	r0, [r7, #4]
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4849              		.loc 1 2687 3
 4850 0008 7B68     		ldr	r3, [r7, #4]
 4851 000a 7022     		movs	r2, #112
 4852 000c 9B5C     		ldrb	r3, [r3, r2]
 4853 000e 012B     		cmp	r3, #1
 4854 0010 01D1     		bne	.L238
 4855              		.loc 1 2687 3 is_stmt 0 discriminator 1
 4856 0012 0223     		movs	r3, #2
 4857 0014 16E0     		b	.L239
 4858              	.L238:
 4859              		.loc 1 2687 3 discriminator 2
 4860 0016 7B68     		ldr	r3, [r7, #4]
 4861 0018 7022     		movs	r2, #112
 4862 001a 0121     		movs	r1, #1
 4863 001c 9954     		strb	r1, [r3, r2]
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4864              		.loc 1 2689 17 is_stmt 1 discriminator 2
 4865 001e 7B68     		ldr	r3, [r7, #4]
 4866 0020 2422     		movs	r2, #36
 4867 0022 5A67     		str	r2, [r3, #116]
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4868              		.loc 1 2692 3 discriminator 2
 4869 0024 7B68     		ldr	r3, [r7, #4]
 4870 0026 1B68     		ldr	r3, [r3]
 4871 0028 1A68     		ldr	r2, [r3]
 4872 002a 7B68     		ldr	r3, [r7, #4]
 4873 002c 1B68     		ldr	r3, [r3]
 4874 002e 0749     		ldr	r1, .L240
 4875 0030 0A40     		ands	r2, r1
 4876 0032 1A60     		str	r2, [r3]
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4877              		.loc 1 2694 17 discriminator 2
 4878 0034 7B68     		ldr	r3, [r7, #4]
 4879 0036 2022     		movs	r2, #32
 4880 0038 5A67     		str	r2, [r3, #116]
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4881              		.loc 1 2696 11 discriminator 2
 4882 003a 7B68     		ldr	r3, [r7, #4]
 4883 003c 1800     		movs	r0, r3
 4884 003e FFF7FEFF 		bl	UART_CheckIdleState
 4885 0042 0300     		movs	r3, r0
 4886              	.L239:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 133


2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4887              		.loc 1 2697 1
 4888 0044 1800     		movs	r0, r3
 4889 0046 BD46     		mov	sp, r7
 4890 0048 02B0     		add	sp, sp, #8
 4891              		@ sp needed
 4892 004a 80BD     		pop	{r7, pc}
 4893              	.L241:
 4894              		.align	2
 4895              	.L240:
 4896 004c FFDFFFFF 		.word	-8193
 4897              		.cfi_endproc
 4898              	.LFE75:
 4900              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4901              		.align	1
 4902              		.global	HAL_MultiProcessor_EnterMuteMode
 4903              		.syntax unified
 4904              		.code	16
 4905              		.thumb_func
 4906              		.fpu softvfp
 4908              	HAL_MultiProcessor_EnterMuteMode:
 4909              	.LFB76:
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4910              		.loc 1 2706 1
 4911              		.cfi_startproc
 4912              		@ args = 0, pretend = 0, frame = 8
 4913              		@ frame_needed = 1, uses_anonymous_args = 0
 4914 0000 80B5     		push	{r7, lr}
 4915              	.LCFI108:
 4916              		.cfi_def_cfa_offset 8
 4917              		.cfi_offset 7, -8
 4918              		.cfi_offset 14, -4
 4919 0002 82B0     		sub	sp, sp, #8
 4920              	.LCFI109:
 4921              		.cfi_def_cfa_offset 16
 4922 0004 00AF     		add	r7, sp, #0
 4923              	.LCFI110:
 4924              		.cfi_def_cfa_register 7
 4925 0006 7860     		str	r0, [r7, #4]
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4926              		.loc 1 2707 3
 4927 0008 7B68     		ldr	r3, [r7, #4]
 4928 000a 1B68     		ldr	r3, [r3]
 4929 000c 9A69     		ldr	r2, [r3, #24]
 4930 000e 7B68     		ldr	r3, [r7, #4]
 4931 0010 1B68     		ldr	r3, [r3]
 4932 0012 0421     		movs	r1, #4
 4933 0014 0A43     		orrs	r2, r1
 4934 0016 9A61     		str	r2, [r3, #24]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 134


2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4935              		.loc 1 2708 1
 4936 0018 C046     		nop
 4937 001a BD46     		mov	sp, r7
 4938 001c 02B0     		add	sp, sp, #8
 4939              		@ sp needed
 4940 001e 80BD     		pop	{r7, pc}
 4941              		.cfi_endproc
 4942              	.LFE76:
 4944              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4945              		.align	1
 4946              		.global	HAL_HalfDuplex_EnableTransmitter
 4947              		.syntax unified
 4948              		.code	16
 4949              		.thumb_func
 4950              		.fpu softvfp
 4952              	HAL_HalfDuplex_EnableTransmitter:
 4953              	.LFB77:
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4954              		.loc 1 2716 1
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 8
 4957              		@ frame_needed = 1, uses_anonymous_args = 0
 4958 0000 80B5     		push	{r7, lr}
 4959              	.LCFI111:
 4960              		.cfi_def_cfa_offset 8
 4961              		.cfi_offset 7, -8
 4962              		.cfi_offset 14, -4
 4963 0002 82B0     		sub	sp, sp, #8
 4964              	.LCFI112:
 4965              		.cfi_def_cfa_offset 16
 4966 0004 00AF     		add	r7, sp, #0
 4967              	.LCFI113:
 4968              		.cfi_def_cfa_register 7
 4969 0006 7860     		str	r0, [r7, #4]
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4970              		.loc 1 2717 3
 4971 0008 7B68     		ldr	r3, [r7, #4]
 4972 000a 7022     		movs	r2, #112
 4973 000c 9B5C     		ldrb	r3, [r3, r2]
 4974 000e 012B     		cmp	r3, #1
 4975 0010 01D1     		bne	.L244
 4976              		.loc 1 2717 3 is_stmt 0 discriminator 1
 4977 0012 0223     		movs	r3, #2
 4978 0014 1EE0     		b	.L245
 4979              	.L244:
 4980              		.loc 1 2717 3 discriminator 2
 4981 0016 7B68     		ldr	r3, [r7, #4]
 4982 0018 7022     		movs	r2, #112
 4983 001a 0121     		movs	r1, #1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 135


 4984 001c 9954     		strb	r1, [r3, r2]
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4985              		.loc 1 2718 17 is_stmt 1 discriminator 2
 4986 001e 7B68     		ldr	r3, [r7, #4]
 4987 0020 2422     		movs	r2, #36
 4988 0022 5A67     		str	r2, [r3, #116]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4989              		.loc 1 2721 3 discriminator 2
 4990 0024 7B68     		ldr	r3, [r7, #4]
 4991 0026 1B68     		ldr	r3, [r3]
 4992 0028 1A68     		ldr	r2, [r3]
 4993 002a 7B68     		ldr	r3, [r7, #4]
 4994 002c 1B68     		ldr	r3, [r3]
 4995 002e 0C21     		movs	r1, #12
 4996 0030 8A43     		bics	r2, r1
 4997 0032 1A60     		str	r2, [r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4998              		.loc 1 2724 3 discriminator 2
 4999 0034 7B68     		ldr	r3, [r7, #4]
 5000 0036 1B68     		ldr	r3, [r3]
 5001 0038 1A68     		ldr	r2, [r3]
 5002 003a 7B68     		ldr	r3, [r7, #4]
 5003 003c 1B68     		ldr	r3, [r3]
 5004 003e 0821     		movs	r1, #8
 5005 0040 0A43     		orrs	r2, r1
 5006 0042 1A60     		str	r2, [r3]
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5007              		.loc 1 2726 17 discriminator 2
 5008 0044 7B68     		ldr	r3, [r7, #4]
 5009 0046 2022     		movs	r2, #32
 5010 0048 5A67     		str	r2, [r3, #116]
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5011              		.loc 1 2728 3 discriminator 2
 5012 004a 7B68     		ldr	r3, [r7, #4]
 5013 004c 7022     		movs	r2, #112
 5014 004e 0021     		movs	r1, #0
 5015 0050 9954     		strb	r1, [r3, r2]
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5016              		.loc 1 2730 10 discriminator 2
 5017 0052 0023     		movs	r3, #0
 5018              	.L245:
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5019              		.loc 1 2731 1
 5020 0054 1800     		movs	r0, r3
 5021 0056 BD46     		mov	sp, r7
 5022 0058 02B0     		add	sp, sp, #8
 5023              		@ sp needed
 5024 005a 80BD     		pop	{r7, pc}
 5025              		.cfi_endproc
 5026              	.LFE77:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 136


 5028              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5029              		.align	1
 5030              		.global	HAL_HalfDuplex_EnableReceiver
 5031              		.syntax unified
 5032              		.code	16
 5033              		.thumb_func
 5034              		.fpu softvfp
 5036              	HAL_HalfDuplex_EnableReceiver:
 5037              	.LFB78:
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5038              		.loc 1 2739 1
 5039              		.cfi_startproc
 5040              		@ args = 0, pretend = 0, frame = 8
 5041              		@ frame_needed = 1, uses_anonymous_args = 0
 5042 0000 80B5     		push	{r7, lr}
 5043              	.LCFI114:
 5044              		.cfi_def_cfa_offset 8
 5045              		.cfi_offset 7, -8
 5046              		.cfi_offset 14, -4
 5047 0002 82B0     		sub	sp, sp, #8
 5048              	.LCFI115:
 5049              		.cfi_def_cfa_offset 16
 5050 0004 00AF     		add	r7, sp, #0
 5051              	.LCFI116:
 5052              		.cfi_def_cfa_register 7
 5053 0006 7860     		str	r0, [r7, #4]
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5054              		.loc 1 2740 3
 5055 0008 7B68     		ldr	r3, [r7, #4]
 5056 000a 7022     		movs	r2, #112
 5057 000c 9B5C     		ldrb	r3, [r3, r2]
 5058 000e 012B     		cmp	r3, #1
 5059 0010 01D1     		bne	.L247
 5060              		.loc 1 2740 3 is_stmt 0 discriminator 1
 5061 0012 0223     		movs	r3, #2
 5062 0014 1EE0     		b	.L248
 5063              	.L247:
 5064              		.loc 1 2740 3 discriminator 2
 5065 0016 7B68     		ldr	r3, [r7, #4]
 5066 0018 7022     		movs	r2, #112
 5067 001a 0121     		movs	r1, #1
 5068 001c 9954     		strb	r1, [r3, r2]
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5069              		.loc 1 2741 17 is_stmt 1 discriminator 2
 5070 001e 7B68     		ldr	r3, [r7, #4]
 5071 0020 2422     		movs	r2, #36
 5072 0022 5A67     		str	r2, [r3, #116]
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 137


 5073              		.loc 1 2744 3 discriminator 2
 5074 0024 7B68     		ldr	r3, [r7, #4]
 5075 0026 1B68     		ldr	r3, [r3]
 5076 0028 1A68     		ldr	r2, [r3]
 5077 002a 7B68     		ldr	r3, [r7, #4]
 5078 002c 1B68     		ldr	r3, [r3]
 5079 002e 0C21     		movs	r1, #12
 5080 0030 8A43     		bics	r2, r1
 5081 0032 1A60     		str	r2, [r3]
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 5082              		.loc 1 2747 3 discriminator 2
 5083 0034 7B68     		ldr	r3, [r7, #4]
 5084 0036 1B68     		ldr	r3, [r3]
 5085 0038 1A68     		ldr	r2, [r3]
 5086 003a 7B68     		ldr	r3, [r7, #4]
 5087 003c 1B68     		ldr	r3, [r3]
 5088 003e 0421     		movs	r1, #4
 5089 0040 0A43     		orrs	r2, r1
 5090 0042 1A60     		str	r2, [r3]
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5091              		.loc 1 2749 17 discriminator 2
 5092 0044 7B68     		ldr	r3, [r7, #4]
 5093 0046 2022     		movs	r2, #32
 5094 0048 5A67     		str	r2, [r3, #116]
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5095              		.loc 1 2751 3 discriminator 2
 5096 004a 7B68     		ldr	r3, [r7, #4]
 5097 004c 7022     		movs	r2, #112
 5098 004e 0021     		movs	r1, #0
 5099 0050 9954     		strb	r1, [r3, r2]
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5100              		.loc 1 2753 10 discriminator 2
 5101 0052 0023     		movs	r3, #0
 5102              	.L248:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5103              		.loc 1 2754 1
 5104 0054 1800     		movs	r0, r3
 5105 0056 BD46     		mov	sp, r7
 5106 0058 02B0     		add	sp, sp, #8
 5107              		@ sp needed
 5108 005a 80BD     		pop	{r7, pc}
 5109              		.cfi_endproc
 5110              	.LFE78:
 5112              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5113              		.align	1
 5114              		.global	HAL_LIN_SendBreak
 5115              		.syntax unified
 5116              		.code	16
 5117              		.thumb_func
 5118              		.fpu softvfp
 5120              	HAL_LIN_SendBreak:
 5121              	.LFB79:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 138


2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Transmit break characters.
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5122              		.loc 1 2764 1
 5123              		.cfi_startproc
 5124              		@ args = 0, pretend = 0, frame = 8
 5125              		@ frame_needed = 1, uses_anonymous_args = 0
 5126 0000 80B5     		push	{r7, lr}
 5127              	.LCFI117:
 5128              		.cfi_def_cfa_offset 8
 5129              		.cfi_offset 7, -8
 5130              		.cfi_offset 14, -4
 5131 0002 82B0     		sub	sp, sp, #8
 5132              	.LCFI118:
 5133              		.cfi_def_cfa_offset 16
 5134 0004 00AF     		add	r7, sp, #0
 5135              	.LCFI119:
 5136              		.cfi_def_cfa_register 7
 5137 0006 7860     		str	r0, [r7, #4]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5138              		.loc 1 2768 3
 5139 0008 7B68     		ldr	r3, [r7, #4]
 5140 000a 7022     		movs	r2, #112
 5141 000c 9B5C     		ldrb	r3, [r3, r2]
 5142 000e 012B     		cmp	r3, #1
 5143 0010 01D1     		bne	.L250
 5144              		.loc 1 2768 3 is_stmt 0 discriminator 1
 5145 0012 0223     		movs	r3, #2
 5146 0014 16E0     		b	.L251
 5147              	.L250:
 5148              		.loc 1 2768 3 discriminator 2
 5149 0016 7B68     		ldr	r3, [r7, #4]
 5150 0018 7022     		movs	r2, #112
 5151 001a 0121     		movs	r1, #1
 5152 001c 9954     		strb	r1, [r3, r2]
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5153              		.loc 1 2770 17 is_stmt 1 discriminator 2
 5154 001e 7B68     		ldr	r3, [r7, #4]
 5155 0020 2422     		movs	r2, #36
 5156 0022 5A67     		str	r2, [r3, #116]
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Send break characters */
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 5157              		.loc 1 2773 3 discriminator 2
 5158 0024 7B68     		ldr	r3, [r7, #4]
 5159 0026 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 139


 5160 0028 9A69     		ldr	r2, [r3, #24]
 5161 002a 7B68     		ldr	r3, [r7, #4]
 5162 002c 1B68     		ldr	r3, [r3]
 5163 002e 0221     		movs	r1, #2
 5164 0030 0A43     		orrs	r2, r1
 5165 0032 9A61     		str	r2, [r3, #24]
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5166              		.loc 1 2775 17 discriminator 2
 5167 0034 7B68     		ldr	r3, [r7, #4]
 5168 0036 2022     		movs	r2, #32
 5169 0038 5A67     		str	r2, [r3, #116]
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5170              		.loc 1 2777 3 discriminator 2
 5171 003a 7B68     		ldr	r3, [r7, #4]
 5172 003c 7022     		movs	r2, #112
 5173 003e 0021     		movs	r1, #0
 5174 0040 9954     		strb	r1, [r3, r2]
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5175              		.loc 1 2779 10 discriminator 2
 5176 0042 0023     		movs	r3, #0
 5177              	.L251:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5178              		.loc 1 2780 1
 5179 0044 1800     		movs	r0, r3
 5180 0046 BD46     		mov	sp, r7
 5181 0048 02B0     		add	sp, sp, #8
 5182              		@ sp needed
 5183 004a 80BD     		pop	{r7, pc}
 5184              		.cfi_endproc
 5185              	.LFE79:
 5187              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5188              		.align	1
 5189              		.global	HAL_UART_GetState
 5190              		.syntax unified
 5191              		.code	16
 5192              		.thumb_func
 5193              		.fpu softvfp
 5195              	HAL_UART_GetState:
 5196              	.LFB80:
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 140


2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Return the UART handle state.
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5197              		.loc 1 2810 1
 5198              		.cfi_startproc
 5199              		@ args = 0, pretend = 0, frame = 16
 5200              		@ frame_needed = 1, uses_anonymous_args = 0
 5201 0000 80B5     		push	{r7, lr}
 5202              	.LCFI120:
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 7, -8
 5205              		.cfi_offset 14, -4
 5206 0002 84B0     		sub	sp, sp, #16
 5207              	.LCFI121:
 5208              		.cfi_def_cfa_offset 24
 5209 0004 00AF     		add	r7, sp, #0
 5210              	.LCFI122:
 5211              		.cfi_def_cfa_register 7
 5212 0006 7860     		str	r0, [r7, #4]
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp2;
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
 5213              		.loc 1 2813 9
 5214 0008 7B68     		ldr	r3, [r7, #4]
 5215 000a 5B6F     		ldr	r3, [r3, #116]
 5216 000c FB60     		str	r3, [r7, #12]
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 5217              		.loc 1 2814 9
 5218 000e 7B68     		ldr	r3, [r7, #4]
 5219 0010 9B6F     		ldr	r3, [r3, #120]
 5220 0012 BB60     		str	r3, [r7, #8]
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 5221              		.loc 1 2816 10
 5222 0014 FA68     		ldr	r2, [r7, #12]
 5223 0016 BB68     		ldr	r3, [r7, #8]
 5224 0018 1343     		orrs	r3, r2
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5225              		.loc 1 2817 1
 5226 001a 1800     		movs	r0, r3
 5227 001c BD46     		mov	sp, r7
 5228 001e 04B0     		add	sp, sp, #16
 5229              		@ sp needed
 5230 0020 80BD     		pop	{r7, pc}
 5231              		.cfi_endproc
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 141


 5232              	.LFE80:
 5234              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5235              		.align	1
 5236              		.global	HAL_UART_GetError
 5237              		.syntax unified
 5238              		.code	16
 5239              		.thumb_func
 5240              		.fpu softvfp
 5242              	HAL_UART_GetError:
 5243              	.LFB81:
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5244              		.loc 1 2826 1
 5245              		.cfi_startproc
 5246              		@ args = 0, pretend = 0, frame = 8
 5247              		@ frame_needed = 1, uses_anonymous_args = 0
 5248 0000 80B5     		push	{r7, lr}
 5249              	.LCFI123:
 5250              		.cfi_def_cfa_offset 8
 5251              		.cfi_offset 7, -8
 5252              		.cfi_offset 14, -4
 5253 0002 82B0     		sub	sp, sp, #8
 5254              	.LCFI124:
 5255              		.cfi_def_cfa_offset 16
 5256 0004 00AF     		add	r7, sp, #0
 5257              	.LCFI125:
 5258              		.cfi_def_cfa_register 7
 5259 0006 7860     		str	r0, [r7, #4]
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 5260              		.loc 1 2827 15
 5261 0008 7B68     		ldr	r3, [r7, #4]
 5262 000a DB6F     		ldr	r3, [r3, #124]
2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5263              		.loc 1 2828 1
 5264 000c 1800     		movs	r0, r3
 5265 000e BD46     		mov	sp, r7
 5266 0010 02B0     		add	sp, sp, #8
 5267              		@ sp needed
 5268 0012 80BD     		pop	{r7, pc}
 5269              		.cfi_endproc
 5270              	.LFE81:
 5272              		.global	__aeabi_uidiv
 5273              		.section	.text.UART_SetConfig,"ax",%progbits
 5274              		.align	1
 5275              		.global	UART_SetConfig
 5276              		.syntax unified
 5277              		.code	16
 5278              		.thumb_func
 5279              		.fpu softvfp
 5281              	UART_SetConfig:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 142


 5282              	.LFB82:
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval none
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init the UART Callback settings */
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5283              		.loc 1 2871 1
 5284              		.cfi_startproc
 5285              		@ args = 0, pretend = 0, frame = 32
 5286              		@ frame_needed = 1, uses_anonymous_args = 0
 5287 0000 80B5     		push	{r7, lr}
 5288              	.LCFI126:
 5289              		.cfi_def_cfa_offset 8
 5290              		.cfi_offset 7, -8
 5291              		.cfi_offset 14, -4
 5292 0002 88B0     		sub	sp, sp, #32
 5293              	.LCFI127:
 5294              		.cfi_def_cfa_offset 40
 5295 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 143


 5296              	.LCFI128:
 5297              		.cfi_def_cfa_register 7
 5298 0006 7860     		str	r0, [r7, #4]
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp;
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 5299              		.loc 1 2875 12
 5300 0008 0023     		movs	r3, #0
 5301 000a BB61     		str	r3, [r7, #24]
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5302              		.loc 1 2876 21
 5303 000c 1723     		movs	r3, #23
 5304 000e FB18     		adds	r3, r7, r3
 5305 0010 0022     		movs	r2, #0
 5306 0012 1A70     		strb	r2, [r3]
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5307              		.loc 1 2897 33
 5308 0014 7B68     		ldr	r3, [r7, #4]
 5309 0016 9A68     		ldr	r2, [r3, #8]
 5310              		.loc 1 2897 58
 5311 0018 7B68     		ldr	r3, [r7, #4]
 5312 001a 1B69     		ldr	r3, [r3, #16]
 5313              		.loc 1 2897 45
 5314 001c 1A43     		orrs	r2, r3
 5315              		.loc 1 2897 79
 5316 001e 7B68     		ldr	r3, [r7, #4]
 5317 0020 5B69     		ldr	r3, [r3, #20]
 5318              		.loc 1 2897 66
 5319 0022 1A43     		orrs	r2, r3
 5320              		.loc 1 2897 98
 5321 0024 7B68     		ldr	r3, [r7, #4]
 5322 0026 DB69     		ldr	r3, [r3, #28]
 5323              		.loc 1 2897 10
 5324 0028 1343     		orrs	r3, r2
 5325 002a 3B61     		str	r3, [r7, #16]
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 144


 5326              		.loc 1 2898 3
 5327 002c 7B68     		ldr	r3, [r7, #4]
 5328 002e 1B68     		ldr	r3, [r3]
 5329 0030 1B68     		ldr	r3, [r3]
 5330 0032 C24A     		ldr	r2, .L302
 5331 0034 1340     		ands	r3, r2
 5332 0036 1900     		movs	r1, r3
 5333 0038 7B68     		ldr	r3, [r7, #4]
 5334 003a 1B68     		ldr	r3, [r3]
 5335 003c 3A69     		ldr	r2, [r7, #16]
 5336 003e 0A43     		orrs	r2, r1
 5337 0040 1A60     		str	r2, [r3]
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to huart->Init.StopBits value */
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5338              		.loc 1 2903 3
 5339 0042 7B68     		ldr	r3, [r7, #4]
 5340 0044 1B68     		ldr	r3, [r3]
 5341 0046 5B68     		ldr	r3, [r3, #4]
 5342 0048 BD4A     		ldr	r2, .L302+4
 5343 004a 1340     		ands	r3, r2
 5344 004c 1900     		movs	r1, r3
 5345 004e 7B68     		ldr	r3, [r7, #4]
 5346 0050 DA68     		ldr	r2, [r3, #12]
 5347 0052 7B68     		ldr	r3, [r7, #4]
 5348 0054 1B68     		ldr	r3, [r3]
 5349 0056 0A43     		orrs	r2, r1
 5350 0058 5A60     		str	r2, [r3, #4]
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 5351              		.loc 1 2911 10
 5352 005a 7B68     		ldr	r3, [r7, #4]
 5353 005c 9B69     		ldr	r3, [r3, #24]
 5354 005e 3B61     		str	r3, [r7, #16]
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
 5355              		.loc 1 2913 24
 5356 0060 7B68     		ldr	r3, [r7, #4]
 5357 0062 1B6A     		ldr	r3, [r3, #32]
 5358              		.loc 1 2913 10
 5359 0064 3A69     		ldr	r2, [r7, #16]
 5360 0066 1343     		orrs	r3, r2
 5361 0068 3B61     		str	r3, [r7, #16]
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 5362              		.loc 1 2914 3
 5363 006a 7B68     		ldr	r3, [r7, #4]
 5364 006c 1B68     		ldr	r3, [r3]
 5365 006e 9B68     		ldr	r3, [r3, #8]
 5366 0070 B44A     		ldr	r2, .L302+8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 145


 5367 0072 1340     		ands	r3, r2
 5368 0074 1900     		movs	r1, r3
 5369 0076 7B68     		ldr	r3, [r7, #4]
 5370 0078 1B68     		ldr	r3, [r3]
 5371 007a 3A69     		ldr	r2, [r7, #16]
 5372 007c 0A43     		orrs	r2, r1
 5373 007e 9A60     		str	r2, [r3, #8]
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 5374              		.loc 1 2918 3
 5375 0080 7B68     		ldr	r3, [r7, #4]
 5376 0082 1B68     		ldr	r3, [r3]
 5377 0084 B04A     		ldr	r2, .L302+12
 5378 0086 9342     		cmp	r3, r2
 5379 0088 27D1     		bne	.L257
 5380              		.loc 1 2918 3 is_stmt 0 discriminator 1
 5381 008a B04B     		ldr	r3, .L302+16
 5382 008c 1B6B     		ldr	r3, [r3, #48]
 5383 008e 0322     		movs	r2, #3
 5384 0090 1340     		ands	r3, r2
 5385 0092 032B     		cmp	r3, #3
 5386 0094 0DD0     		beq	.L258
 5387              		.loc 1 2918 3
 5388 0096 1BD8     		bhi	.L259
 5389 0098 022B     		cmp	r3, #2
 5390 009a 14D0     		beq	.L260
 5391 009c 18D8     		bhi	.L259
 5392 009e 002B     		cmp	r3, #0
 5393 00a0 02D0     		beq	.L261
 5394 00a2 012B     		cmp	r3, #1
 5395 00a4 0AD0     		beq	.L262
 5396 00a6 13E0     		b	.L259
 5397              	.L261:
 5398              		.loc 1 2918 3 discriminator 4
 5399 00a8 1F23     		movs	r3, #31
 5400 00aa FB18     		adds	r3, r7, r3
 5401 00ac 0022     		movs	r2, #0
 5402 00ae 1A70     		strb	r2, [r3]
 5403 00b0 BDE0     		b	.L264
 5404              	.L258:
 5405              		.loc 1 2918 3 discriminator 7
 5406 00b2 1F23     		movs	r3, #31
 5407 00b4 FB18     		adds	r3, r7, r3
 5408 00b6 0222     		movs	r2, #2
 5409 00b8 1A70     		strb	r2, [r3]
 5410 00ba B8E0     		b	.L264
 5411              	.L262:
 5412              		.loc 1 2918 3 discriminator 5
 5413 00bc 1F23     		movs	r3, #31
 5414 00be FB18     		adds	r3, r7, r3
 5415 00c0 0422     		movs	r2, #4
 5416 00c2 1A70     		strb	r2, [r3]
 5417 00c4 B3E0     		b	.L264
 5418              	.L260:
 5419              		.loc 1 2918 3 discriminator 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 146


 5420 00c6 1F23     		movs	r3, #31
 5421 00c8 FB18     		adds	r3, r7, r3
 5422 00ca 0822     		movs	r2, #8
 5423 00cc 1A70     		strb	r2, [r3]
 5424 00ce AEE0     		b	.L264
 5425              	.L259:
 5426              		.loc 1 2918 3 discriminator 3
 5427 00d0 1F23     		movs	r3, #31
 5428 00d2 FB18     		adds	r3, r7, r3
 5429 00d4 1022     		movs	r2, #16
 5430 00d6 1A70     		strb	r2, [r3]
 5431 00d8 A9E0     		b	.L264
 5432              	.L257:
 5433              		.loc 1 2918 3 discriminator 2
 5434 00da 7B68     		ldr	r3, [r7, #4]
 5435 00dc 1B68     		ldr	r3, [r3]
 5436 00de 9C4A     		ldr	r2, .L302+20
 5437 00e0 9342     		cmp	r3, r2
 5438 00e2 34D1     		bne	.L265
 5439              		.loc 1 2918 3 discriminator 13
 5440 00e4 994B     		ldr	r3, .L302+16
 5441 00e6 1A6B     		ldr	r2, [r3, #48]
 5442 00e8 C023     		movs	r3, #192
 5443 00ea 9B02     		lsls	r3, r3, #10
 5444 00ec 1340     		ands	r3, r2
 5445 00ee C022     		movs	r2, #192
 5446 00f0 9202     		lsls	r2, r2, #10
 5447 00f2 9342     		cmp	r3, r2
 5448 00f4 17D0     		beq	.L266
 5449              		.loc 1 2918 3
 5450 00f6 C022     		movs	r2, #192
 5451 00f8 9202     		lsls	r2, r2, #10
 5452 00fa 9342     		cmp	r3, r2
 5453 00fc 22D8     		bhi	.L267
 5454 00fe 8022     		movs	r2, #128
 5455 0100 9202     		lsls	r2, r2, #10
 5456 0102 9342     		cmp	r3, r2
 5457 0104 19D0     		beq	.L268
 5458 0106 8022     		movs	r2, #128
 5459 0108 9202     		lsls	r2, r2, #10
 5460 010a 9342     		cmp	r3, r2
 5461 010c 1AD8     		bhi	.L267
 5462 010e 002B     		cmp	r3, #0
 5463 0110 04D0     		beq	.L269
 5464 0112 8022     		movs	r2, #128
 5465 0114 5202     		lsls	r2, r2, #9
 5466 0116 9342     		cmp	r3, r2
 5467 0118 0AD0     		beq	.L270
 5468 011a 13E0     		b	.L267
 5469              	.L269:
 5470              		.loc 1 2918 3 discriminator 16
 5471 011c 1F23     		movs	r3, #31
 5472 011e FB18     		adds	r3, r7, r3
 5473 0120 0022     		movs	r2, #0
 5474 0122 1A70     		strb	r2, [r3]
 5475 0124 83E0     		b	.L264
 5476              	.L266:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 147


 5477              		.loc 1 2918 3 discriminator 19
 5478 0126 1F23     		movs	r3, #31
 5479 0128 FB18     		adds	r3, r7, r3
 5480 012a 0222     		movs	r2, #2
 5481 012c 1A70     		strb	r2, [r3]
 5482 012e 7EE0     		b	.L264
 5483              	.L270:
 5484              		.loc 1 2918 3 discriminator 17
 5485 0130 1F23     		movs	r3, #31
 5486 0132 FB18     		adds	r3, r7, r3
 5487 0134 0422     		movs	r2, #4
 5488 0136 1A70     		strb	r2, [r3]
 5489 0138 79E0     		b	.L264
 5490              	.L268:
 5491              		.loc 1 2918 3 discriminator 18
 5492 013a 1F23     		movs	r3, #31
 5493 013c FB18     		adds	r3, r7, r3
 5494 013e 0822     		movs	r2, #8
 5495 0140 1A70     		strb	r2, [r3]
 5496 0142 74E0     		b	.L264
 5497              	.L267:
 5498              		.loc 1 2918 3 discriminator 15
 5499 0144 1F23     		movs	r3, #31
 5500 0146 FB18     		adds	r3, r7, r3
 5501 0148 1022     		movs	r2, #16
 5502 014a 1A70     		strb	r2, [r3]
 5503 014c 6FE0     		b	.L264
 5504              	.L265:
 5505              		.loc 1 2918 3 discriminator 14
 5506 014e 7B68     		ldr	r3, [r7, #4]
 5507 0150 1B68     		ldr	r3, [r3]
 5508 0152 804A     		ldr	r2, .L302+24
 5509 0154 9342     		cmp	r3, r2
 5510 0156 34D1     		bne	.L272
 5511              		.loc 1 2918 3 discriminator 25
 5512 0158 7C4B     		ldr	r3, .L302+16
 5513 015a 1A6B     		ldr	r2, [r3, #48]
 5514 015c C023     		movs	r3, #192
 5515 015e 1B03     		lsls	r3, r3, #12
 5516 0160 1340     		ands	r3, r2
 5517 0162 C022     		movs	r2, #192
 5518 0164 1203     		lsls	r2, r2, #12
 5519 0166 9342     		cmp	r3, r2
 5520 0168 17D0     		beq	.L273
 5521              		.loc 1 2918 3
 5522 016a C022     		movs	r2, #192
 5523 016c 1203     		lsls	r2, r2, #12
 5524 016e 9342     		cmp	r3, r2
 5525 0170 22D8     		bhi	.L274
 5526 0172 8022     		movs	r2, #128
 5527 0174 1203     		lsls	r2, r2, #12
 5528 0176 9342     		cmp	r3, r2
 5529 0178 19D0     		beq	.L275
 5530 017a 8022     		movs	r2, #128
 5531 017c 1203     		lsls	r2, r2, #12
 5532 017e 9342     		cmp	r3, r2
 5533 0180 1AD8     		bhi	.L274
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 148


 5534 0182 002B     		cmp	r3, #0
 5535 0184 04D0     		beq	.L276
 5536 0186 8022     		movs	r2, #128
 5537 0188 D202     		lsls	r2, r2, #11
 5538 018a 9342     		cmp	r3, r2
 5539 018c 0AD0     		beq	.L277
 5540 018e 13E0     		b	.L274
 5541              	.L276:
 5542              		.loc 1 2918 3 discriminator 28
 5543 0190 1F23     		movs	r3, #31
 5544 0192 FB18     		adds	r3, r7, r3
 5545 0194 0022     		movs	r2, #0
 5546 0196 1A70     		strb	r2, [r3]
 5547 0198 49E0     		b	.L264
 5548              	.L273:
 5549              		.loc 1 2918 3 discriminator 31
 5550 019a 1F23     		movs	r3, #31
 5551 019c FB18     		adds	r3, r7, r3
 5552 019e 0222     		movs	r2, #2
 5553 01a0 1A70     		strb	r2, [r3]
 5554 01a2 44E0     		b	.L264
 5555              	.L277:
 5556              		.loc 1 2918 3 discriminator 29
 5557 01a4 1F23     		movs	r3, #31
 5558 01a6 FB18     		adds	r3, r7, r3
 5559 01a8 0422     		movs	r2, #4
 5560 01aa 1A70     		strb	r2, [r3]
 5561 01ac 3FE0     		b	.L264
 5562              	.L275:
 5563              		.loc 1 2918 3 discriminator 30
 5564 01ae 1F23     		movs	r3, #31
 5565 01b0 FB18     		adds	r3, r7, r3
 5566 01b2 0822     		movs	r2, #8
 5567 01b4 1A70     		strb	r2, [r3]
 5568 01b6 3AE0     		b	.L264
 5569              	.L274:
 5570              		.loc 1 2918 3 discriminator 27
 5571 01b8 1F23     		movs	r3, #31
 5572 01ba FB18     		adds	r3, r7, r3
 5573 01bc 1022     		movs	r2, #16
 5574 01be 1A70     		strb	r2, [r3]
 5575 01c0 35E0     		b	.L264
 5576              	.L272:
 5577              		.loc 1 2918 3 discriminator 26
 5578 01c2 7B68     		ldr	r3, [r7, #4]
 5579 01c4 1B68     		ldr	r3, [r3]
 5580 01c6 644A     		ldr	r2, .L302+28
 5581 01c8 9342     		cmp	r3, r2
 5582 01ca 04D1     		bne	.L279
 5583              		.loc 1 2918 3 discriminator 37
 5584 01cc 1F23     		movs	r3, #31
 5585 01ce FB18     		adds	r3, r7, r3
 5586 01d0 0022     		movs	r2, #0
 5587 01d2 1A70     		strb	r2, [r3]
 5588 01d4 2BE0     		b	.L264
 5589              	.L279:
 5590              		.loc 1 2918 3 discriminator 38
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 149


 5591 01d6 7B68     		ldr	r3, [r7, #4]
 5592 01d8 1B68     		ldr	r3, [r3]
 5593 01da 604A     		ldr	r2, .L302+32
 5594 01dc 9342     		cmp	r3, r2
 5595 01de 04D1     		bne	.L280
 5596              		.loc 1 2918 3 discriminator 39
 5597 01e0 1F23     		movs	r3, #31
 5598 01e2 FB18     		adds	r3, r7, r3
 5599 01e4 0022     		movs	r2, #0
 5600 01e6 1A70     		strb	r2, [r3]
 5601 01e8 21E0     		b	.L264
 5602              	.L280:
 5603              		.loc 1 2918 3 discriminator 40
 5604 01ea 7B68     		ldr	r3, [r7, #4]
 5605 01ec 1B68     		ldr	r3, [r3]
 5606 01ee 5C4A     		ldr	r2, .L302+36
 5607 01f0 9342     		cmp	r3, r2
 5608 01f2 04D1     		bne	.L281
 5609              		.loc 1 2918 3 discriminator 41
 5610 01f4 1F23     		movs	r3, #31
 5611 01f6 FB18     		adds	r3, r7, r3
 5612 01f8 0022     		movs	r2, #0
 5613 01fa 1A70     		strb	r2, [r3]
 5614 01fc 17E0     		b	.L264
 5615              	.L281:
 5616              		.loc 1 2918 3 discriminator 42
 5617 01fe 7B68     		ldr	r3, [r7, #4]
 5618 0200 1B68     		ldr	r3, [r3]
 5619 0202 584A     		ldr	r2, .L302+40
 5620 0204 9342     		cmp	r3, r2
 5621 0206 04D1     		bne	.L282
 5622              		.loc 1 2918 3 discriminator 43
 5623 0208 1F23     		movs	r3, #31
 5624 020a FB18     		adds	r3, r7, r3
 5625 020c 0022     		movs	r2, #0
 5626 020e 1A70     		strb	r2, [r3]
 5627 0210 0DE0     		b	.L264
 5628              	.L282:
 5629              		.loc 1 2918 3 discriminator 44
 5630 0212 7B68     		ldr	r3, [r7, #4]
 5631 0214 1B68     		ldr	r3, [r3]
 5632 0216 544A     		ldr	r2, .L302+44
 5633 0218 9342     		cmp	r3, r2
 5634 021a 04D1     		bne	.L283
 5635              		.loc 1 2918 3 discriminator 45
 5636 021c 1F23     		movs	r3, #31
 5637 021e FB18     		adds	r3, r7, r3
 5638 0220 0022     		movs	r2, #0
 5639 0222 1A70     		strb	r2, [r3]
 5640 0224 03E0     		b	.L264
 5641              	.L283:
 5642              		.loc 1 2918 3 discriminator 46
 5643 0226 1F23     		movs	r3, #31
 5644 0228 FB18     		adds	r3, r7, r3
 5645 022a 1022     		movs	r2, #16
 5646 022c 1A70     		strb	r2, [r3]
 5647              	.L264:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 150


2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5648              		.loc 1 2920 18 is_stmt 1
 5649 022e 7B68     		ldr	r3, [r7, #4]
 5650 0230 DA69     		ldr	r2, [r3, #28]
 5651              		.loc 1 2920 6
 5652 0232 8023     		movs	r3, #128
 5653 0234 1B02     		lsls	r3, r3, #8
 5654 0236 9A42     		cmp	r2, r3
 5655 0238 00D0     		beq	.LCB4795
 5656 023a 99E0     		b	.L284	@long jump
 5657              	.LCB4795:
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 5658              		.loc 1 2922 5
 5659 023c 1F23     		movs	r3, #31
 5660 023e FB18     		adds	r3, r7, r3
 5661 0240 1B78     		ldrb	r3, [r3]
 5662 0242 082B     		cmp	r3, #8
 5663 0244 3FD0     		beq	.L285
 5664 0246 4EDC     		bgt	.L286
 5665 0248 042B     		cmp	r3, #4
 5666 024a 28D0     		beq	.L287
 5667 024c 4BDC     		bgt	.L286
 5668 024e 002B     		cmp	r3, #0
 5669 0250 02D0     		beq	.L288
 5670 0252 022B     		cmp	r3, #2
 5671 0254 14D0     		beq	.L289
 5672 0256 46E0     		b	.L286
 5673              	.L288:
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 5674              		.loc 1 2925 16
 5675 0258 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5676 025c 0300     		movs	r3, r0
 5677 025e FB60     		str	r3, [r7, #12]
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 5678              		.loc 1 2926 31
 5679 0260 FB68     		ldr	r3, [r7, #12]
 5680 0262 5A00     		lsls	r2, r3, #1
 5681 0264 7B68     		ldr	r3, [r7, #4]
 5682 0266 5B68     		ldr	r3, [r3, #4]
 5683 0268 5B08     		lsrs	r3, r3, #1
 5684 026a D218     		adds	r2, r2, r3
 5685 026c 7B68     		ldr	r3, [r7, #4]
 5686 026e 5B68     		ldr	r3, [r3, #4]
 5687 0270 1900     		movs	r1, r3
 5688 0272 1000     		movs	r0, r2
 5689 0274 FFF7FEFF 		bl	__aeabi_uidiv
 5690              	.LVL6:
 5691 0278 0300     		movs	r3, r0
 5692              		.loc 1 2926 20
 5693 027a 9BB2     		uxth	r3, r3
 5694              		.loc 1 2926 18
 5695 027c BB61     		str	r3, [r7, #24]
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 151


 5696              		.loc 1 2927 9
 5697 027e 37E0     		b	.L290
 5698              	.L289:
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 5699              		.loc 1 2929 31
 5700 0280 7B68     		ldr	r3, [r7, #4]
 5701 0282 5B68     		ldr	r3, [r3, #4]
 5702 0284 5B08     		lsrs	r3, r3, #1
 5703 0286 394A     		ldr	r2, .L302+48
 5704 0288 9A18     		adds	r2, r3, r2
 5705 028a 7B68     		ldr	r3, [r7, #4]
 5706 028c 5B68     		ldr	r3, [r3, #4]
 5707 028e 1900     		movs	r1, r3
 5708 0290 1000     		movs	r0, r2
 5709 0292 FFF7FEFF 		bl	__aeabi_uidiv
 5710              	.LVL7:
 5711 0296 0300     		movs	r3, r0
 5712              		.loc 1 2929 20
 5713 0298 9BB2     		uxth	r3, r3
 5714              		.loc 1 2929 18
 5715 029a BB61     		str	r3, [r7, #24]
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5716              		.loc 1 2930 9
 5717 029c 28E0     		b	.L290
 5718              	.L287:
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5719              		.loc 1 2932 16
 5720 029e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5721 02a2 0300     		movs	r3, r0
 5722 02a4 FB60     		str	r3, [r7, #12]
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 5723              		.loc 1 2933 31
 5724 02a6 FB68     		ldr	r3, [r7, #12]
 5725 02a8 5A00     		lsls	r2, r3, #1
 5726 02aa 7B68     		ldr	r3, [r7, #4]
 5727 02ac 5B68     		ldr	r3, [r3, #4]
 5728 02ae 5B08     		lsrs	r3, r3, #1
 5729 02b0 D218     		adds	r2, r2, r3
 5730 02b2 7B68     		ldr	r3, [r7, #4]
 5731 02b4 5B68     		ldr	r3, [r3, #4]
 5732 02b6 1900     		movs	r1, r3
 5733 02b8 1000     		movs	r0, r2
 5734 02ba FFF7FEFF 		bl	__aeabi_uidiv
 5735              	.LVL8:
 5736 02be 0300     		movs	r3, r0
 5737              		.loc 1 2933 20
 5738 02c0 9BB2     		uxth	r3, r3
 5739              		.loc 1 2933 18
 5740 02c2 BB61     		str	r3, [r7, #24]
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5741              		.loc 1 2934 9
 5742 02c4 14E0     		b	.L290
 5743              	.L285:
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 152


 5744              		.loc 1 2936 31
 5745 02c6 7B68     		ldr	r3, [r7, #4]
 5746 02c8 5B68     		ldr	r3, [r3, #4]
 5747 02ca 5B08     		lsrs	r3, r3, #1
 5748 02cc 8022     		movs	r2, #128
 5749 02ce 5202     		lsls	r2, r2, #9
 5750 02d0 9A18     		adds	r2, r3, r2
 5751 02d2 7B68     		ldr	r3, [r7, #4]
 5752 02d4 5B68     		ldr	r3, [r3, #4]
 5753 02d6 1900     		movs	r1, r3
 5754 02d8 1000     		movs	r0, r2
 5755 02da FFF7FEFF 		bl	__aeabi_uidiv
 5756              	.LVL9:
 5757 02de 0300     		movs	r3, r0
 5758              		.loc 1 2936 20
 5759 02e0 9BB2     		uxth	r3, r3
 5760              		.loc 1 2936 18
 5761 02e2 BB61     		str	r3, [r7, #24]
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5762              		.loc 1 2937 9
 5763 02e4 04E0     		b	.L290
 5764              	.L286:
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 5765              		.loc 1 2939 13
 5766 02e6 1723     		movs	r3, #23
 5767 02e8 FB18     		adds	r3, r7, r3
 5768 02ea 0122     		movs	r2, #1
 5769 02ec 1A70     		strb	r2, [r3]
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5770              		.loc 1 2940 9
 5771 02ee C046     		nop
 5772              	.L290:
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5773              		.loc 1 2944 8
 5774 02f0 BB69     		ldr	r3, [r7, #24]
 5775 02f2 0F2B     		cmp	r3, #15
 5776 02f4 1CD9     		bls	.L291
 5777              		.loc 1 2944 36 discriminator 1
 5778 02f6 BA69     		ldr	r2, [r7, #24]
 5779 02f8 8023     		movs	r3, #128
 5780 02fa 5B02     		lsls	r3, r3, #9
 5781 02fc 9A42     		cmp	r2, r3
 5782 02fe 17D2     		bcs	.L291
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 5783              		.loc 1 2946 17
 5784 0300 BB69     		ldr	r3, [r7, #24]
 5785 0302 9AB2     		uxth	r2, r3
 5786              		.loc 1 2946 15
 5787 0304 0A20     		movs	r0, #10
 5788 0306 3B18     		adds	r3, r7, r0
 5789 0308 0F21     		movs	r1, #15
 5790 030a 8A43     		bics	r2, r1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 153


 5791 030c 1A80     		strh	r2, [r3]
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5792              		.loc 1 2947 60
 5793 030e BB69     		ldr	r3, [r7, #24]
 5794 0310 5B08     		lsrs	r3, r3, #1
 5795              		.loc 1 2947 18
 5796 0312 9BB2     		uxth	r3, r3
 5797 0314 0722     		movs	r2, #7
 5798 0316 1340     		ands	r3, r2
 5799 0318 99B2     		uxth	r1, r3
 5800              		.loc 1 2947 15
 5801 031a 3B18     		adds	r3, r7, r0
 5802 031c 3A18     		adds	r2, r7, r0
 5803 031e 1288     		ldrh	r2, [r2]
 5804 0320 0A43     		orrs	r2, r1
 5805 0322 1A80     		strh	r2, [r3]
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 5806              		.loc 1 2948 12
 5807 0324 7B68     		ldr	r3, [r7, #4]
 5808 0326 1B68     		ldr	r3, [r3]
 5809              		.loc 1 2948 28
 5810 0328 3A18     		adds	r2, r7, r0
 5811 032a 1288     		ldrh	r2, [r2]
 5812 032c DA60     		str	r2, [r3, #12]
 5813 032e 88E0     		b	.L293
 5814              	.L291:
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ret = HAL_ERROR;
 5815              		.loc 1 2952 11
 5816 0330 1723     		movs	r3, #23
 5817 0332 FB18     		adds	r3, r7, r3
 5818 0334 0122     		movs	r2, #1
 5819 0336 1A70     		strb	r2, [r3]
 5820 0338 83E0     		b	.L293
 5821              	.L303:
 5822 033a C046     		.align	2
 5823              	.L302:
 5824 033c F369FFEF 		.word	-268473869
 5825 0340 FFCFFFFF 		.word	-12289
 5826 0344 FFF4FFFF 		.word	-2817
 5827 0348 00380140 		.word	1073821696
 5828 034c 00100240 		.word	1073876992
 5829 0350 00440040 		.word	1073759232
 5830 0354 00480040 		.word	1073760256
 5831 0358 004C0040 		.word	1073761280
 5832 035c 00500040 		.word	1073762304
 5833 0360 00140140 		.word	1073812480
 5834 0364 00180140 		.word	1073813504
 5835 0368 001C0140 		.word	1073814528
 5836 036c 0024F400 		.word	16000000
 5837              	.L284:
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 154


2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 5838              		.loc 1 2957 5
 5839 0370 1F23     		movs	r3, #31
 5840 0372 FB18     		adds	r3, r7, r3
 5841 0374 1B78     		ldrb	r3, [r3]
 5842 0376 082B     		cmp	r3, #8
 5843 0378 3DD0     		beq	.L294
 5844 037a 4CDC     		bgt	.L295
 5845 037c 042B     		cmp	r3, #4
 5846 037e 27D0     		beq	.L296
 5847 0380 49DC     		bgt	.L295
 5848 0382 002B     		cmp	r3, #0
 5849 0384 02D0     		beq	.L297
 5850 0386 022B     		cmp	r3, #2
 5851 0388 13D0     		beq	.L298
 5852 038a 44E0     		b	.L295
 5853              	.L297:
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 5854              		.loc 1 2960 16
 5855 038c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5856 0390 0300     		movs	r3, r0
 5857 0392 FB60     		str	r3, [r7, #12]
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5858              		.loc 1 2961 31
 5859 0394 7B68     		ldr	r3, [r7, #4]
 5860 0396 5B68     		ldr	r3, [r3, #4]
 5861 0398 5A08     		lsrs	r2, r3, #1
 5862 039a FB68     		ldr	r3, [r7, #12]
 5863 039c D218     		adds	r2, r2, r3
 5864 039e 7B68     		ldr	r3, [r7, #4]
 5865 03a0 5B68     		ldr	r3, [r3, #4]
 5866 03a2 1900     		movs	r1, r3
 5867 03a4 1000     		movs	r0, r2
 5868 03a6 FFF7FEFF 		bl	__aeabi_uidiv
 5869              	.LVL10:
 5870 03aa 0300     		movs	r3, r0
 5871              		.loc 1 2961 20
 5872 03ac 9BB2     		uxth	r3, r3
 5873              		.loc 1 2961 18
 5874 03ae BB61     		str	r3, [r7, #24]
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5875              		.loc 1 2962 9
 5876 03b0 36E0     		b	.L299
 5877              	.L298:
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5878              		.loc 1 2964 31
 5879 03b2 7B68     		ldr	r3, [r7, #4]
 5880 03b4 5B68     		ldr	r3, [r3, #4]
 5881 03b6 5B08     		lsrs	r3, r3, #1
 5882 03b8 284A     		ldr	r2, .L304
 5883 03ba 9A18     		adds	r2, r3, r2
 5884 03bc 7B68     		ldr	r3, [r7, #4]
 5885 03be 5B68     		ldr	r3, [r3, #4]
 5886 03c0 1900     		movs	r1, r3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 155


 5887 03c2 1000     		movs	r0, r2
 5888 03c4 FFF7FEFF 		bl	__aeabi_uidiv
 5889              	.LVL11:
 5890 03c8 0300     		movs	r3, r0
 5891              		.loc 1 2964 20
 5892 03ca 9BB2     		uxth	r3, r3
 5893              		.loc 1 2964 18
 5894 03cc BB61     		str	r3, [r7, #24]
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5895              		.loc 1 2965 9
 5896 03ce 27E0     		b	.L299
 5897              	.L296:
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5898              		.loc 1 2967 16
 5899 03d0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5900 03d4 0300     		movs	r3, r0
 5901 03d6 FB60     		str	r3, [r7, #12]
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5902              		.loc 1 2968 31
 5903 03d8 7B68     		ldr	r3, [r7, #4]
 5904 03da 5B68     		ldr	r3, [r3, #4]
 5905 03dc 5A08     		lsrs	r2, r3, #1
 5906 03de FB68     		ldr	r3, [r7, #12]
 5907 03e0 D218     		adds	r2, r2, r3
 5908 03e2 7B68     		ldr	r3, [r7, #4]
 5909 03e4 5B68     		ldr	r3, [r3, #4]
 5910 03e6 1900     		movs	r1, r3
 5911 03e8 1000     		movs	r0, r2
 5912 03ea FFF7FEFF 		bl	__aeabi_uidiv
 5913              	.LVL12:
 5914 03ee 0300     		movs	r3, r0
 5915              		.loc 1 2968 20
 5916 03f0 9BB2     		uxth	r3, r3
 5917              		.loc 1 2968 18
 5918 03f2 BB61     		str	r3, [r7, #24]
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5919              		.loc 1 2969 9
 5920 03f4 14E0     		b	.L299
 5921              	.L294:
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5922              		.loc 1 2971 31
 5923 03f6 7B68     		ldr	r3, [r7, #4]
 5924 03f8 5B68     		ldr	r3, [r3, #4]
 5925 03fa 5B08     		lsrs	r3, r3, #1
 5926 03fc 8022     		movs	r2, #128
 5927 03fe 1202     		lsls	r2, r2, #8
 5928 0400 9A18     		adds	r2, r3, r2
 5929 0402 7B68     		ldr	r3, [r7, #4]
 5930 0404 5B68     		ldr	r3, [r3, #4]
 5931 0406 1900     		movs	r1, r3
 5932 0408 1000     		movs	r0, r2
 5933 040a FFF7FEFF 		bl	__aeabi_uidiv
 5934              	.LVL13:
 5935 040e 0300     		movs	r3, r0
 5936              		.loc 1 2971 20
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 156


 5937 0410 9BB2     		uxth	r3, r3
 5938              		.loc 1 2971 18
 5939 0412 BB61     		str	r3, [r7, #24]
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5940              		.loc 1 2972 9
 5941 0414 04E0     		b	.L299
 5942              	.L295:
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 5943              		.loc 1 2974 13
 5944 0416 1723     		movs	r3, #23
 5945 0418 FB18     		adds	r3, r7, r3
 5946 041a 0122     		movs	r2, #1
 5947 041c 1A70     		strb	r2, [r3]
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5948              		.loc 1 2975 9
 5949 041e C046     		nop
 5950              	.L299:
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5951              		.loc 1 2979 8
 5952 0420 BB69     		ldr	r3, [r7, #24]
 5953 0422 0F2B     		cmp	r3, #15
 5954 0424 09D9     		bls	.L300
 5955              		.loc 1 2979 36 discriminator 1
 5956 0426 BA69     		ldr	r2, [r7, #24]
 5957 0428 8023     		movs	r3, #128
 5958 042a 5B02     		lsls	r3, r3, #9
 5959 042c 9A42     		cmp	r2, r3
 5960 042e 04D2     		bcs	.L300
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
 5961              		.loc 1 2981 12
 5962 0430 7B68     		ldr	r3, [r7, #4]
 5963 0432 1B68     		ldr	r3, [r3]
 5964              		.loc 1 2981 28
 5965 0434 BA69     		ldr	r2, [r7, #24]
 5966 0436 DA60     		str	r2, [r3, #12]
 5967 0438 03E0     		b	.L293
 5968              	.L300:
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ret = HAL_ERROR;
 5969              		.loc 1 2985 11
 5970 043a 1723     		movs	r3, #23
 5971 043c FB18     		adds	r3, r7, r3
 5972 043e 0122     		movs	r2, #1
 5973 0440 1A70     		strb	r2, [r3]
 5974              	.L293:
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear ISR function pointers */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 157


2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
 5975              		.loc 1 2991 16
 5976 0442 7B68     		ldr	r3, [r7, #4]
 5977 0444 0022     		movs	r2, #0
 5978 0446 1A66     		str	r2, [r3, #96]
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 5979              		.loc 1 2992 16
 5980 0448 7B68     		ldr	r3, [r7, #4]
 5981 044a 0022     		movs	r2, #0
 5982 044c 5A66     		str	r2, [r3, #100]
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
 5983              		.loc 1 2994 10
 5984 044e 1723     		movs	r3, #23
 5985 0450 FB18     		adds	r3, r7, r3
 5986 0452 1B78     		ldrb	r3, [r3]
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5987              		.loc 1 2995 1
 5988 0454 1800     		movs	r0, r3
 5989 0456 BD46     		mov	sp, r7
 5990 0458 08B0     		add	sp, sp, #32
 5991              		@ sp needed
 5992 045a 80BD     		pop	{r7, pc}
 5993              	.L305:
 5994              		.align	2
 5995              	.L304:
 5996 045c 00127A00 		.word	8000000
 5997              		.cfi_endproc
 5998              	.LFE82:
 6000              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 6001              		.align	1
 6002              		.global	UART_AdvFeatureConfig
 6003              		.syntax unified
 6004              		.code	16
 6005              		.thumb_func
 6006              		.fpu softvfp
 6008              	UART_AdvFeatureConfig:
 6009              	.LFB83:
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6010              		.loc 1 3003 1
 6011              		.cfi_startproc
 6012              		@ args = 0, pretend = 0, frame = 8
 6013              		@ frame_needed = 1, uses_anonymous_args = 0
 6014 0000 80B5     		push	{r7, lr}
 6015              	.LCFI129:
 6016              		.cfi_def_cfa_offset 8
 6017              		.cfi_offset 7, -8
 6018              		.cfi_offset 14, -4
 6019 0002 82B0     		sub	sp, sp, #8
 6020              	.LCFI130:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 158


 6021              		.cfi_def_cfa_offset 16
 6022 0004 00AF     		add	r7, sp, #0
 6023              	.LCFI131:
 6024              		.cfi_def_cfa_register 7
 6025 0006 7860     		str	r0, [r7, #4]
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 6026              		.loc 1 3008 7
 6027 0008 7B68     		ldr	r3, [r7, #4]
 6028 000a 5B6A     		ldr	r3, [r3, #36]
 6029 000c 0122     		movs	r2, #1
 6030 000e 1340     		ands	r3, r2
 6031              		.loc 1 3008 6
 6032 0010 0BD0     		beq	.L307
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 6033              		.loc 1 3011 5
 6034 0012 7B68     		ldr	r3, [r7, #4]
 6035 0014 1B68     		ldr	r3, [r3]
 6036 0016 5B68     		ldr	r3, [r3, #4]
 6037 0018 4A4A     		ldr	r2, .L316
 6038 001a 1340     		ands	r3, r2
 6039 001c 1900     		movs	r1, r3
 6040 001e 7B68     		ldr	r3, [r7, #4]
 6041 0020 9A6A     		ldr	r2, [r3, #40]
 6042 0022 7B68     		ldr	r3, [r7, #4]
 6043 0024 1B68     		ldr	r3, [r3]
 6044 0026 0A43     		orrs	r2, r1
 6045 0028 5A60     		str	r2, [r3, #4]
 6046              	.L307:
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 6047              		.loc 1 3015 7
 6048 002a 7B68     		ldr	r3, [r7, #4]
 6049 002c 5B6A     		ldr	r3, [r3, #36]
 6050 002e 0222     		movs	r2, #2
 6051 0030 1340     		ands	r3, r2
 6052              		.loc 1 3015 6
 6053 0032 0BD0     		beq	.L308
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 6054              		.loc 1 3018 5
 6055 0034 7B68     		ldr	r3, [r7, #4]
 6056 0036 1B68     		ldr	r3, [r3]
 6057 0038 5B68     		ldr	r3, [r3, #4]
 6058 003a 434A     		ldr	r2, .L316+4
 6059 003c 1340     		ands	r3, r2
 6060 003e 1900     		movs	r1, r3
 6061 0040 7B68     		ldr	r3, [r7, #4]
 6062 0042 DA6A     		ldr	r2, [r3, #44]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 159


 6063 0044 7B68     		ldr	r3, [r7, #4]
 6064 0046 1B68     		ldr	r3, [r3]
 6065 0048 0A43     		orrs	r2, r1
 6066 004a 5A60     		str	r2, [r3, #4]
 6067              	.L308:
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 6068              		.loc 1 3022 7
 6069 004c 7B68     		ldr	r3, [r7, #4]
 6070 004e 5B6A     		ldr	r3, [r3, #36]
 6071 0050 0422     		movs	r2, #4
 6072 0052 1340     		ands	r3, r2
 6073              		.loc 1 3022 6
 6074 0054 0BD0     		beq	.L309
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 6075              		.loc 1 3025 5
 6076 0056 7B68     		ldr	r3, [r7, #4]
 6077 0058 1B68     		ldr	r3, [r3]
 6078 005a 5B68     		ldr	r3, [r3, #4]
 6079 005c 3B4A     		ldr	r2, .L316+8
 6080 005e 1340     		ands	r3, r2
 6081 0060 1900     		movs	r1, r3
 6082 0062 7B68     		ldr	r3, [r7, #4]
 6083 0064 1A6B     		ldr	r2, [r3, #48]
 6084 0066 7B68     		ldr	r3, [r7, #4]
 6085 0068 1B68     		ldr	r3, [r3]
 6086 006a 0A43     		orrs	r2, r1
 6087 006c 5A60     		str	r2, [r3, #4]
 6088              	.L309:
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 6089              		.loc 1 3029 7
 6090 006e 7B68     		ldr	r3, [r7, #4]
 6091 0070 5B6A     		ldr	r3, [r3, #36]
 6092 0072 0822     		movs	r2, #8
 6093 0074 1340     		ands	r3, r2
 6094              		.loc 1 3029 6
 6095 0076 0BD0     		beq	.L310
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 6096              		.loc 1 3032 5
 6097 0078 7B68     		ldr	r3, [r7, #4]
 6098 007a 1B68     		ldr	r3, [r3]
 6099 007c 5B68     		ldr	r3, [r3, #4]
 6100 007e 344A     		ldr	r2, .L316+12
 6101 0080 1340     		ands	r3, r2
 6102 0082 1900     		movs	r1, r3
 6103 0084 7B68     		ldr	r3, [r7, #4]
 6104 0086 5A6B     		ldr	r2, [r3, #52]
 6105 0088 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 160


 6106 008a 1B68     		ldr	r3, [r3]
 6107 008c 0A43     		orrs	r2, r1
 6108 008e 5A60     		str	r2, [r3, #4]
 6109              	.L310:
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 6110              		.loc 1 3036 7
 6111 0090 7B68     		ldr	r3, [r7, #4]
 6112 0092 5B6A     		ldr	r3, [r3, #36]
 6113 0094 1022     		movs	r2, #16
 6114 0096 1340     		ands	r3, r2
 6115              		.loc 1 3036 6
 6116 0098 0BD0     		beq	.L311
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 6117              		.loc 1 3039 5
 6118 009a 7B68     		ldr	r3, [r7, #4]
 6119 009c 1B68     		ldr	r3, [r3]
 6120 009e 9B68     		ldr	r3, [r3, #8]
 6121 00a0 2C4A     		ldr	r2, .L316+16
 6122 00a2 1340     		ands	r3, r2
 6123 00a4 1900     		movs	r1, r3
 6124 00a6 7B68     		ldr	r3, [r7, #4]
 6125 00a8 9A6B     		ldr	r2, [r3, #56]
 6126 00aa 7B68     		ldr	r3, [r7, #4]
 6127 00ac 1B68     		ldr	r3, [r3]
 6128 00ae 0A43     		orrs	r2, r1
 6129 00b0 9A60     		str	r2, [r3, #8]
 6130              	.L311:
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 6131              		.loc 1 3043 7
 6132 00b2 7B68     		ldr	r3, [r7, #4]
 6133 00b4 5B6A     		ldr	r3, [r3, #36]
 6134 00b6 2022     		movs	r2, #32
 6135 00b8 1340     		ands	r3, r2
 6136              		.loc 1 3043 6
 6137 00ba 0BD0     		beq	.L312
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 6138              		.loc 1 3046 5
 6139 00bc 7B68     		ldr	r3, [r7, #4]
 6140 00be 1B68     		ldr	r3, [r3]
 6141 00c0 9B68     		ldr	r3, [r3, #8]
 6142 00c2 254A     		ldr	r2, .L316+20
 6143 00c4 1340     		ands	r3, r2
 6144 00c6 1900     		movs	r1, r3
 6145 00c8 7B68     		ldr	r3, [r7, #4]
 6146 00ca DA6B     		ldr	r2, [r3, #60]
 6147 00cc 7B68     		ldr	r3, [r7, #4]
 6148 00ce 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 161


 6149 00d0 0A43     		orrs	r2, r1
 6150 00d2 9A60     		str	r2, [r3, #8]
 6151              	.L312:
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 6152              		.loc 1 3050 7
 6153 00d4 7B68     		ldr	r3, [r7, #4]
 6154 00d6 5B6A     		ldr	r3, [r3, #36]
 6155 00d8 4022     		movs	r2, #64
 6156 00da 1340     		ands	r3, r2
 6157              		.loc 1 3050 6
 6158 00dc 1DD0     		beq	.L313
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 6159              		.loc 1 3054 5
 6160 00de 7B68     		ldr	r3, [r7, #4]
 6161 00e0 1B68     		ldr	r3, [r3]
 6162 00e2 5B68     		ldr	r3, [r3, #4]
 6163 00e4 1D4A     		ldr	r2, .L316+24
 6164 00e6 1340     		ands	r3, r2
 6165 00e8 1900     		movs	r1, r3
 6166 00ea 7B68     		ldr	r3, [r7, #4]
 6167 00ec 1A6C     		ldr	r2, [r3, #64]
 6168 00ee 7B68     		ldr	r3, [r7, #4]
 6169 00f0 1B68     		ldr	r3, [r3]
 6170 00f2 0A43     		orrs	r2, r1
 6171 00f4 5A60     		str	r2, [r3, #4]
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 6172              		.loc 1 3056 28
 6173 00f6 7B68     		ldr	r3, [r7, #4]
 6174 00f8 1A6C     		ldr	r2, [r3, #64]
 6175              		.loc 1 3056 8
 6176 00fa 8023     		movs	r3, #128
 6177 00fc 5B03     		lsls	r3, r3, #13
 6178 00fe 9A42     		cmp	r2, r3
 6179 0100 0BD1     		bne	.L313
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 6180              		.loc 1 3059 7
 6181 0102 7B68     		ldr	r3, [r7, #4]
 6182 0104 1B68     		ldr	r3, [r3]
 6183 0106 5B68     		ldr	r3, [r3, #4]
 6184 0108 154A     		ldr	r2, .L316+28
 6185 010a 1340     		ands	r3, r2
 6186 010c 1900     		movs	r1, r3
 6187 010e 7B68     		ldr	r3, [r7, #4]
 6188 0110 5A6C     		ldr	r2, [r3, #68]
 6189 0112 7B68     		ldr	r3, [r7, #4]
 6190 0114 1B68     		ldr	r3, [r3]
 6191 0116 0A43     		orrs	r2, r1
 6192 0118 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 162


 6193              	.L313:
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 6194              		.loc 1 3064 7
 6195 011a 7B68     		ldr	r3, [r7, #4]
 6196 011c 5B6A     		ldr	r3, [r3, #36]
 6197 011e 8022     		movs	r2, #128
 6198 0120 1340     		ands	r3, r2
 6199              		.loc 1 3064 6
 6200 0122 0BD0     		beq	.L315
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 6201              		.loc 1 3067 5
 6202 0124 7B68     		ldr	r3, [r7, #4]
 6203 0126 1B68     		ldr	r3, [r3]
 6204 0128 5B68     		ldr	r3, [r3, #4]
 6205 012a 0E4A     		ldr	r2, .L316+32
 6206 012c 1340     		ands	r3, r2
 6207 012e 1900     		movs	r1, r3
 6208 0130 7B68     		ldr	r3, [r7, #4]
 6209 0132 9A6C     		ldr	r2, [r3, #72]
 6210 0134 7B68     		ldr	r3, [r7, #4]
 6211 0136 1B68     		ldr	r3, [r3]
 6212 0138 0A43     		orrs	r2, r1
 6213 013a 5A60     		str	r2, [r3, #4]
 6214              	.L315:
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6215              		.loc 1 3069 1
 6216 013c C046     		nop
 6217 013e BD46     		mov	sp, r7
 6218 0140 02B0     		add	sp, sp, #8
 6219              		@ sp needed
 6220 0142 80BD     		pop	{r7, pc}
 6221              	.L317:
 6222              		.align	2
 6223              	.L316:
 6224 0144 FFFFFDFF 		.word	-131073
 6225 0148 FFFFFEFF 		.word	-65537
 6226 014c FFFFFBFF 		.word	-262145
 6227 0150 FF7FFFFF 		.word	-32769
 6228 0154 FFEFFFFF 		.word	-4097
 6229 0158 FFDFFFFF 		.word	-8193
 6230 015c FFFFEFFF 		.word	-1048577
 6231 0160 FFFF9FFF 		.word	-6291457
 6232 0164 FFFFF7FF 		.word	-524289
 6233              		.cfi_endproc
 6234              	.LFE83:
 6236              		.section	.text.UART_CheckIdleState,"ax",%progbits
 6237              		.align	1
 6238              		.global	UART_CheckIdleState
 6239              		.syntax unified
 6240              		.code	16
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 163


 6241              		.thumb_func
 6242              		.fpu softvfp
 6244              	UART_CheckIdleState:
 6245              	.LFB84:
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6246              		.loc 1 3077 1
 6247              		.cfi_startproc
 6248              		@ args = 0, pretend = 0, frame = 16
 6249              		@ frame_needed = 1, uses_anonymous_args = 0
 6250 0000 80B5     		push	{r7, lr}
 6251              	.LCFI132:
 6252              		.cfi_def_cfa_offset 8
 6253              		.cfi_offset 7, -8
 6254              		.cfi_offset 14, -4
 6255 0002 86B0     		sub	sp, sp, #24
 6256              	.LCFI133:
 6257              		.cfi_def_cfa_offset 32
 6258 0004 02AF     		add	r7, sp, #8
 6259              	.LCFI134:
 6260              		.cfi_def_cfa 7, 24
 6261 0006 7860     		str	r0, [r7, #4]
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6262              		.loc 1 3081 20
 6263 0008 7B68     		ldr	r3, [r7, #4]
 6264 000a 0022     		movs	r2, #0
 6265 000c DA67     		str	r2, [r3, #124]
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
 6266              		.loc 1 3084 15
 6267 000e FFF7FEFF 		bl	HAL_GetTick
 6268 0012 0300     		movs	r3, r0
 6269 0014 FB60     		str	r3, [r7, #12]
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 6270              		.loc 1 3087 13
 6271 0016 7B68     		ldr	r3, [r7, #4]
 6272 0018 1B68     		ldr	r3, [r3]
 6273              		.loc 1 3087 23
 6274 001a 1B68     		ldr	r3, [r3]
 6275              		.loc 1 3087 29
 6276 001c 0822     		movs	r2, #8
 6277 001e 1340     		ands	r3, r2
 6278              		.loc 1 3087 6
 6279 0020 082B     		cmp	r3, #8
 6280 0022 0CD1     		bne	.L319
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 164


3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6281              		.loc 1 3090 9
 6282 0024 FB68     		ldr	r3, [r7, #12]
 6283 0026 8022     		movs	r2, #128
 6284 0028 9103     		lsls	r1, r2, #14
 6285 002a 7868     		ldr	r0, [r7, #4]
 6286 002c 154A     		ldr	r2, .L322
 6287 002e 0092     		str	r2, [sp]
 6288 0030 0022     		movs	r2, #0
 6289 0032 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6290 0036 031E     		subs	r3, r0, #0
 6291              		.loc 1 3090 8
 6292 0038 01D0     		beq	.L319
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 6293              		.loc 1 3093 14
 6294 003a 0323     		movs	r3, #3
 6295 003c 1EE0     		b	.L320
 6296              	.L319:
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 6297              		.loc 1 3098 13
 6298 003e 7B68     		ldr	r3, [r7, #4]
 6299 0040 1B68     		ldr	r3, [r3]
 6300              		.loc 1 3098 23
 6301 0042 1B68     		ldr	r3, [r3]
 6302              		.loc 1 3098 29
 6303 0044 0422     		movs	r2, #4
 6304 0046 1340     		ands	r3, r2
 6305              		.loc 1 3098 6
 6306 0048 042B     		cmp	r3, #4
 6307 004a 0CD1     		bne	.L321
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6308              		.loc 1 3101 9
 6309 004c FB68     		ldr	r3, [r7, #12]
 6310 004e 8022     		movs	r2, #128
 6311 0050 D103     		lsls	r1, r2, #15
 6312 0052 7868     		ldr	r0, [r7, #4]
 6313 0054 0B4A     		ldr	r2, .L322
 6314 0056 0092     		str	r2, [sp]
 6315 0058 0022     		movs	r2, #0
 6316 005a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6317 005e 031E     		subs	r3, r0, #0
 6318              		.loc 1 3101 8
 6319 0060 01D0     		beq	.L321
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 6320              		.loc 1 3104 14
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 165


 6321 0062 0323     		movs	r3, #3
 6322 0064 0AE0     		b	.L320
 6323              	.L321:
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6324              		.loc 1 3109 17
 6325 0066 7B68     		ldr	r3, [r7, #4]
 6326 0068 2022     		movs	r2, #32
 6327 006a 5A67     		str	r2, [r3, #116]
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6328              		.loc 1 3110 18
 6329 006c 7B68     		ldr	r3, [r7, #4]
 6330 006e 2022     		movs	r2, #32
 6331 0070 9A67     		str	r2, [r3, #120]
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6332              		.loc 1 3112 3
 6333 0072 7B68     		ldr	r3, [r7, #4]
 6334 0074 7022     		movs	r2, #112
 6335 0076 0021     		movs	r1, #0
 6336 0078 9954     		strb	r1, [r3, r2]
3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 6337              		.loc 1 3114 10
 6338 007a 0023     		movs	r3, #0
 6339              	.L320:
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6340              		.loc 1 3115 1
 6341 007c 1800     		movs	r0, r3
 6342 007e BD46     		mov	sp, r7
 6343 0080 04B0     		add	sp, sp, #16
 6344              		@ sp needed
 6345 0082 80BD     		pop	{r7, pc}
 6346              	.L323:
 6347              		.align	2
 6348              	.L322:
 6349 0084 FFFFFF01 		.word	33554431
 6350              		.cfi_endproc
 6351              	.LFE84:
 6353              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6354              		.align	1
 6355              		.global	UART_WaitOnFlagUntilTimeout
 6356              		.syntax unified
 6357              		.code	16
 6358              		.thumb_func
 6359              		.fpu softvfp
 6361              	UART_WaitOnFlagUntilTimeout:
 6362              	.LFB85:
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart     UART handle.
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 166


3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Tickstart Tick start value
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6363              		.loc 1 3128 1
 6364              		.cfi_startproc
 6365              		@ args = 4, pretend = 0, frame = 16
 6366              		@ frame_needed = 1, uses_anonymous_args = 0
 6367 0000 80B5     		push	{r7, lr}
 6368              	.LCFI135:
 6369              		.cfi_def_cfa_offset 8
 6370              		.cfi_offset 7, -8
 6371              		.cfi_offset 14, -4
 6372 0002 84B0     		sub	sp, sp, #16
 6373              	.LCFI136:
 6374              		.cfi_def_cfa_offset 24
 6375 0004 00AF     		add	r7, sp, #0
 6376              	.LCFI137:
 6377              		.cfi_def_cfa_register 7
 6378 0006 F860     		str	r0, [r7, #12]
 6379 0008 B960     		str	r1, [r7, #8]
 6380 000a 3B60     		str	r3, [r7]
 6381 000c FB1D     		adds	r3, r7, #7
 6382 000e 1A70     		strb	r2, [r3]
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 6383              		.loc 1 3130 9
 6384 0010 5DE0     		b	.L325
 6385              	.L329:
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 6386              		.loc 1 3133 8
 6387 0012 BB69     		ldr	r3, [r7, #24]
 6388 0014 0133     		adds	r3, r3, #1
 6389 0016 5AD0     		beq	.L325
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 6390              		.loc 1 3135 13
 6391 0018 FFF7FEFF 		bl	HAL_GetTick
 6392 001c 0200     		movs	r2, r0
 6393              		.loc 1 3135 27
 6394 001e 3B68     		ldr	r3, [r7]
 6395 0020 D31A     		subs	r3, r2, r3
 6396              		.loc 1 3135 10
 6397 0022 BA69     		ldr	r2, [r7, #24]
 6398 0024 9A42     		cmp	r2, r3
 6399 0026 02D3     		bcc	.L326
 6400              		.loc 1 3135 51 discriminator 1
 6401 0028 BB69     		ldr	r3, [r7, #24]
 6402 002a 002B     		cmp	r3, #0
 6403 002c 1BD1     		bne	.L327
 6404              	.L326:
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 167


3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6405              		.loc 1 3138 9
 6406 002e FB68     		ldr	r3, [r7, #12]
 6407 0030 1B68     		ldr	r3, [r3]
 6408 0032 1A68     		ldr	r2, [r3]
 6409 0034 FB68     		ldr	r3, [r7, #12]
 6410 0036 1B68     		ldr	r3, [r3]
 6411 0038 2F49     		ldr	r1, .L330
 6412 003a 0A40     		ands	r2, r1
 6413 003c 1A60     		str	r2, [r3]
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6414              		.loc 1 3139 9
 6415 003e FB68     		ldr	r3, [r7, #12]
 6416 0040 1B68     		ldr	r3, [r3]
 6417 0042 9A68     		ldr	r2, [r3, #8]
 6418 0044 FB68     		ldr	r3, [r7, #12]
 6419 0046 1B68     		ldr	r3, [r3]
 6420 0048 0121     		movs	r1, #1
 6421 004a 8A43     		bics	r2, r1
 6422 004c 9A60     		str	r2, [r3, #8]
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 6423              		.loc 1 3141 23
 6424 004e FB68     		ldr	r3, [r7, #12]
 6425 0050 2022     		movs	r2, #32
 6426 0052 5A67     		str	r2, [r3, #116]
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6427              		.loc 1 3142 24
 6428 0054 FB68     		ldr	r3, [r7, #12]
 6429 0056 2022     		movs	r2, #32
 6430 0058 9A67     		str	r2, [r3, #120]
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 6431              		.loc 1 3144 9
 6432 005a FB68     		ldr	r3, [r7, #12]
 6433 005c 7022     		movs	r2, #112
 6434 005e 0021     		movs	r1, #0
 6435 0060 9954     		strb	r1, [r3, r2]
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 6436              		.loc 1 3146 16
 6437 0062 0323     		movs	r3, #3
 6438 0064 43E0     		b	.L328
 6439              	.L327:
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 6440              		.loc 1 3149 11
 6441 0066 FB68     		ldr	r3, [r7, #12]
 6442 0068 1B68     		ldr	r3, [r3]
 6443 006a 1B68     		ldr	r3, [r3]
 6444 006c 0422     		movs	r2, #4
 6445 006e 1340     		ands	r3, r2
 6446              		.loc 1 3149 10
 6447 0070 2DD0     		beq	.L325
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 168


3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 6448              		.loc 1 3151 13
 6449 0072 FB68     		ldr	r3, [r7, #12]
 6450 0074 1B68     		ldr	r3, [r3]
 6451 0076 DA69     		ldr	r2, [r3, #28]
 6452 0078 8023     		movs	r3, #128
 6453 007a 1B01     		lsls	r3, r3, #4
 6454 007c 1A40     		ands	r2, r3
 6455              		.loc 1 3151 12
 6456 007e 8023     		movs	r3, #128
 6457 0080 1B01     		lsls	r3, r3, #4
 6458 0082 9A42     		cmp	r2, r3
 6459 0084 23D1     		bne	.L325
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 6460              		.loc 1 3154 11
 6461 0086 FB68     		ldr	r3, [r7, #12]
 6462 0088 1B68     		ldr	r3, [r3]
 6463 008a 8022     		movs	r2, #128
 6464 008c 1201     		lsls	r2, r2, #4
 6465 008e 1A62     		str	r2, [r3, #32]
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6466              		.loc 1 3157 11
 6467 0090 FB68     		ldr	r3, [r7, #12]
 6468 0092 1B68     		ldr	r3, [r3]
 6469 0094 1A68     		ldr	r2, [r3]
 6470 0096 FB68     		ldr	r3, [r7, #12]
 6471 0098 1B68     		ldr	r3, [r3]
 6472 009a 1749     		ldr	r1, .L330
 6473 009c 0A40     		ands	r2, r1
 6474 009e 1A60     		str	r2, [r3]
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6475              		.loc 1 3158 11
 6476 00a0 FB68     		ldr	r3, [r7, #12]
 6477 00a2 1B68     		ldr	r3, [r3]
 6478 00a4 9A68     		ldr	r2, [r3, #8]
 6479 00a6 FB68     		ldr	r3, [r7, #12]
 6480 00a8 1B68     		ldr	r3, [r3]
 6481 00aa 0121     		movs	r1, #1
 6482 00ac 8A43     		bics	r2, r1
 6483 00ae 9A60     		str	r2, [r3, #8]
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 6484              		.loc 1 3160 25
 6485 00b0 FB68     		ldr	r3, [r7, #12]
 6486 00b2 2022     		movs	r2, #32
 6487 00b4 5A67     		str	r2, [r3, #116]
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6488              		.loc 1 3161 26
 6489 00b6 FB68     		ldr	r3, [r7, #12]
 6490 00b8 2022     		movs	r2, #32
 6491 00ba 9A67     		str	r2, [r3, #120]
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 6492              		.loc 1 3162 28
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 169


 6493 00bc FB68     		ldr	r3, [r7, #12]
 6494 00be 2022     		movs	r2, #32
 6495 00c0 DA67     		str	r2, [r3, #124]
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 6496              		.loc 1 3165 11
 6497 00c2 FB68     		ldr	r3, [r7, #12]
 6498 00c4 7022     		movs	r2, #112
 6499 00c6 0021     		movs	r1, #0
 6500 00c8 9954     		strb	r1, [r3, r2]
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 6501              		.loc 1 3167 18
 6502 00ca 0323     		movs	r3, #3
 6503 00cc 0FE0     		b	.L328
 6504              	.L325:
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6505              		.loc 1 3130 11
 6506 00ce FB68     		ldr	r3, [r7, #12]
 6507 00d0 1B68     		ldr	r3, [r3]
 6508 00d2 DB69     		ldr	r3, [r3, #28]
 6509 00d4 BA68     		ldr	r2, [r7, #8]
 6510 00d6 1340     		ands	r3, r2
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6511              		.loc 1 3130 50
 6512 00d8 BA68     		ldr	r2, [r7, #8]
 6513 00da D31A     		subs	r3, r2, r3
 6514 00dc 5A42     		rsbs	r2, r3, #0
 6515 00de 5341     		adcs	r3, r3, r2
 6516 00e0 DBB2     		uxtb	r3, r3
 6517 00e2 1A00     		movs	r2, r3
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6518              		.loc 1 3130 59
 6519 00e4 FB1D     		adds	r3, r7, #7
 6520 00e6 1B78     		ldrb	r3, [r3]
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6521              		.loc 1 3130 9
 6522 00e8 9A42     		cmp	r2, r3
 6523 00ea 92D0     		beq	.L329
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 6524              		.loc 1 3172 10
 6525 00ec 0023     		movs	r3, #0
 6526              	.L328:
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6527              		.loc 1 3173 1
 6528 00ee 1800     		movs	r0, r3
 6529 00f0 BD46     		mov	sp, r7
 6530 00f2 04B0     		add	sp, sp, #16
 6531              		@ sp needed
 6532 00f4 80BD     		pop	{r7, pc}
 6533              	.L331:
 6534 00f6 C046     		.align	2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 170


 6535              	.L330:
 6536 00f8 5FFEFFFF 		.word	-417
 6537              		.cfi_endproc
 6538              	.LFE85:
 6540              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 6541              		.align	1
 6542              		.syntax unified
 6543              		.code	16
 6544              		.thumb_func
 6545              		.fpu softvfp
 6547              	UART_EndTxTransfer:
 6548              	.LFB86:
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6549              		.loc 1 3182 1
 6550              		.cfi_startproc
 6551              		@ args = 0, pretend = 0, frame = 8
 6552              		@ frame_needed = 1, uses_anonymous_args = 0
 6553 0000 80B5     		push	{r7, lr}
 6554              	.LCFI138:
 6555              		.cfi_def_cfa_offset 8
 6556              		.cfi_offset 7, -8
 6557              		.cfi_offset 14, -4
 6558 0002 82B0     		sub	sp, sp, #8
 6559              	.LCFI139:
 6560              		.cfi_def_cfa_offset 16
 6561 0004 00AF     		add	r7, sp, #0
 6562              	.LCFI140:
 6563              		.cfi_def_cfa_register 7
 6564 0006 7860     		str	r0, [r7, #4]
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 6565              		.loc 1 3184 3
 6566 0008 7B68     		ldr	r3, [r7, #4]
 6567 000a 1B68     		ldr	r3, [r3]
 6568 000c 1A68     		ldr	r2, [r3]
 6569 000e 7B68     		ldr	r3, [r7, #4]
 6570 0010 1B68     		ldr	r3, [r3]
 6571 0012 C021     		movs	r1, #192
 6572 0014 8A43     		bics	r2, r1
 6573 0016 1A60     		str	r2, [r3]
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6574              		.loc 1 3187 17
 6575 0018 7B68     		ldr	r3, [r7, #4]
 6576 001a 2022     		movs	r2, #32
 6577 001c 5A67     		str	r2, [r3, #116]
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6578              		.loc 1 3188 1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 171


 6579 001e C046     		nop
 6580 0020 BD46     		mov	sp, r7
 6581 0022 02B0     		add	sp, sp, #8
 6582              		@ sp needed
 6583 0024 80BD     		pop	{r7, pc}
 6584              		.cfi_endproc
 6585              	.LFE86:
 6587              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 6588              		.align	1
 6589              		.syntax unified
 6590              		.code	16
 6591              		.thumb_func
 6592              		.fpu softvfp
 6594              	UART_EndRxTransfer:
 6595              	.LFB87:
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6596              		.loc 1 3197 1
 6597              		.cfi_startproc
 6598              		@ args = 0, pretend = 0, frame = 8
 6599              		@ frame_needed = 1, uses_anonymous_args = 0
 6600 0000 80B5     		push	{r7, lr}
 6601              	.LCFI141:
 6602              		.cfi_def_cfa_offset 8
 6603              		.cfi_offset 7, -8
 6604              		.cfi_offset 14, -4
 6605 0002 82B0     		sub	sp, sp, #8
 6606              	.LCFI142:
 6607              		.cfi_def_cfa_offset 16
 6608 0004 00AF     		add	r7, sp, #0
 6609              	.LCFI143:
 6610              		.cfi_def_cfa_register 7
 6611 0006 7860     		str	r0, [r7, #4]
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6612              		.loc 1 3199 3
 6613 0008 7B68     		ldr	r3, [r7, #4]
 6614 000a 1B68     		ldr	r3, [r3]
 6615 000c 1A68     		ldr	r2, [r3]
 6616 000e 7B68     		ldr	r3, [r7, #4]
 6617 0010 1B68     		ldr	r3, [r3]
 6618 0012 0A49     		ldr	r1, .L334
 6619 0014 0A40     		ands	r2, r1
 6620 0016 1A60     		str	r2, [r3]
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6621              		.loc 1 3200 3
 6622 0018 7B68     		ldr	r3, [r7, #4]
 6623 001a 1B68     		ldr	r3, [r3]
 6624 001c 9A68     		ldr	r2, [r3, #8]
 6625 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 172


 6626 0020 1B68     		ldr	r3, [r3]
 6627 0022 0121     		movs	r1, #1
 6628 0024 8A43     		bics	r2, r1
 6629 0026 9A60     		str	r2, [r3, #8]
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6630              		.loc 1 3203 18
 6631 0028 7B68     		ldr	r3, [r7, #4]
 6632 002a 2022     		movs	r2, #32
 6633 002c 9A67     		str	r2, [r3, #120]
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
 6634              		.loc 1 3206 16
 6635 002e 7B68     		ldr	r3, [r7, #4]
 6636 0030 0022     		movs	r2, #0
 6637 0032 1A66     		str	r2, [r3, #96]
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6638              		.loc 1 3207 1
 6639 0034 C046     		nop
 6640 0036 BD46     		mov	sp, r7
 6641 0038 02B0     		add	sp, sp, #8
 6642              		@ sp needed
 6643 003a 80BD     		pop	{r7, pc}
 6644              	.L335:
 6645              		.align	2
 6646              	.L334:
 6647 003c DFFEFFFF 		.word	-289
 6648              		.cfi_endproc
 6649              	.LFE87:
 6651              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6652              		.align	1
 6653              		.syntax unified
 6654              		.code	16
 6655              		.thumb_func
 6656              		.fpu softvfp
 6658              	UART_DMATransmitCplt:
 6659              	.LFB88:
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6660              		.loc 1 3216 1
 6661              		.cfi_startproc
 6662              		@ args = 0, pretend = 0, frame = 16
 6663              		@ frame_needed = 1, uses_anonymous_args = 0
 6664 0000 80B5     		push	{r7, lr}
 6665              	.LCFI144:
 6666              		.cfi_def_cfa_offset 8
 6667              		.cfi_offset 7, -8
 6668              		.cfi_offset 14, -4
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 173


 6669 0002 84B0     		sub	sp, sp, #16
 6670              	.LCFI145:
 6671              		.cfi_def_cfa_offset 24
 6672 0004 00AF     		add	r7, sp, #0
 6673              	.LCFI146:
 6674              		.cfi_def_cfa_register 7
 6675 0006 7860     		str	r0, [r7, #4]
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6676              		.loc 1 3217 23
 6677 0008 7B68     		ldr	r3, [r7, #4]
 6678 000a 5B6A     		ldr	r3, [r3, #36]
 6679 000c FB60     		str	r3, [r7, #12]
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 6680              		.loc 1 3220 17
 6681 000e 7B68     		ldr	r3, [r7, #4]
 6682 0010 9B69     		ldr	r3, [r3, #24]
 6683              		.loc 1 3220 6
 6684 0012 202B     		cmp	r3, #32
 6685 0014 14D0     		beq	.L337
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6686              		.loc 1 3222 24
 6687 0016 FB68     		ldr	r3, [r7, #12]
 6688 0018 5222     		movs	r2, #82
 6689 001a 0021     		movs	r1, #0
 6690 001c 9952     		strh	r1, [r3, r2]
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6691              		.loc 1 3226 5
 6692 001e FB68     		ldr	r3, [r7, #12]
 6693 0020 1B68     		ldr	r3, [r3]
 6694 0022 9A68     		ldr	r2, [r3, #8]
 6695 0024 FB68     		ldr	r3, [r7, #12]
 6696 0026 1B68     		ldr	r3, [r3]
 6697 0028 8021     		movs	r1, #128
 6698 002a 8A43     		bics	r2, r1
 6699 002c 9A60     		str	r2, [r3, #8]
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6700              		.loc 1 3229 5
 6701 002e FB68     		ldr	r3, [r7, #12]
 6702 0030 1B68     		ldr	r3, [r3]
 6703 0032 1A68     		ldr	r2, [r3]
 6704 0034 FB68     		ldr	r3, [r7, #12]
 6705 0036 1B68     		ldr	r3, [r3]
 6706 0038 4021     		movs	r1, #64
 6707 003a 0A43     		orrs	r2, r1
 6708 003c 1A60     		str	r2, [r3]
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 174


3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6709              		.loc 1 3242 1
 6710 003e 03E0     		b	.L339
 6711              	.L337:
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6712              		.loc 1 3239 5
 6713 0040 FB68     		ldr	r3, [r7, #12]
 6714 0042 1800     		movs	r0, r3
 6715 0044 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 6716              	.L339:
 6717              		.loc 1 3242 1
 6718 0048 C046     		nop
 6719 004a BD46     		mov	sp, r7
 6720 004c 04B0     		add	sp, sp, #16
 6721              		@ sp needed
 6722 004e 80BD     		pop	{r7, pc}
 6723              		.cfi_endproc
 6724              	.LFE88:
 6726              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 6727              		.align	1
 6728              		.syntax unified
 6729              		.code	16
 6730              		.thumb_func
 6731              		.fpu softvfp
 6733              	UART_DMATxHalfCplt:
 6734              	.LFB89:
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6735              		.loc 1 3250 1
 6736              		.cfi_startproc
 6737              		@ args = 0, pretend = 0, frame = 16
 6738              		@ frame_needed = 1, uses_anonymous_args = 0
 6739 0000 80B5     		push	{r7, lr}
 6740              	.LCFI147:
 6741              		.cfi_def_cfa_offset 8
 6742              		.cfi_offset 7, -8
 6743              		.cfi_offset 14, -4
 6744 0002 84B0     		sub	sp, sp, #16
 6745              	.LCFI148:
 6746              		.cfi_def_cfa_offset 24
 6747 0004 00AF     		add	r7, sp, #0
 6748              	.LCFI149:
 6749              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 175


 6750 0006 7860     		str	r0, [r7, #4]
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6751              		.loc 1 3251 23
 6752 0008 7B68     		ldr	r3, [r7, #4]
 6753 000a 5B6A     		ldr	r3, [r3, #36]
 6754 000c FB60     		str	r3, [r7, #12]
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 6755              		.loc 1 3258 3
 6756 000e FB68     		ldr	r3, [r7, #12]
 6757 0010 1800     		movs	r0, r3
 6758 0012 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6759              		.loc 1 3260 1
 6760 0016 C046     		nop
 6761 0018 BD46     		mov	sp, r7
 6762 001a 04B0     		add	sp, sp, #16
 6763              		@ sp needed
 6764 001c 80BD     		pop	{r7, pc}
 6765              		.cfi_endproc
 6766              	.LFE89:
 6768              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6769              		.align	1
 6770              		.syntax unified
 6771              		.code	16
 6772              		.thumb_func
 6773              		.fpu softvfp
 6775              	UART_DMAReceiveCplt:
 6776              	.LFB90:
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6777              		.loc 1 3268 1
 6778              		.cfi_startproc
 6779              		@ args = 0, pretend = 0, frame = 16
 6780              		@ frame_needed = 1, uses_anonymous_args = 0
 6781 0000 80B5     		push	{r7, lr}
 6782              	.LCFI150:
 6783              		.cfi_def_cfa_offset 8
 6784              		.cfi_offset 7, -8
 6785              		.cfi_offset 14, -4
 6786 0002 84B0     		sub	sp, sp, #16
 6787              	.LCFI151:
 6788              		.cfi_def_cfa_offset 24
 6789 0004 00AF     		add	r7, sp, #0
 6790              	.LCFI152:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 176


 6791              		.cfi_def_cfa_register 7
 6792 0006 7860     		str	r0, [r7, #4]
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6793              		.loc 1 3269 23
 6794 0008 7B68     		ldr	r3, [r7, #4]
 6795 000a 5B6A     		ldr	r3, [r3, #36]
 6796 000c FB60     		str	r3, [r7, #12]
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 6797              		.loc 1 3272 17
 6798 000e 7B68     		ldr	r3, [r7, #4]
 6799 0010 9B69     		ldr	r3, [r3, #24]
 6800              		.loc 1 3272 6
 6801 0012 202B     		cmp	r3, #32
 6802 0014 1ED0     		beq	.L342
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6803              		.loc 1 3274 24
 6804 0016 FB68     		ldr	r3, [r7, #12]
 6805 0018 5A22     		movs	r2, #90
 6806 001a 0021     		movs	r1, #0
 6807 001c 9952     		strh	r1, [r3, r2]
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6808              		.loc 1 3277 5
 6809 001e FB68     		ldr	r3, [r7, #12]
 6810 0020 1B68     		ldr	r3, [r3]
 6811 0022 1A68     		ldr	r2, [r3]
 6812 0024 FB68     		ldr	r3, [r7, #12]
 6813 0026 1B68     		ldr	r3, [r3]
 6814 0028 0E49     		ldr	r1, .L343
 6815 002a 0A40     		ands	r2, r1
 6816 002c 1A60     		str	r2, [r3]
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6817              		.loc 1 3278 5
 6818 002e FB68     		ldr	r3, [r7, #12]
 6819 0030 1B68     		ldr	r3, [r3]
 6820 0032 9A68     		ldr	r2, [r3, #8]
 6821 0034 FB68     		ldr	r3, [r7, #12]
 6822 0036 1B68     		ldr	r3, [r3]
 6823 0038 0121     		movs	r1, #1
 6824 003a 8A43     		bics	r2, r1
 6825 003c 9A60     		str	r2, [r3, #8]
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6826              		.loc 1 3282 5
 6827 003e FB68     		ldr	r3, [r7, #12]
 6828 0040 1B68     		ldr	r3, [r3]
 6829 0042 9A68     		ldr	r2, [r3, #8]
 6830 0044 FB68     		ldr	r3, [r7, #12]
 6831 0046 1B68     		ldr	r3, [r3]
 6832 0048 4021     		movs	r1, #64
 6833 004a 8A43     		bics	r2, r1
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 177


 6834 004c 9A60     		str	r2, [r3, #8]
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6835              		.loc 1 3285 20
 6836 004e FB68     		ldr	r3, [r7, #12]
 6837 0050 2022     		movs	r2, #32
 6838 0052 9A67     		str	r2, [r3, #120]
 6839              	.L342:
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 6840              		.loc 1 3293 3
 6841 0054 FB68     		ldr	r3, [r7, #12]
 6842 0056 1800     		movs	r0, r3
 6843 0058 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6844              		.loc 1 3295 1
 6845 005c C046     		nop
 6846 005e BD46     		mov	sp, r7
 6847 0060 04B0     		add	sp, sp, #16
 6848              		@ sp needed
 6849 0062 80BD     		pop	{r7, pc}
 6850              	.L344:
 6851              		.align	2
 6852              	.L343:
 6853 0064 FFFEFFFF 		.word	-257
 6854              		.cfi_endproc
 6855              	.LFE90:
 6857              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6858              		.align	1
 6859              		.syntax unified
 6860              		.code	16
 6861              		.thumb_func
 6862              		.fpu softvfp
 6864              	UART_DMARxHalfCplt:
 6865              	.LFB91:
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6866              		.loc 1 3303 1
 6867              		.cfi_startproc
 6868              		@ args = 0, pretend = 0, frame = 16
 6869              		@ frame_needed = 1, uses_anonymous_args = 0
 6870 0000 80B5     		push	{r7, lr}
 6871              	.LCFI153:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 178


 6872              		.cfi_def_cfa_offset 8
 6873              		.cfi_offset 7, -8
 6874              		.cfi_offset 14, -4
 6875 0002 84B0     		sub	sp, sp, #16
 6876              	.LCFI154:
 6877              		.cfi_def_cfa_offset 24
 6878 0004 00AF     		add	r7, sp, #0
 6879              	.LCFI155:
 6880              		.cfi_def_cfa_register 7
 6881 0006 7860     		str	r0, [r7, #4]
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6882              		.loc 1 3304 23
 6883 0008 7B68     		ldr	r3, [r7, #4]
 6884 000a 5B6A     		ldr	r3, [r3, #36]
 6885 000c FB60     		str	r3, [r7, #12]
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6886              		.loc 1 3311 3
 6887 000e FB68     		ldr	r3, [r7, #12]
 6888 0010 1800     		movs	r0, r3
 6889 0012 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6890              		.loc 1 3313 1
 6891 0016 C046     		nop
 6892 0018 BD46     		mov	sp, r7
 6893 001a 04B0     		add	sp, sp, #16
 6894              		@ sp needed
 6895 001c 80BD     		pop	{r7, pc}
 6896              		.cfi_endproc
 6897              	.LFE91:
 6899              		.section	.text.UART_DMAError,"ax",%progbits
 6900              		.align	1
 6901              		.syntax unified
 6902              		.code	16
 6903              		.thumb_func
 6904              		.fpu softvfp
 6906              	UART_DMAError:
 6907              	.LFB92:
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6908              		.loc 1 3321 1
 6909              		.cfi_startproc
 6910              		@ args = 0, pretend = 0, frame = 24
 6911              		@ frame_needed = 1, uses_anonymous_args = 0
 6912 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 179


 6913              	.LCFI156:
 6914              		.cfi_def_cfa_offset 8
 6915              		.cfi_offset 7, -8
 6916              		.cfi_offset 14, -4
 6917 0002 86B0     		sub	sp, sp, #24
 6918              	.LCFI157:
 6919              		.cfi_def_cfa_offset 32
 6920 0004 00AF     		add	r7, sp, #0
 6921              	.LCFI158:
 6922              		.cfi_def_cfa_register 7
 6923 0006 7860     		str	r0, [r7, #4]
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6924              		.loc 1 3322 23
 6925 0008 7B68     		ldr	r3, [r7, #4]
 6926 000a 5B6A     		ldr	r3, [r3, #36]
 6927 000c 7B61     		str	r3, [r7, #20]
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 6928              		.loc 1 3324 31
 6929 000e 7B69     		ldr	r3, [r7, #20]
 6930 0010 5B6F     		ldr	r3, [r3, #116]
 6931 0012 3B61     		str	r3, [r7, #16]
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 6932              		.loc 1 3325 31
 6933 0014 7B69     		ldr	r3, [r7, #20]
 6934 0016 9B6F     		ldr	r3, [r3, #120]
 6935 0018 FB60     		str	r3, [r7, #12]
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 6936              		.loc 1 3328 8
 6937 001a 7B69     		ldr	r3, [r7, #20]
 6938 001c 1B68     		ldr	r3, [r3]
 6939 001e 9B68     		ldr	r3, [r3, #8]
 6940 0020 8022     		movs	r2, #128
 6941 0022 1340     		ands	r3, r2
 6942              		.loc 1 3328 6
 6943 0024 802B     		cmp	r3, #128
 6944 0026 0AD1     		bne	.L347
 6945              		.loc 1 3328 62 discriminator 1
 6946 0028 3B69     		ldr	r3, [r7, #16]
 6947 002a 212B     		cmp	r3, #33
 6948 002c 07D1     		bne	.L347
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6949              		.loc 1 3331 24
 6950 002e 7B69     		ldr	r3, [r7, #20]
 6951 0030 5222     		movs	r2, #82
 6952 0032 0021     		movs	r1, #0
 6953 0034 9952     		strh	r1, [r3, r2]
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6954              		.loc 1 3332 5
 6955 0036 7B69     		ldr	r3, [r7, #20]
 6956 0038 1800     		movs	r0, r3
 6957 003a FFF7FEFF 		bl	UART_EndTxTransfer
 6958              	.L347:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 180


3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 6959              		.loc 1 3336 8
 6960 003e 7B69     		ldr	r3, [r7, #20]
 6961 0040 1B68     		ldr	r3, [r3]
 6962 0042 9B68     		ldr	r3, [r3, #8]
 6963 0044 4022     		movs	r2, #64
 6964 0046 1340     		ands	r3, r2
 6965              		.loc 1 3336 6
 6966 0048 402B     		cmp	r3, #64
 6967 004a 0AD1     		bne	.L348
 6968              		.loc 1 3336 62 discriminator 1
 6969 004c FB68     		ldr	r3, [r7, #12]
 6970 004e 222B     		cmp	r3, #34
 6971 0050 07D1     		bne	.L348
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6972              		.loc 1 3339 24
 6973 0052 7B69     		ldr	r3, [r7, #20]
 6974 0054 5A22     		movs	r2, #90
 6975 0056 0021     		movs	r1, #0
 6976 0058 9952     		strh	r1, [r3, r2]
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6977              		.loc 1 3340 5
 6978 005a 7B69     		ldr	r3, [r7, #20]
 6979 005c 1800     		movs	r0, r3
 6980 005e FFF7FEFF 		bl	UART_EndRxTransfer
 6981              	.L348:
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6982              		.loc 1 3343 20
 6983 0062 7B69     		ldr	r3, [r7, #20]
 6984 0064 DB6F     		ldr	r3, [r3, #124]
 6985 0066 1022     		movs	r2, #16
 6986 0068 1A43     		orrs	r2, r3
 6987 006a 7B69     		ldr	r3, [r7, #20]
 6988 006c DA67     		str	r2, [r3, #124]
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6989              		.loc 1 3350 3
 6990 006e 7B69     		ldr	r3, [r7, #20]
 6991 0070 1800     		movs	r0, r3
 6992 0072 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6993              		.loc 1 3352 1
 6994 0076 C046     		nop
 6995 0078 BD46     		mov	sp, r7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 181


 6996 007a 06B0     		add	sp, sp, #24
 6997              		@ sp needed
 6998 007c 80BD     		pop	{r7, pc}
 6999              		.cfi_endproc
 7000              	.LFE92:
 7002              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 7003              		.align	1
 7004              		.syntax unified
 7005              		.code	16
 7006              		.thumb_func
 7007              		.fpu softvfp
 7009              	UART_DMAAbortOnError:
 7010              	.LFB93:
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7011              		.loc 1 3361 1
 7012              		.cfi_startproc
 7013              		@ args = 0, pretend = 0, frame = 16
 7014              		@ frame_needed = 1, uses_anonymous_args = 0
 7015 0000 80B5     		push	{r7, lr}
 7016              	.LCFI159:
 7017              		.cfi_def_cfa_offset 8
 7018              		.cfi_offset 7, -8
 7019              		.cfi_offset 14, -4
 7020 0002 84B0     		sub	sp, sp, #16
 7021              	.LCFI160:
 7022              		.cfi_def_cfa_offset 24
 7023 0004 00AF     		add	r7, sp, #0
 7024              	.LCFI161:
 7025              		.cfi_def_cfa_register 7
 7026 0006 7860     		str	r0, [r7, #4]
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7027              		.loc 1 3362 23
 7028 0008 7B68     		ldr	r3, [r7, #4]
 7029 000a 5B6A     		ldr	r3, [r3, #36]
 7030 000c FB60     		str	r3, [r7, #12]
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7031              		.loc 1 3363 22
 7032 000e FB68     		ldr	r3, [r7, #12]
 7033 0010 5A22     		movs	r2, #90
 7034 0012 0021     		movs	r1, #0
 7035 0014 9952     		strh	r1, [r3, r2]
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7036              		.loc 1 3364 22
 7037 0016 FB68     		ldr	r3, [r7, #12]
 7038 0018 5222     		movs	r2, #82
 7039 001a 0021     		movs	r1, #0
 7040 001c 9952     		strh	r1, [r3, r2]
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 182


3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7041              		.loc 1 3371 3
 7042 001e FB68     		ldr	r3, [r7, #12]
 7043 0020 1800     		movs	r0, r3
 7044 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7045              		.loc 1 3373 1
 7046 0026 C046     		nop
 7047 0028 BD46     		mov	sp, r7
 7048 002a 04B0     		add	sp, sp, #16
 7049              		@ sp needed
 7050 002c 80BD     		pop	{r7, pc}
 7051              		.cfi_endproc
 7052              	.LFE93:
 7054              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 7055              		.align	1
 7056              		.syntax unified
 7057              		.code	16
 7058              		.thumb_func
 7059              		.fpu softvfp
 7061              	UART_DMATxAbortCallback:
 7062              	.LFB94:
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7063              		.loc 1 3384 1
 7064              		.cfi_startproc
 7065              		@ args = 0, pretend = 0, frame = 16
 7066              		@ frame_needed = 1, uses_anonymous_args = 0
 7067 0000 80B5     		push	{r7, lr}
 7068              	.LCFI162:
 7069              		.cfi_def_cfa_offset 8
 7070              		.cfi_offset 7, -8
 7071              		.cfi_offset 14, -4
 7072 0002 84B0     		sub	sp, sp, #16
 7073              	.LCFI163:
 7074              		.cfi_def_cfa_offset 24
 7075 0004 00AF     		add	r7, sp, #0
 7076              	.LCFI164:
 7077              		.cfi_def_cfa_register 7
 7078 0006 7860     		str	r0, [r7, #4]
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7079              		.loc 1 3385 23
 7080 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 183


 7081 000a 5B6A     		ldr	r3, [r3, #36]
 7082 000c FB60     		str	r3, [r7, #12]
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 7083              		.loc 1 3387 8
 7084 000e FB68     		ldr	r3, [r7, #12]
 7085 0010 9B6E     		ldr	r3, [r3, #104]
 7086              		.loc 1 3387 36
 7087 0012 0022     		movs	r2, #0
 7088 0014 5A63     		str	r2, [r3, #52]
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 7089              		.loc 1 3390 12
 7090 0016 FB68     		ldr	r3, [r7, #12]
 7091 0018 DB6E     		ldr	r3, [r3, #108]
 7092              		.loc 1 3390 6
 7093 001a 002B     		cmp	r3, #0
 7094 001c 04D0     		beq	.L351
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 7095              		.loc 1 3392 14
 7096 001e FB68     		ldr	r3, [r7, #12]
 7097 0020 DB6E     		ldr	r3, [r3, #108]
 7098              		.loc 1 3392 22
 7099 0022 5B6B     		ldr	r3, [r3, #52]
 7100              		.loc 1 3392 8
 7101 0024 002B     		cmp	r3, #0
 7102 0026 19D1     		bne	.L353
 7103              	.L351:
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7104              		.loc 1 3399 22
 7105 0028 FB68     		ldr	r3, [r7, #12]
 7106 002a 5222     		movs	r2, #82
 7107 002c 0021     		movs	r1, #0
 7108 002e 9952     		strh	r1, [r3, r2]
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7109              		.loc 1 3400 22
 7110 0030 FB68     		ldr	r3, [r7, #12]
 7111 0032 5A22     		movs	r2, #90
 7112 0034 0021     		movs	r1, #0
 7113 0036 9952     		strh	r1, [r3, r2]
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7114              		.loc 1 3403 20
 7115 0038 FB68     		ldr	r3, [r7, #12]
 7116 003a 0022     		movs	r2, #0
 7117 003c DA67     		str	r2, [r3, #124]
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 184


3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7118              		.loc 1 3406 3
 7119 003e FB68     		ldr	r3, [r7, #12]
 7120 0040 1B68     		ldr	r3, [r3]
 7121 0042 0F22     		movs	r2, #15
 7122 0044 1A62     		str	r2, [r3, #32]
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 7123              		.loc 1 3410 18
 7124 0046 FB68     		ldr	r3, [r7, #12]
 7125 0048 2022     		movs	r2, #32
 7126 004a 5A67     		str	r2, [r3, #116]
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7127              		.loc 1 3411 18
 7128 004c FB68     		ldr	r3, [r7, #12]
 7129 004e 2022     		movs	r2, #32
 7130 0050 9A67     		str	r2, [r3, #120]
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 7131              		.loc 1 3419 3
 7132 0052 FB68     		ldr	r3, [r7, #12]
 7133 0054 1800     		movs	r0, r3
 7134 0056 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 7135 005a 00E0     		b	.L350
 7136              	.L353:
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7137              		.loc 1 3394 7
 7138 005c C046     		nop
 7139              	.L350:
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7140              		.loc 1 3421 1
 7141 005e BD46     		mov	sp, r7
 7142 0060 04B0     		add	sp, sp, #16
 7143              		@ sp needed
 7144 0062 80BD     		pop	{r7, pc}
 7145              		.cfi_endproc
 7146              	.LFE94:
 7148              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 7149              		.align	1
 7150              		.syntax unified
 7151              		.code	16
 7152              		.thumb_func
 7153              		.fpu softvfp
 7155              	UART_DMARxAbortCallback:
 7156              	.LFB95:
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 185


3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7157              		.loc 1 3433 1
 7158              		.cfi_startproc
 7159              		@ args = 0, pretend = 0, frame = 16
 7160              		@ frame_needed = 1, uses_anonymous_args = 0
 7161 0000 80B5     		push	{r7, lr}
 7162              	.LCFI165:
 7163              		.cfi_def_cfa_offset 8
 7164              		.cfi_offset 7, -8
 7165              		.cfi_offset 14, -4
 7166 0002 84B0     		sub	sp, sp, #16
 7167              	.LCFI166:
 7168              		.cfi_def_cfa_offset 24
 7169 0004 00AF     		add	r7, sp, #0
 7170              	.LCFI167:
 7171              		.cfi_def_cfa_register 7
 7172 0006 7860     		str	r0, [r7, #4]
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7173              		.loc 1 3434 23
 7174 0008 7B68     		ldr	r3, [r7, #4]
 7175 000a 5B6A     		ldr	r3, [r3, #36]
 7176 000c FB60     		str	r3, [r7, #12]
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 7177              		.loc 1 3436 8
 7178 000e FB68     		ldr	r3, [r7, #12]
 7179 0010 DB6E     		ldr	r3, [r3, #108]
 7180              		.loc 1 3436 36
 7181 0012 0022     		movs	r2, #0
 7182 0014 5A63     		str	r2, [r3, #52]
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 7183              		.loc 1 3439 12
 7184 0016 FB68     		ldr	r3, [r7, #12]
 7185 0018 9B6E     		ldr	r3, [r3, #104]
 7186              		.loc 1 3439 6
 7187 001a 002B     		cmp	r3, #0
 7188 001c 04D0     		beq	.L355
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 7189              		.loc 1 3441 14
 7190 001e FB68     		ldr	r3, [r7, #12]
 7191 0020 9B6E     		ldr	r3, [r3, #104]
 7192              		.loc 1 3441 22
 7193 0022 5B6B     		ldr	r3, [r3, #52]
 7194              		.loc 1 3441 8
 7195 0024 002B     		cmp	r3, #0
 7196 0026 21D1     		bne	.L357
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 186


 7197              	.L355:
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7198              		.loc 1 3448 22
 7199 0028 FB68     		ldr	r3, [r7, #12]
 7200 002a 5222     		movs	r2, #82
 7201 002c 0021     		movs	r1, #0
 7202 002e 9952     		strh	r1, [r3, r2]
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7203              		.loc 1 3449 22
 7204 0030 FB68     		ldr	r3, [r7, #12]
 7205 0032 5A22     		movs	r2, #90
 7206 0034 0021     		movs	r1, #0
 7207 0036 9952     		strh	r1, [r3, r2]
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7208              		.loc 1 3452 20
 7209 0038 FB68     		ldr	r3, [r7, #12]
 7210 003a 0022     		movs	r2, #0
 7211 003c DA67     		str	r2, [r3, #124]
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7212              		.loc 1 3455 3
 7213 003e FB68     		ldr	r3, [r7, #12]
 7214 0040 1B68     		ldr	r3, [r3]
 7215 0042 0F22     		movs	r2, #15
 7216 0044 1A62     		str	r2, [r3, #32]
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 7217              		.loc 1 3458 3
 7218 0046 FB68     		ldr	r3, [r7, #12]
 7219 0048 1B68     		ldr	r3, [r3]
 7220 004a 9A69     		ldr	r2, [r3, #24]
 7221 004c FB68     		ldr	r3, [r7, #12]
 7222 004e 1B68     		ldr	r3, [r3]
 7223 0050 0821     		movs	r1, #8
 7224 0052 0A43     		orrs	r2, r1
 7225 0054 9A61     		str	r2, [r3, #24]
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 7226              		.loc 1 3461 18
 7227 0056 FB68     		ldr	r3, [r7, #12]
 7228 0058 2022     		movs	r2, #32
 7229 005a 5A67     		str	r2, [r3, #116]
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7230              		.loc 1 3462 18
 7231 005c FB68     		ldr	r3, [r7, #12]
 7232 005e 2022     		movs	r2, #32
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 187


 7233 0060 9A67     		str	r2, [r3, #120]
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 7234              		.loc 1 3470 3
 7235 0062 FB68     		ldr	r3, [r7, #12]
 7236 0064 1800     		movs	r0, r3
 7237 0066 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 7238 006a 00E0     		b	.L354
 7239              	.L357:
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7240              		.loc 1 3443 7
 7241 006c C046     		nop
 7242              	.L354:
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7243              		.loc 1 3472 1
 7244 006e BD46     		mov	sp, r7
 7245 0070 04B0     		add	sp, sp, #16
 7246              		@ sp needed
 7247 0072 80BD     		pop	{r7, pc}
 7248              		.cfi_endproc
 7249              	.LFE95:
 7251              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 7252              		.align	1
 7253              		.syntax unified
 7254              		.code	16
 7255              		.thumb_func
 7256              		.fpu softvfp
 7258              	UART_DMATxOnlyAbortCallback:
 7259              	.LFB96:
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7260              		.loc 1 3484 1
 7261              		.cfi_startproc
 7262              		@ args = 0, pretend = 0, frame = 16
 7263              		@ frame_needed = 1, uses_anonymous_args = 0
 7264 0000 80B5     		push	{r7, lr}
 7265              	.LCFI168:
 7266              		.cfi_def_cfa_offset 8
 7267              		.cfi_offset 7, -8
 7268              		.cfi_offset 14, -4
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 188


 7269 0002 84B0     		sub	sp, sp, #16
 7270              	.LCFI169:
 7271              		.cfi_def_cfa_offset 24
 7272 0004 00AF     		add	r7, sp, #0
 7273              	.LCFI170:
 7274              		.cfi_def_cfa_register 7
 7275 0006 7860     		str	r0, [r7, #4]
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7276              		.loc 1 3485 23
 7277 0008 7B68     		ldr	r3, [r7, #4]
 7278 000a 5B6A     		ldr	r3, [r3, #36]
 7279 000c FB60     		str	r3, [r7, #12]
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7280              		.loc 1 3487 22
 7281 000e FB68     		ldr	r3, [r7, #12]
 7282 0010 5222     		movs	r2, #82
 7283 0012 0021     		movs	r1, #0
 7284 0014 9952     		strh	r1, [r3, r2]
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7285              		.loc 1 3491 17
 7286 0016 FB68     		ldr	r3, [r7, #12]
 7287 0018 2022     		movs	r2, #32
 7288 001a 5A67     		str	r2, [r3, #116]
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 7289              		.loc 1 3499 3
 7290 001c FB68     		ldr	r3, [r7, #12]
 7291 001e 1800     		movs	r0, r3
 7292 0020 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7293              		.loc 1 3501 1
 7294 0024 C046     		nop
 7295 0026 BD46     		mov	sp, r7
 7296 0028 04B0     		add	sp, sp, #16
 7297              		@ sp needed
 7298 002a 80BD     		pop	{r7, pc}
 7299              		.cfi_endproc
 7300              	.LFE96:
 7302              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 7303              		.align	1
 7304              		.syntax unified
 7305              		.code	16
 7306              		.thumb_func
 7307              		.fpu softvfp
 7309              	UART_DMARxOnlyAbortCallback:
 7310              	.LFB97:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 189


3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7311              		.loc 1 3512 1
 7312              		.cfi_startproc
 7313              		@ args = 0, pretend = 0, frame = 16
 7314              		@ frame_needed = 1, uses_anonymous_args = 0
 7315 0000 80B5     		push	{r7, lr}
 7316              	.LCFI171:
 7317              		.cfi_def_cfa_offset 8
 7318              		.cfi_offset 7, -8
 7319              		.cfi_offset 14, -4
 7320 0002 84B0     		sub	sp, sp, #16
 7321              	.LCFI172:
 7322              		.cfi_def_cfa_offset 24
 7323 0004 00AF     		add	r7, sp, #0
 7324              	.LCFI173:
 7325              		.cfi_def_cfa_register 7
 7326 0006 7860     		str	r0, [r7, #4]
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7327              		.loc 1 3513 23
 7328 0008 7B68     		ldr	r3, [r7, #4]
 7329 000a 5B6A     		ldr	r3, [r3, #36]
 7330 000c FB60     		str	r3, [r7, #12]
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7331              		.loc 1 3515 22
 7332 000e FB68     		ldr	r3, [r7, #12]
 7333 0010 5A22     		movs	r2, #90
 7334 0012 0021     		movs	r1, #0
 7335 0014 9952     		strh	r1, [r3, r2]
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7336              		.loc 1 3518 3
 7337 0016 FB68     		ldr	r3, [r7, #12]
 7338 0018 1B68     		ldr	r3, [r3]
 7339 001a 0F22     		movs	r2, #15
 7340 001c 1A62     		str	r2, [r3, #32]
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 7341              		.loc 1 3521 3
 7342 001e FB68     		ldr	r3, [r7, #12]
 7343 0020 1B68     		ldr	r3, [r3]
 7344 0022 9A69     		ldr	r2, [r3, #24]
 7345 0024 FB68     		ldr	r3, [r7, #12]
 7346 0026 1B68     		ldr	r3, [r3]
 7347 0028 0821     		movs	r1, #8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 190


 7348 002a 0A43     		orrs	r2, r1
 7349 002c 9A61     		str	r2, [r3, #24]
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7350              		.loc 1 3524 18
 7351 002e FB68     		ldr	r3, [r7, #12]
 7352 0030 2022     		movs	r2, #32
 7353 0032 9A67     		str	r2, [r3, #120]
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 7354              		.loc 1 3532 3
 7355 0034 FB68     		ldr	r3, [r7, #12]
 7356 0036 1800     		movs	r0, r3
 7357 0038 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7358              		.loc 1 3534 1
 7359 003c C046     		nop
 7360 003e BD46     		mov	sp, r7
 7361 0040 04B0     		add	sp, sp, #16
 7362              		@ sp needed
 7363 0042 80BD     		pop	{r7, pc}
 7364              		.cfi_endproc
 7365              	.LFE97:
 7367              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 7368              		.align	1
 7369              		.syntax unified
 7370              		.code	16
 7371              		.thumb_func
 7372              		.fpu softvfp
 7374              	UART_TxISR_8BIT:
 7375              	.LFB98:
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7376              		.loc 1 3544 1
 7377              		.cfi_startproc
 7378              		@ args = 0, pretend = 0, frame = 8
 7379              		@ frame_needed = 1, uses_anonymous_args = 0
 7380 0000 80B5     		push	{r7, lr}
 7381              	.LCFI174:
 7382              		.cfi_def_cfa_offset 8
 7383              		.cfi_offset 7, -8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 191


 7384              		.cfi_offset 14, -4
 7385 0002 82B0     		sub	sp, sp, #8
 7386              	.LCFI175:
 7387              		.cfi_def_cfa_offset 16
 7388 0004 00AF     		add	r7, sp, #0
 7389              	.LCFI176:
 7390              		.cfi_def_cfa_register 7
 7391 0006 7860     		str	r0, [r7, #4]
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7392              		.loc 1 3546 12
 7393 0008 7B68     		ldr	r3, [r7, #4]
 7394 000a 5B6F     		ldr	r3, [r3, #116]
 7395              		.loc 1 3546 6
 7396 000c 212B     		cmp	r3, #33
 7397 000e 2BD1     		bne	.L363
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7398              		.loc 1 3548 14
 7399 0010 7B68     		ldr	r3, [r7, #4]
 7400 0012 5222     		movs	r2, #82
 7401 0014 9B5A     		ldrh	r3, [r3, r2]
 7402 0016 9BB2     		uxth	r3, r3
 7403              		.loc 1 3548 8
 7404 0018 002B     		cmp	r3, #0
 7405 001a 10D1     		bne	.L362
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7406              		.loc 1 3551 7
 7407 001c 7B68     		ldr	r3, [r7, #4]
 7408 001e 1B68     		ldr	r3, [r3]
 7409 0020 1A68     		ldr	r2, [r3]
 7410 0022 7B68     		ldr	r3, [r7, #4]
 7411 0024 1B68     		ldr	r3, [r3]
 7412 0026 8021     		movs	r1, #128
 7413 0028 8A43     		bics	r2, r1
 7414 002a 1A60     		str	r2, [r3]
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7415              		.loc 1 3554 7
 7416 002c 7B68     		ldr	r3, [r7, #4]
 7417 002e 1B68     		ldr	r3, [r3]
 7418 0030 1A68     		ldr	r2, [r3]
 7419 0032 7B68     		ldr	r3, [r7, #4]
 7420 0034 1B68     		ldr	r3, [r3]
 7421 0036 4021     		movs	r1, #64
 7422 0038 0A43     		orrs	r2, r1
 7423 003a 1A60     		str	r2, [r3]
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 192


3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7424              		.loc 1 3563 1
 7425 003c 14E0     		b	.L363
 7426              	.L362:
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7427              		.loc 1 3558 46
 7428 003e 7B68     		ldr	r3, [r7, #4]
 7429 0040 DB6C     		ldr	r3, [r3, #76]
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7430              		.loc 1 3558 40
 7431 0042 1A78     		ldrb	r2, [r3]
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7432              		.loc 1 3558 12
 7433 0044 7B68     		ldr	r3, [r7, #4]
 7434 0046 1B68     		ldr	r3, [r3]
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7435              		.loc 1 3558 30
 7436 0048 92B2     		uxth	r2, r2
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7437              		.loc 1 3558 28
 7438 004a 1A85     		strh	r2, [r3, #40]
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 7439              		.loc 1 3559 12
 7440 004c 7B68     		ldr	r3, [r7, #4]
 7441 004e DB6C     		ldr	r3, [r3, #76]
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 7442              		.loc 1 3559 24
 7443 0050 5A1C     		adds	r2, r3, #1
 7444 0052 7B68     		ldr	r3, [r7, #4]
 7445 0054 DA64     		str	r2, [r3, #76]
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7446              		.loc 1 3560 12
 7447 0056 7B68     		ldr	r3, [r7, #4]
 7448 0058 5222     		movs	r2, #82
 7449 005a 9B5A     		ldrh	r3, [r3, r2]
 7450 005c 9BB2     		uxth	r3, r3
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7451              		.loc 1 3560 25
 7452 005e 013B     		subs	r3, r3, #1
 7453 0060 99B2     		uxth	r1, r3
 7454 0062 7B68     		ldr	r3, [r7, #4]
 7455 0064 5222     		movs	r2, #82
 7456 0066 9952     		strh	r1, [r3, r2]
 7457              	.L363:
 7458              		.loc 1 3563 1
 7459 0068 C046     		nop
 7460 006a BD46     		mov	sp, r7
 7461 006c 02B0     		add	sp, sp, #8
 7462              		@ sp needed
 7463 006e 80BD     		pop	{r7, pc}
 7464              		.cfi_endproc
 7465              	.LFE98:
 7467              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 7468              		.align	1
 7469              		.syntax unified
 7470              		.code	16
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 193


 7471              		.thumb_func
 7472              		.fpu softvfp
 7474              	UART_TxISR_16BIT:
 7475              	.LFB99:
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7476              		.loc 1 3573 1
 7477              		.cfi_startproc
 7478              		@ args = 0, pretend = 0, frame = 16
 7479              		@ frame_needed = 1, uses_anonymous_args = 0
 7480 0000 80B5     		push	{r7, lr}
 7481              	.LCFI177:
 7482              		.cfi_def_cfa_offset 8
 7483              		.cfi_offset 7, -8
 7484              		.cfi_offset 14, -4
 7485 0002 84B0     		sub	sp, sp, #16
 7486              	.LCFI178:
 7487              		.cfi_def_cfa_offset 24
 7488 0004 00AF     		add	r7, sp, #0
 7489              	.LCFI179:
 7490              		.cfi_def_cfa_register 7
 7491 0006 7860     		str	r0, [r7, #4]
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7492              		.loc 1 3577 12
 7493 0008 7B68     		ldr	r3, [r7, #4]
 7494 000a 5B6F     		ldr	r3, [r3, #116]
 7495              		.loc 1 3577 6
 7496 000c 212B     		cmp	r3, #33
 7497 000e 2FD1     		bne	.L367
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7498              		.loc 1 3579 14
 7499 0010 7B68     		ldr	r3, [r7, #4]
 7500 0012 5222     		movs	r2, #82
 7501 0014 9B5A     		ldrh	r3, [r3, r2]
 7502 0016 9BB2     		uxth	r3, r3
 7503              		.loc 1 3579 8
 7504 0018 002B     		cmp	r3, #0
 7505 001a 10D1     		bne	.L366
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7506              		.loc 1 3582 7
 7507 001c 7B68     		ldr	r3, [r7, #4]
 7508 001e 1B68     		ldr	r3, [r3]
 7509 0020 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 194


 7510 0022 7B68     		ldr	r3, [r7, #4]
 7511 0024 1B68     		ldr	r3, [r3]
 7512 0026 8021     		movs	r1, #128
 7513 0028 8A43     		bics	r2, r1
 7514 002a 1A60     		str	r2, [r3]
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7515              		.loc 1 3585 7
 7516 002c 7B68     		ldr	r3, [r7, #4]
 7517 002e 1B68     		ldr	r3, [r3]
 7518 0030 1A68     		ldr	r2, [r3]
 7519 0032 7B68     		ldr	r3, [r7, #4]
 7520 0034 1B68     		ldr	r3, [r3]
 7521 0036 4021     		movs	r1, #64
 7522 0038 0A43     		orrs	r2, r1
 7523 003a 1A60     		str	r2, [r3]
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7524              		.loc 1 3595 1
 7525 003c 18E0     		b	.L367
 7526              	.L366:
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 7527              		.loc 1 3589 11
 7528 003e 7B68     		ldr	r3, [r7, #4]
 7529 0040 DB6C     		ldr	r3, [r3, #76]
 7530 0042 FB60     		str	r3, [r7, #12]
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7531              		.loc 1 3590 43
 7532 0044 FB68     		ldr	r3, [r7, #12]
 7533 0046 1A88     		ldrh	r2, [r3]
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7534              		.loc 1 3590 12
 7535 0048 7B68     		ldr	r3, [r7, #4]
 7536 004a 1B68     		ldr	r3, [r3]
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7537              		.loc 1 3590 50
 7538 004c D205     		lsls	r2, r2, #23
 7539 004e D20D     		lsrs	r2, r2, #23
 7540 0050 92B2     		uxth	r2, r2
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7541              		.loc 1 3590 28
 7542 0052 1A85     		strh	r2, [r3, #40]
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 7543              		.loc 1 3591 25
 7544 0054 7B68     		ldr	r3, [r7, #4]
 7545 0056 DB6C     		ldr	r3, [r3, #76]
 7546 0058 9A1C     		adds	r2, r3, #2
 7547 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 195


 7548 005c DA64     		str	r2, [r3, #76]
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7549              		.loc 1 3592 12
 7550 005e 7B68     		ldr	r3, [r7, #4]
 7551 0060 5222     		movs	r2, #82
 7552 0062 9B5A     		ldrh	r3, [r3, r2]
 7553 0064 9BB2     		uxth	r3, r3
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7554              		.loc 1 3592 25
 7555 0066 013B     		subs	r3, r3, #1
 7556 0068 99B2     		uxth	r1, r3
 7557 006a 7B68     		ldr	r3, [r7, #4]
 7558 006c 5222     		movs	r2, #82
 7559 006e 9952     		strh	r1, [r3, r2]
 7560              	.L367:
 7561              		.loc 1 3595 1
 7562 0070 C046     		nop
 7563 0072 BD46     		mov	sp, r7
 7564 0074 04B0     		add	sp, sp, #16
 7565              		@ sp needed
 7566 0076 80BD     		pop	{r7, pc}
 7567              		.cfi_endproc
 7568              	.LFE99:
 7570              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 7571              		.align	1
 7572              		.syntax unified
 7573              		.code	16
 7574              		.thumb_func
 7575              		.fpu softvfp
 7577              	UART_EndTransmit_IT:
 7578              	.LFB100:
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7579              		.loc 1 3605 1
 7580              		.cfi_startproc
 7581              		@ args = 0, pretend = 0, frame = 8
 7582              		@ frame_needed = 1, uses_anonymous_args = 0
 7583 0000 80B5     		push	{r7, lr}
 7584              	.LCFI180:
 7585              		.cfi_def_cfa_offset 8
 7586              		.cfi_offset 7, -8
 7587              		.cfi_offset 14, -4
 7588 0002 82B0     		sub	sp, sp, #8
 7589              	.LCFI181:
 7590              		.cfi_def_cfa_offset 16
 7591 0004 00AF     		add	r7, sp, #0
 7592              	.LCFI182:
 7593              		.cfi_def_cfa_register 7
 7594 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 196


3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7595              		.loc 1 3607 3
 7596 0008 7B68     		ldr	r3, [r7, #4]
 7597 000a 1B68     		ldr	r3, [r3]
 7598 000c 1A68     		ldr	r2, [r3]
 7599 000e 7B68     		ldr	r3, [r7, #4]
 7600 0010 1B68     		ldr	r3, [r3]
 7601 0012 4021     		movs	r1, #64
 7602 0014 8A43     		bics	r2, r1
 7603 0016 1A60     		str	r2, [r3]
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7604              		.loc 1 3610 17
 7605 0018 7B68     		ldr	r3, [r7, #4]
 7606 001a 2022     		movs	r2, #32
 7607 001c 5A67     		str	r2, [r3, #116]
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 7608              		.loc 1 3613 16
 7609 001e 7B68     		ldr	r3, [r7, #4]
 7610 0020 0022     		movs	r2, #0
 7611 0022 5A66     		str	r2, [r3, #100]
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 7612              		.loc 1 3620 3
 7613 0024 7B68     		ldr	r3, [r7, #4]
 7614 0026 1800     		movs	r0, r3
 7615 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7616              		.loc 1 3622 1
 7617 002c C046     		nop
 7618 002e BD46     		mov	sp, r7
 7619 0030 02B0     		add	sp, sp, #8
 7620              		@ sp needed
 7621 0032 80BD     		pop	{r7, pc}
 7622              		.cfi_endproc
 7623              	.LFE100:
 7625              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 7626              		.align	1
 7627              		.syntax unified
 7628              		.code	16
 7629              		.thumb_func
 7630              		.fpu softvfp
 7632              	UART_RxISR_8BIT:
 7633              	.LFB101:
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 197


3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7634              		.loc 1 3630 1
 7635              		.cfi_startproc
 7636              		@ args = 0, pretend = 0, frame = 16
 7637              		@ frame_needed = 1, uses_anonymous_args = 0
 7638 0000 80B5     		push	{r7, lr}
 7639              	.LCFI183:
 7640              		.cfi_def_cfa_offset 8
 7641              		.cfi_offset 7, -8
 7642              		.cfi_offset 14, -4
 7643 0002 84B0     		sub	sp, sp, #16
 7644              	.LCFI184:
 7645              		.cfi_def_cfa_offset 24
 7646 0004 00AF     		add	r7, sp, #0
 7647              	.LCFI185:
 7648              		.cfi_def_cfa_register 7
 7649 0006 7860     		str	r0, [r7, #4]
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7650              		.loc 1 3631 12
 7651 0008 0E20     		movs	r0, #14
 7652 000a 3B18     		adds	r3, r7, r0
 7653 000c 7A68     		ldr	r2, [r7, #4]
 7654 000e 5C21     		movs	r1, #92
 7655 0010 525A     		ldrh	r2, [r2, r1]
 7656 0012 1A80     		strh	r2, [r3]
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7657              		.loc 1 3635 12
 7658 0014 7B68     		ldr	r3, [r7, #4]
 7659 0016 9B6F     		ldr	r3, [r3, #120]
 7660              		.loc 1 3635 6
 7661 0018 222B     		cmp	r3, #34
 7662 001a 3FD1     		bne	.L370
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7663              		.loc 1 3637 25
 7664 001c 7B68     		ldr	r3, [r7, #4]
 7665 001e 1A68     		ldr	r2, [r3]
 7666              		.loc 1 3637 12
 7667 0020 0C21     		movs	r1, #12
 7668 0022 7B18     		adds	r3, r7, r1
 7669 0024 928C     		ldrh	r2, [r2, #36]
 7670 0026 1A80     		strh	r2, [r3]
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 7671              		.loc 1 3638 26
 7672 0028 7B18     		adds	r3, r7, r1
 7673 002a 1B88     		ldrh	r3, [r3]
 7674 002c DAB2     		uxtb	r2, r3
 7675              		.loc 1 3638 45
 7676 002e 3B18     		adds	r3, r7, r0
 7677 0030 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 198


 7678 0032 D9B2     		uxtb	r1, r3
 7679              		.loc 1 3638 11
 7680 0034 7B68     		ldr	r3, [r7, #4]
 7681 0036 5B6D     		ldr	r3, [r3, #84]
 7682              		.loc 1 3638 26
 7683 0038 0A40     		ands	r2, r1
 7684 003a D2B2     		uxtb	r2, r2
 7685              		.loc 1 3638 24
 7686 003c 1A70     		strb	r2, [r3]
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 7687              		.loc 1 3639 10
 7688 003e 7B68     		ldr	r3, [r7, #4]
 7689 0040 5B6D     		ldr	r3, [r3, #84]
 7690              		.loc 1 3639 22
 7691 0042 5A1C     		adds	r2, r3, #1
 7692 0044 7B68     		ldr	r3, [r7, #4]
 7693 0046 5A65     		str	r2, [r3, #84]
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 7694              		.loc 1 3640 10
 7695 0048 7B68     		ldr	r3, [r7, #4]
 7696 004a 5A22     		movs	r2, #90
 7697 004c 9B5A     		ldrh	r3, [r3, r2]
 7698 004e 9BB2     		uxth	r3, r3
 7699              		.loc 1 3640 23
 7700 0050 013B     		subs	r3, r3, #1
 7701 0052 99B2     		uxth	r1, r3
 7702 0054 7B68     		ldr	r3, [r7, #4]
 7703 0056 5A22     		movs	r2, #90
 7704 0058 9952     		strh	r1, [r3, r2]
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7705              		.loc 1 3642 14
 7706 005a 7B68     		ldr	r3, [r7, #4]
 7707 005c 5A22     		movs	r2, #90
 7708 005e 9B5A     		ldrh	r3, [r3, r2]
 7709 0060 9BB2     		uxth	r3, r3
 7710              		.loc 1 3642 8
 7711 0062 002B     		cmp	r3, #0
 7712 0064 22D1     		bne	.L372
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7713              		.loc 1 3645 7
 7714 0066 7B68     		ldr	r3, [r7, #4]
 7715 0068 1B68     		ldr	r3, [r3]
 7716 006a 1A68     		ldr	r2, [r3]
 7717 006c 7B68     		ldr	r3, [r7, #4]
 7718 006e 1B68     		ldr	r3, [r3]
 7719 0070 1049     		ldr	r1, .L373
 7720 0072 0A40     		ands	r2, r1
 7721 0074 1A60     		str	r2, [r3]
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7722              		.loc 1 3648 7
 7723 0076 7B68     		ldr	r3, [r7, #4]
 7724 0078 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 199


 7725 007a 9A68     		ldr	r2, [r3, #8]
 7726 007c 7B68     		ldr	r3, [r7, #4]
 7727 007e 1B68     		ldr	r3, [r3]
 7728 0080 0121     		movs	r1, #1
 7729 0082 8A43     		bics	r2, r1
 7730 0084 9A60     		str	r2, [r3, #8]
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7731              		.loc 1 3651 22
 7732 0086 7B68     		ldr	r3, [r7, #4]
 7733 0088 2022     		movs	r2, #32
 7734 008a 9A67     		str	r2, [r3, #120]
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 7735              		.loc 1 3654 20
 7736 008c 7B68     		ldr	r3, [r7, #4]
 7737 008e 0022     		movs	r2, #0
 7738 0090 1A66     		str	r2, [r3, #96]
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7739              		.loc 1 3661 7
 7740 0092 7B68     		ldr	r3, [r7, #4]
 7741 0094 1800     		movs	r0, r3
 7742 0096 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7743              		.loc 1 3670 1
 7744 009a 07E0     		b	.L372
 7745              	.L370:
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7746              		.loc 1 3668 5
 7747 009c 7B68     		ldr	r3, [r7, #4]
 7748 009e 1B68     		ldr	r3, [r3]
 7749 00a0 9A69     		ldr	r2, [r3, #24]
 7750 00a2 7B68     		ldr	r3, [r7, #4]
 7751 00a4 1B68     		ldr	r3, [r3]
 7752 00a6 0821     		movs	r1, #8
 7753 00a8 0A43     		orrs	r2, r1
 7754 00aa 9A61     		str	r2, [r3, #24]
 7755              	.L372:
 7756              		.loc 1 3670 1
 7757 00ac C046     		nop
 7758 00ae BD46     		mov	sp, r7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 200


 7759 00b0 04B0     		add	sp, sp, #16
 7760              		@ sp needed
 7761 00b2 80BD     		pop	{r7, pc}
 7762              	.L374:
 7763              		.align	2
 7764              	.L373:
 7765 00b4 DFFEFFFF 		.word	-289
 7766              		.cfi_endproc
 7767              	.LFE101:
 7769              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 7770              		.align	1
 7771              		.syntax unified
 7772              		.code	16
 7773              		.thumb_func
 7774              		.fpu softvfp
 7776              	UART_RxISR_16BIT:
 7777              	.LFB102:
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7778              		.loc 1 3680 1
 7779              		.cfi_startproc
 7780              		@ args = 0, pretend = 0, frame = 16
 7781              		@ frame_needed = 1, uses_anonymous_args = 0
 7782 0000 80B5     		push	{r7, lr}
 7783              	.LCFI186:
 7784              		.cfi_def_cfa_offset 8
 7785              		.cfi_offset 7, -8
 7786              		.cfi_offset 14, -4
 7787 0002 84B0     		sub	sp, sp, #16
 7788              	.LCFI187:
 7789              		.cfi_def_cfa_offset 24
 7790 0004 00AF     		add	r7, sp, #0
 7791              	.LCFI188:
 7792              		.cfi_def_cfa_register 7
 7793 0006 7860     		str	r0, [r7, #4]
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7794              		.loc 1 3682 12
 7795 0008 0E20     		movs	r0, #14
 7796 000a 3B18     		adds	r3, r7, r0
 7797 000c 7A68     		ldr	r2, [r7, #4]
 7798 000e 5C21     		movs	r1, #92
 7799 0010 525A     		ldrh	r2, [r2, r1]
 7800 0012 1A80     		strh	r2, [r3]
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7801              		.loc 1 3686 12
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 201


 7802 0014 7B68     		ldr	r3, [r7, #4]
 7803 0016 9B6F     		ldr	r3, [r3, #120]
 7804              		.loc 1 3686 6
 7805 0018 222B     		cmp	r3, #34
 7806 001a 3FD1     		bne	.L376
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7807              		.loc 1 3688 25
 7808 001c 7B68     		ldr	r3, [r7, #4]
 7809 001e 1A68     		ldr	r2, [r3]
 7810              		.loc 1 3688 12
 7811 0020 0C21     		movs	r1, #12
 7812 0022 7B18     		adds	r3, r7, r1
 7813 0024 928C     		ldrh	r2, [r2, #36]
 7814 0026 1A80     		strh	r2, [r3]
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 7815              		.loc 1 3689 9
 7816 0028 7B68     		ldr	r3, [r7, #4]
 7817 002a 5B6D     		ldr	r3, [r3, #84]
 7818 002c BB60     		str	r3, [r7, #8]
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 7819              		.loc 1 3690 12
 7820 002e 7B18     		adds	r3, r7, r1
 7821 0030 3A18     		adds	r2, r7, r0
 7822 0032 1B88     		ldrh	r3, [r3]
 7823 0034 1288     		ldrh	r2, [r2]
 7824 0036 1340     		ands	r3, r2
 7825 0038 9AB2     		uxth	r2, r3
 7826              		.loc 1 3690 10
 7827 003a BB68     		ldr	r3, [r7, #8]
 7828 003c 1A80     		strh	r2, [r3]
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 7829              		.loc 1 3691 23
 7830 003e 7B68     		ldr	r3, [r7, #4]
 7831 0040 5B6D     		ldr	r3, [r3, #84]
 7832 0042 9A1C     		adds	r2, r3, #2
 7833 0044 7B68     		ldr	r3, [r7, #4]
 7834 0046 5A65     		str	r2, [r3, #84]
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 7835              		.loc 1 3692 10
 7836 0048 7B68     		ldr	r3, [r7, #4]
 7837 004a 5A22     		movs	r2, #90
 7838 004c 9B5A     		ldrh	r3, [r3, r2]
 7839 004e 9BB2     		uxth	r3, r3
 7840              		.loc 1 3692 23
 7841 0050 013B     		subs	r3, r3, #1
 7842 0052 99B2     		uxth	r1, r3
 7843 0054 7B68     		ldr	r3, [r7, #4]
 7844 0056 5A22     		movs	r2, #90
 7845 0058 9952     		strh	r1, [r3, r2]
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7846              		.loc 1 3694 14
 7847 005a 7B68     		ldr	r3, [r7, #4]
 7848 005c 5A22     		movs	r2, #90
 7849 005e 9B5A     		ldrh	r3, [r3, r2]
 7850 0060 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 202


 7851              		.loc 1 3694 8
 7852 0062 002B     		cmp	r3, #0
 7853 0064 22D1     		bne	.L378
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7854              		.loc 1 3697 7
 7855 0066 7B68     		ldr	r3, [r7, #4]
 7856 0068 1B68     		ldr	r3, [r3]
 7857 006a 1A68     		ldr	r2, [r3]
 7858 006c 7B68     		ldr	r3, [r7, #4]
 7859 006e 1B68     		ldr	r3, [r3]
 7860 0070 1049     		ldr	r1, .L379
 7861 0072 0A40     		ands	r2, r1
 7862 0074 1A60     		str	r2, [r3]
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7863              		.loc 1 3700 7
 7864 0076 7B68     		ldr	r3, [r7, #4]
 7865 0078 1B68     		ldr	r3, [r3]
 7866 007a 9A68     		ldr	r2, [r3, #8]
 7867 007c 7B68     		ldr	r3, [r7, #4]
 7868 007e 1B68     		ldr	r3, [r3]
 7869 0080 0121     		movs	r1, #1
 7870 0082 8A43     		bics	r2, r1
 7871 0084 9A60     		str	r2, [r3, #8]
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7872              		.loc 1 3703 22
 7873 0086 7B68     		ldr	r3, [r7, #4]
 7874 0088 2022     		movs	r2, #32
 7875 008a 9A67     		str	r2, [r3, #120]
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 7876              		.loc 1 3706 20
 7877 008c 7B68     		ldr	r3, [r7, #4]
 7878 008e 0022     		movs	r2, #0
 7879 0090 1A66     		str	r2, [r3, #96]
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7880              		.loc 1 3713 7
 7881 0092 7B68     		ldr	r3, [r7, #4]
 7882 0094 1800     		movs	r0, r3
 7883 0096 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 203


3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7884              		.loc 1 3722 1
 7885 009a 07E0     		b	.L378
 7886              	.L376:
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7887              		.loc 1 3720 5
 7888 009c 7B68     		ldr	r3, [r7, #4]
 7889 009e 1B68     		ldr	r3, [r3]
 7890 00a0 9A69     		ldr	r2, [r3, #24]
 7891 00a2 7B68     		ldr	r3, [r7, #4]
 7892 00a4 1B68     		ldr	r3, [r3]
 7893 00a6 0821     		movs	r1, #8
 7894 00a8 0A43     		orrs	r2, r1
 7895 00aa 9A61     		str	r2, [r3, #24]
 7896              	.L378:
 7897              		.loc 1 3722 1
 7898 00ac C046     		nop
 7899 00ae BD46     		mov	sp, r7
 7900 00b0 04B0     		add	sp, sp, #16
 7901              		@ sp needed
 7902 00b2 80BD     		pop	{r7, pc}
 7903              	.L380:
 7904              		.align	2
 7905              	.L379:
 7906 00b4 DFFEFFFF 		.word	-289
 7907              		.cfi_endproc
 7908              	.LFE102:
 7910              		.text
 7911              	.Letext0:
 7912              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 7913              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 7914              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 7915              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 7916              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 7917              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 7918              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 7919              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 7920              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 204


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:16     .text.HAL_UART_Init:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:24     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:744    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5281   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6008   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6244   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:145    .text.HAL_UART_Init:000000a4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:150    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:157    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:286    .text.HAL_HalfDuplex_Init:000000b4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:291    .text.HAL_LIN_Init:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:298    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:463    .text.HAL_LIN_Init:000000ec $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:468    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:475    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:633    .text.HAL_MultiProcessor_Init:000000e8 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:639    .text.HAL_UART_DeInit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:646    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:779    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:737    .text.HAL_UART_MspInit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:772    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:807    .text.HAL_UART_Transmit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:814    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6361   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1069   .text.HAL_UART_Receive:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1076   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1415   .text.HAL_UART_Receive:000001d4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1420   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1427   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1591   .text.HAL_UART_Transmit_IT:000000d4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7474   .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7374   .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1597   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1604   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1862   .text.HAL_UART_Receive_IT:00000164 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7776   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7632   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1869   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:1876   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2086   .text.HAL_UART_Transmit_DMA:00000114 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6658   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6733   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6906   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2093   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2100   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2318   .text.HAL_UART_Receive_DMA:00000124 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6775   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6864   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2325   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2332   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2454   .text.HAL_UART_DMAPause:000000a4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2459   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2466   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2573   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2580   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 205


C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6547   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6594   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2735   .text.HAL_UART_Abort:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2742   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2936   .text.HAL_UART_Abort:00000118 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2941   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:2948   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3052   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3059   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3185   .text.HAL_UART_AbortReceive:000000b0 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3190   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3197   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4430   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3451   .text.HAL_UART_Abort_IT:00000164 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7061   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7155   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3458   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3465   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4465   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3592   .text.HAL_UART_AbortTransmit_IT:000000a8 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7258   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3597   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3604   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4500   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3759   .text.HAL_UART_AbortReceive_IT:000000d8 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7309   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3765   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:3772   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4395   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7577   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4242   .text.HAL_UART_IRQHandler:00000270 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7009   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4248   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4255   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4283   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4290   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4318   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4325   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4353   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4360   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4388   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4423   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4458   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4493   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4528   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4535   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4575   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4582   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4661   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4668   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4745   .text.HAL_UART_DisableReceiverTimeout:00000058 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4750   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4757   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4824   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4831   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4896   .text.HAL_MultiProcessor_DisableMuteMode:0000004c $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4901   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s 			page 206


C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4908   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4945   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:4952   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5029   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5036   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5113   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5120   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5188   .text.HAL_UART_GetState:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5195   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5235   .text.HAL_UART_GetError:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5242   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5274   .text.UART_SetConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5824   .text.UART_SetConfig:0000033c $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5839   .text.UART_SetConfig:00000370 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:5996   .text.UART_SetConfig:0000045c $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6001   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6224   .text.UART_AdvFeatureConfig:00000144 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6237   .text.UART_CheckIdleState:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6349   .text.UART_CheckIdleState:00000084 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6354   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6536   .text.UART_WaitOnFlagUntilTimeout:000000f8 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6541   .text.UART_EndTxTransfer:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6588   .text.UART_EndRxTransfer:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6647   .text.UART_EndRxTransfer:0000003c $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6652   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6727   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6769   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6853   .text.UART_DMAReceiveCplt:00000064 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6858   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:6900   .text.UART_DMAError:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7003   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7055   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7149   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7252   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7303   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7368   .text.UART_TxISR_8BIT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7468   .text.UART_TxISR_16BIT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7571   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7626   .text.UART_RxISR_8BIT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7765   .text.UART_RxISR_8BIT:000000b4 $d
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7770   .text.UART_RxISR_16BIT:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccj23v1D.s:7906   .text.UART_RxISR_16BIT:000000b4 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq

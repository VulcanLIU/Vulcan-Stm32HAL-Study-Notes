ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB40:
  26              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   * @attention
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f0xx_it.c ****   *
  12:Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f0xx_it.c ****   *
  17:Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Src/stm32f0xx_it.c ****   */
  19:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f0xx_it.c **** 
  21:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f0xx_it.c **** #include "main.h"
  23:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f0xx_it.c **** 
  28:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f0xx_it.c **** 
  31:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 2


  33:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f0xx_it.c ****  
  36:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f0xx_it.c **** 
  41:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f0xx_it.c **** 
  51:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  60:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32f0xx_it.c **** 
  62:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  63:Src/stm32f0xx_it.c **** 
  64:Src/stm32f0xx_it.c **** /******************************************************************************/
  65:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  66:Src/stm32f0xx_it.c **** /******************************************************************************/
  67:Src/stm32f0xx_it.c **** /**
  68:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Src/stm32f0xx_it.c ****   */
  70:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  71:Src/stm32f0xx_it.c **** {
  27              		.loc 1 71 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  72:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Src/stm32f0xx_it.c **** 
  74:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Src/stm32f0xx_it.c **** 
  77:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 3


  78:Src/stm32f0xx_it.c **** }
  39              		.loc 1 78 1
  40 0004 C046     		nop
  41 0006 BD46     		mov	sp, r7
  42              		@ sp needed
  43 0008 80BD     		pop	{r7, pc}
  44              		.cfi_endproc
  45              	.LFE40:
  47              		.section	.text.HardFault_Handler,"ax",%progbits
  48              		.align	1
  49              		.global	HardFault_Handler
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  53              		.fpu softvfp
  55              	HardFault_Handler:
  56              	.LFB41:
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c **** /**
  81:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Src/stm32f0xx_it.c ****   */
  83:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  84:Src/stm32f0xx_it.c **** {
  57              		.loc 1 84 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI3:
  68              		.cfi_def_cfa_register 7
  69              	.L3:
  85:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Src/stm32f0xx_it.c **** 
  87:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Src/stm32f0xx_it.c ****   while (1)
  70              		.loc 1 88 9 discriminator 1
  71 0004 FEE7     		b	.L3
  72              		.cfi_endproc
  73              	.LFE41:
  75              		.section	.text.SVC_Handler,"ax",%progbits
  76              		.align	1
  77              		.global	SVC_Handler
  78              		.syntax unified
  79              		.code	16
  80              		.thumb_func
  81              		.fpu softvfp
  83              	SVC_Handler:
  84              	.LFB42:
  89:Src/stm32f0xx_it.c ****   {
  90:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Src/stm32f0xx_it.c ****   }
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 4


  93:Src/stm32f0xx_it.c **** }
  94:Src/stm32f0xx_it.c **** 
  95:Src/stm32f0xx_it.c **** /**
  96:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  97:Src/stm32f0xx_it.c ****   */
  98:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  99:Src/stm32f0xx_it.c **** {
  85              		.loc 1 99 1
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 00AF     		add	r7, sp, #0
  95              	.LCFI5:
  96              		.cfi_def_cfa_register 7
 100:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 101:Src/stm32f0xx_it.c **** 
 102:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 103:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 104:Src/stm32f0xx_it.c **** 
 105:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 106:Src/stm32f0xx_it.c **** }
  97              		.loc 1 106 1
  98 0004 C046     		nop
  99 0006 BD46     		mov	sp, r7
 100              		@ sp needed
 101 0008 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE42:
 105              		.section	.text.PendSV_Handler,"ax",%progbits
 106              		.align	1
 107              		.global	PendSV_Handler
 108              		.syntax unified
 109              		.code	16
 110              		.thumb_func
 111              		.fpu softvfp
 113              	PendSV_Handler:
 114              	.LFB43:
 107:Src/stm32f0xx_it.c **** 
 108:Src/stm32f0xx_it.c **** /**
 109:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 110:Src/stm32f0xx_it.c ****   */
 111:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 112:Src/stm32f0xx_it.c **** {
 115              		.loc 1 112 1
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 5


 124 0002 00AF     		add	r7, sp, #0
 125              	.LCFI7:
 126              		.cfi_def_cfa_register 7
 113:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 114:Src/stm32f0xx_it.c **** 
 115:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 116:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 117:Src/stm32f0xx_it.c **** 
 118:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 119:Src/stm32f0xx_it.c **** }
 127              		.loc 1 119 1
 128 0004 C046     		nop
 129 0006 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0008 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE43:
 135              		.section	.text.SysTick_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SysTick_Handler
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	SysTick_Handler:
 144              	.LFB44:
 120:Src/stm32f0xx_it.c **** 
 121:Src/stm32f0xx_it.c **** /**
 122:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 123:Src/stm32f0xx_it.c ****   */
 124:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 125:Src/stm32f0xx_it.c **** {
 145              		.loc 1 125 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              	.LCFI9:
 156              		.cfi_def_cfa_register 7
 126:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 127:Src/stm32f0xx_it.c **** 
 128:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 129:Src/stm32f0xx_it.c ****   HAL_IncTick();
 157              		.loc 1 129 3
 158 0004 FFF7FEFF 		bl	HAL_IncTick
 130:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 131:Src/stm32f0xx_it.c **** 
 132:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 133:Src/stm32f0xx_it.c **** }
 159              		.loc 1 133 1
 160 0008 C046     		nop
 161 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 6


 162              		@ sp needed
 163 000c 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE44:
 167              		.section	.text.DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler,"ax",%progbits
 168              		.align	1
 169              		.global	DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler
 170              		.syntax unified
 171              		.code	16
 172              		.thumb_func
 173              		.fpu softvfp
 175              	DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler:
 176              	.LFB45:
 134:Src/stm32f0xx_it.c **** 
 135:Src/stm32f0xx_it.c **** /******************************************************************************/
 136:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 137:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 138:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 139:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 140:Src/stm32f0xx_it.c **** /******************************************************************************/
 141:Src/stm32f0xx_it.c **** 
 142:Src/stm32f0xx_it.c **** /**
 143:Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 to 3 and DMA2 channel 1 to 2 interrupts.
 144:Src/stm32f0xx_it.c ****   */
 145:Src/stm32f0xx_it.c **** void DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler(void)
 146:Src/stm32f0xx_it.c **** {
 177              		.loc 1 146 1
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              	.LCFI10:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 00AF     		add	r7, sp, #0
 187              	.LCFI11:
 188              		.cfi_def_cfa_register 7
 147:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Ch2_3_DMA2_Ch1_2_IRQn 0 */
 148:Src/stm32f0xx_it.c **** 
 149:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Ch2_3_DMA2_Ch1_2_IRQn 0 */
 150:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 189              		.loc 1 150 3
 190 0004 034B     		ldr	r3, .L8
 191 0006 1800     		movs	r0, r3
 192 0008 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 151:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Ch2_3_DMA2_Ch1_2_IRQn 1 */
 152:Src/stm32f0xx_it.c **** 
 153:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Ch2_3_DMA2_Ch1_2_IRQn 1 */
 154:Src/stm32f0xx_it.c **** }
 193              		.loc 1 154 1
 194 000c C046     		nop
 195 000e BD46     		mov	sp, r7
 196              		@ sp needed
 197 0010 80BD     		pop	{r7, pc}
 198              	.L9:
 199 0012 C046     		.align	2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 7


 200              	.L8:
 201 0014 00000000 		.word	hdma_usart2_tx
 202              		.cfi_endproc
 203              	.LFE45:
 205              		.text
 206              	.Letext0:
 207              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 208              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 209              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 210              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 211              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 212              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 213              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:16     .text.NMI_Handler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:48     .text.HardFault_Handler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:55     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:76     .text.SVC_Handler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:83     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:106    .text.PendSV_Handler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:113    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:136    .text.SysTick_Handler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:143    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:168    .text.DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:175    .text.DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler:00000000 DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler
C:\Users\Vulca\AppData\Local\Temp\cclxAPta.s:201    .text.DMA1_Ch2_3_DMA2_Ch1_2_IRQHandler:00000014 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart2_tx

ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RS485Ex_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_RS485Ex_Init:
  25              	.LFB40:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @file    stm32f0xx_hal_uart_ex.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   @verbatim
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   ==============================================================================
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   ==============================================================================
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   ******************************************************************************
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #include "stm32f0xx_hal.h"
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif /* USART_CR1_UESM */
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @}
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @verbatim
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** ===============================================================================
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****  ===============================================================================
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     [..]
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     in asynchronous mode.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Baud Rate
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Word Length
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Stop Bit
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Hardware flow control
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) Over Sampling Method
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) data logical level inversion
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) RX and TX pins swap
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) RX overrun detection disabling
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) DMA disabling on RX error
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) MSB first on communication line
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (++) auto Baud rate detection
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     [..]
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @endverbatim
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   following table.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     Table 1. UART frame format.
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart            UART handle.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       oversampling rate).
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval HAL status
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
  27              		.loc 1 152 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 7A60     		str	r2, [r7, #4]
  45 000c 3B60     		str	r3, [r7]
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   uint32_t temp;
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (huart == NULL)
  46              		.loc 1 156 6
  47 000e FB68     		ldr	r3, [r7, #12]
  48 0010 002B     		cmp	r3, #0
  49 0012 01D1     		bne	.L2
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     return HAL_ERROR;
  50              		.loc 1 158 12
  51 0014 0123     		movs	r3, #1
  52 0016 5BE0     		b	.L3
  53              	.L2:
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  54              		.loc 1 172 12
  55 0018 FB68     		ldr	r3, [r7, #12]
  56 001a 5B6F     		ldr	r3, [r3, #116]
  57              		.loc 1 172 6
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 5


  58 001c 002B     		cmp	r3, #0
  59 001e 07D1     		bne	.L4
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 175 17
  61 0020 FB68     		ldr	r3, [r7, #12]
  62 0022 7022     		movs	r2, #112
  63 0024 0021     		movs	r1, #0
  64 0026 9954     		strb	r1, [r3, r2]
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     {
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     }
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     /* Init the low level hardware */
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #else
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
  65              		.loc 1 189 5
  66 0028 FB68     		ldr	r3, [r7, #12]
  67 002a 1800     		movs	r0, r3
  68 002c FFF7FEFF 		bl	HAL_UART_MspInit
  69              	.L4:
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
  70              		.loc 1 193 17
  71 0030 FB68     		ldr	r3, [r7, #12]
  72 0032 2422     		movs	r2, #36
  73 0034 5A67     		str	r2, [r3, #116]
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
  74              		.loc 1 196 3
  75 0036 FB68     		ldr	r3, [r7, #12]
  76 0038 1B68     		ldr	r3, [r3]
  77 003a 1A68     		ldr	r2, [r3]
  78 003c FB68     		ldr	r3, [r7, #12]
  79 003e 1B68     		ldr	r3, [r3]
  80 0040 0121     		movs	r1, #1
  81 0042 8A43     		bics	r2, r1
  82 0044 1A60     		str	r2, [r3]
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  83              		.loc 1 199 7
  84 0046 FB68     		ldr	r3, [r7, #12]
  85 0048 1800     		movs	r0, r3
  86 004a FFF7FEFF 		bl	UART_SetConfig
  87 004e 0300     		movs	r3, r0
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 6


  88              		.loc 1 199 6
  89 0050 012B     		cmp	r3, #1
  90 0052 01D1     		bne	.L5
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     return HAL_ERROR;
  91              		.loc 1 201 12
  92 0054 0123     		movs	r3, #1
  93 0056 3BE0     		b	.L3
  94              	.L5:
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  95              		.loc 1 204 26
  96 0058 FB68     		ldr	r3, [r7, #12]
  97 005a 5B6A     		ldr	r3, [r3, #36]
  98              		.loc 1 204 6
  99 005c 002B     		cmp	r3, #0
 100 005e 03D0     		beq	.L6
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
 101              		.loc 1 206 5
 102 0060 FB68     		ldr	r3, [r7, #12]
 103 0062 1800     		movs	r0, r3
 104 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 105              	.L6:
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 106              		.loc 1 210 3
 107 0068 FB68     		ldr	r3, [r7, #12]
 108 006a 1B68     		ldr	r3, [r3]
 109 006c 9A68     		ldr	r2, [r3, #8]
 110 006e FB68     		ldr	r3, [r7, #12]
 111 0070 1B68     		ldr	r3, [r3]
 112 0072 8021     		movs	r1, #128
 113 0074 C901     		lsls	r1, r1, #7
 114 0076 0A43     		orrs	r2, r1
 115 0078 9A60     		str	r2, [r3, #8]
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 116              		.loc 1 213 3
 117 007a FB68     		ldr	r3, [r7, #12]
 118 007c 1B68     		ldr	r3, [r3]
 119 007e 9B68     		ldr	r3, [r3, #8]
 120 0080 154A     		ldr	r2, .L7
 121 0082 1340     		ands	r3, r2
 122 0084 1900     		movs	r1, r3
 123 0086 FB68     		ldr	r3, [r7, #12]
 124 0088 1B68     		ldr	r3, [r3]
 125 008a BA68     		ldr	r2, [r7, #8]
 126 008c 0A43     		orrs	r2, r1
 127 008e 9A60     		str	r2, [r3, #8]
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 7


 128              		.loc 1 216 8
 129 0090 7B68     		ldr	r3, [r7, #4]
 130 0092 5B05     		lsls	r3, r3, #21
 131 0094 7B61     		str	r3, [r7, #20]
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 132              		.loc 1 217 28
 133 0096 3B68     		ldr	r3, [r7]
 134 0098 1B04     		lsls	r3, r3, #16
 135              		.loc 1 217 8
 136 009a 7A69     		ldr	r2, [r7, #20]
 137 009c 1343     		orrs	r3, r2
 138 009e 7B61     		str	r3, [r7, #20]
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 139              		.loc 1 218 3
 140 00a0 FB68     		ldr	r3, [r7, #12]
 141 00a2 1B68     		ldr	r3, [r3]
 142 00a4 1B68     		ldr	r3, [r3]
 143 00a6 0D4A     		ldr	r2, .L7+4
 144 00a8 1340     		ands	r3, r2
 145 00aa 1900     		movs	r1, r3
 146 00ac FB68     		ldr	r3, [r7, #12]
 147 00ae 1B68     		ldr	r3, [r3]
 148 00b0 7A69     		ldr	r2, [r7, #20]
 149 00b2 0A43     		orrs	r2, r1
 150 00b4 1A60     		str	r2, [r3]
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 151              		.loc 1 221 3
 152 00b6 FB68     		ldr	r3, [r7, #12]
 153 00b8 1B68     		ldr	r3, [r3]
 154 00ba 1A68     		ldr	r2, [r3]
 155 00bc FB68     		ldr	r3, [r7, #12]
 156 00be 1B68     		ldr	r3, [r3]
 157 00c0 0121     		movs	r1, #1
 158 00c2 0A43     		orrs	r2, r1
 159 00c4 1A60     		str	r2, [r3]
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 160              		.loc 1 224 11
 161 00c6 FB68     		ldr	r3, [r7, #12]
 162 00c8 1800     		movs	r0, r3
 163 00ca FFF7FEFF 		bl	UART_CheckIdleState
 164 00ce 0300     		movs	r3, r0
 165              	.L3:
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 166              		.loc 1 225 1
 167 00d0 1800     		movs	r0, r3
 168 00d2 BD46     		mov	sp, r7
 169 00d4 06B0     		add	sp, sp, #24
 170              		@ sp needed
 171 00d6 80BD     		pop	{r7, pc}
 172              	.L8:
 173              		.align	2
 174              	.L7:
 175 00d8 FF7FFFFF 		.word	-32769
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 8


 176 00dc FFFF00FC 		.word	-67043329
 177              		.cfi_endproc
 178              	.LFE40:
 180              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 181              		.align	1
 182              		.weak	HAL_UARTEx_WakeupCallback
 183              		.syntax unified
 184              		.code	16
 185              		.thumb_func
 186              		.fpu softvfp
 188              	HAL_UARTEx_WakeupCallback:
 189              	.LFB41:
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @}
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *  @brief Extended functions
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @verbatim
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****  ===============================================================================
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****                       ##### IO operation functions #####
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****  ===============================================================================
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @endverbatim
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart UART handle.
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval None
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 190              		.loc 1 256 1
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 82B0     		sub	sp, sp, #8
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI5:
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 9


 204              		.cfi_def_cfa_register 7
 205 0006 7860     		str	r0, [r7, #4]
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   UNUSED(huart);
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****    */
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 206              		.loc 1 263 1
 207 0008 C046     		nop
 208 000a BD46     		mov	sp, r7
 209 000c 02B0     		add	sp, sp, #8
 210              		@ sp needed
 211 000e 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE41:
 215              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 216              		.align	1
 217              		.global	HAL_MultiProcessorEx_AddressLength_Set
 218              		.syntax unified
 219              		.code	16
 220              		.thumb_func
 221              		.fpu softvfp
 223              	HAL_MultiProcessorEx_AddressLength_Set:
 224              	.LFB42:
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif /* USART_CR1_UESM */
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @}
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @verbatim
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****  ===============================================================================
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****  ===============================================================================
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     [..] This section provides the following functions:
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** @endverbatim
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 10


 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *        long).
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart         UART handle.
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval HAL status
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 225              		.loc 1 306 1
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              	.LCFI6:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 82B0     		sub	sp, sp, #8
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              	.LCFI8:
 239              		.cfi_def_cfa_register 7
 240 0006 7860     		str	r0, [r7, #4]
 241 0008 3960     		str	r1, [r7]
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (huart == NULL)
 242              		.loc 1 308 6
 243 000a 7B68     		ldr	r3, [r7, #4]
 244 000c 002B     		cmp	r3, #0
 245 000e 01D1     		bne	.L11
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     return HAL_ERROR;
 246              		.loc 1 310 12
 247 0010 0123     		movs	r3, #1
 248 0012 22E0     		b	.L12
 249              	.L11:
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Check the address length parameter */
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 250              		.loc 1 316 17
 251 0014 7B68     		ldr	r3, [r7, #4]
 252 0016 2422     		movs	r2, #36
 253 0018 5A67     		str	r2, [r3, #116]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 254              		.loc 1 319 3
 255 001a 7B68     		ldr	r3, [r7, #4]
 256 001c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 11


 257 001e 1A68     		ldr	r2, [r3]
 258 0020 7B68     		ldr	r3, [r7, #4]
 259 0022 1B68     		ldr	r3, [r3]
 260 0024 0121     		movs	r1, #1
 261 0026 8A43     		bics	r2, r1
 262 0028 1A60     		str	r2, [r3]
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the address length */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 263              		.loc 1 322 3
 264 002a 7B68     		ldr	r3, [r7, #4]
 265 002c 1B68     		ldr	r3, [r3]
 266 002e 5B68     		ldr	r3, [r3, #4]
 267 0030 1022     		movs	r2, #16
 268 0032 9343     		bics	r3, r2
 269 0034 1900     		movs	r1, r3
 270 0036 7B68     		ldr	r3, [r7, #4]
 271 0038 1B68     		ldr	r3, [r3]
 272 003a 3A68     		ldr	r2, [r7]
 273 003c 0A43     		orrs	r2, r1
 274 003e 5A60     		str	r2, [r3, #4]
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 275              		.loc 1 325 3
 276 0040 7B68     		ldr	r3, [r7, #4]
 277 0042 1B68     		ldr	r3, [r3]
 278 0044 1A68     		ldr	r2, [r3]
 279 0046 7B68     		ldr	r3, [r7, #4]
 280 0048 1B68     		ldr	r3, [r3]
 281 004a 0121     		movs	r1, #1
 282 004c 0A43     		orrs	r2, r1
 283 004e 1A60     		str	r2, [r3]
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 284              		.loc 1 328 11
 285 0050 7B68     		ldr	r3, [r7, #4]
 286 0052 1800     		movs	r0, r3
 287 0054 FFF7FEFF 		bl	UART_CheckIdleState
 288 0058 0300     		movs	r3, r0
 289              	.L12:
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 290              		.loc 1 329 1
 291 005a 1800     		movs	r0, r3
 292 005c BD46     		mov	sp, r7
 293 005e 02B0     		add	sp, sp, #8
 294              		@ sp needed
 295 0060 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE42:
 299              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 300              		.align	1
 301              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 302              		.syntax unified
 303              		.code	16
 304              		.thumb_func
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 12


 305              		.fpu softvfp
 307              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 308              	.LFB43:
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart           UART handle.
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval HAL status
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 309              		.loc 1 345 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 24
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI9:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 88B0     		sub	sp, sp, #32
 319              	.LCFI10:
 320              		.cfi_def_cfa_offset 40
 321 0004 02AF     		add	r7, sp, #8
 322              	.LCFI11:
 323              		.cfi_def_cfa 7, 32
 324 0006 F860     		str	r0, [r7, #12]
 325 0008 3B1D     		adds	r3, r7, #4
 326 000a 1960     		str	r1, [r3]
 327 000c 5A60     		str	r2, [r3, #4]
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 328              		.loc 1 346 21
 329 000e 1723     		movs	r3, #23
 330 0010 FB18     		adds	r3, r7, r3
 331 0012 0022     		movs	r2, #0
 332 0014 1A70     		strb	r2, [r3]
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   uint32_t tickstart;
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Locked */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 333              		.loc 1 355 3
 334 0016 FB68     		ldr	r3, [r7, #12]
 335 0018 7022     		movs	r2, #112
 336 001a 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 13


 337 001c 012B     		cmp	r3, #1
 338 001e 01D1     		bne	.L14
 339              		.loc 1 355 3 is_stmt 0 discriminator 1
 340 0020 0223     		movs	r3, #2
 341 0022 4AE0     		b	.L15
 342              	.L14:
 343              		.loc 1 355 3 discriminator 2
 344 0024 FB68     		ldr	r3, [r7, #12]
 345 0026 7022     		movs	r2, #112
 346 0028 0121     		movs	r1, #1
 347 002a 9954     		strb	r1, [r3, r2]
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 348              		.loc 1 357 17 is_stmt 1 discriminator 2
 349 002c FB68     		ldr	r3, [r7, #12]
 350 002e 2422     		movs	r2, #36
 351 0030 5A67     		str	r2, [r3, #116]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 352              		.loc 1 360 3 discriminator 2
 353 0032 FB68     		ldr	r3, [r7, #12]
 354 0034 1B68     		ldr	r3, [r3]
 355 0036 1A68     		ldr	r2, [r3]
 356 0038 FB68     		ldr	r3, [r7, #12]
 357 003a 1B68     		ldr	r3, [r3]
 358 003c 0121     		movs	r1, #1
 359 003e 8A43     		bics	r2, r1
 360 0040 1A60     		str	r2, [r3]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 361              		.loc 1 363 3 discriminator 2
 362 0042 FB68     		ldr	r3, [r7, #12]
 363 0044 1B68     		ldr	r3, [r3]
 364 0046 9B68     		ldr	r3, [r3, #8]
 365 0048 1E4A     		ldr	r2, .L19
 366 004a 1340     		ands	r3, r2
 367 004c 1900     		movs	r1, r3
 368 004e 3B1D     		adds	r3, r7, #4
 369 0050 1A68     		ldr	r2, [r3]
 370 0052 FB68     		ldr	r3, [r7, #12]
 371 0054 1B68     		ldr	r3, [r3]
 372 0056 0A43     		orrs	r2, r1
 373 0058 9A60     		str	r2, [r3, #8]
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 374              		.loc 1 365 22 discriminator 2
 375 005a 3B1D     		adds	r3, r7, #4
 376 005c 1B68     		ldr	r3, [r3]
 377              		.loc 1 365 6 discriminator 2
 378 005e 002B     		cmp	r3, #0
 379 0060 05D1     		bne	.L16
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 380              		.loc 1 367 5
 381 0062 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 14


 382 0064 F868     		ldr	r0, [r7, #12]
 383 0066 1968     		ldr	r1, [r3]
 384 0068 5A68     		ldr	r2, [r3, #4]
 385 006a FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 386              	.L16:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 387              		.loc 1 371 3
 388 006e FB68     		ldr	r3, [r7, #12]
 389 0070 1B68     		ldr	r3, [r3]
 390 0072 1A68     		ldr	r2, [r3]
 391 0074 FB68     		ldr	r3, [r7, #12]
 392 0076 1B68     		ldr	r3, [r3]
 393 0078 0121     		movs	r1, #1
 394 007a 0A43     		orrs	r2, r1
 395 007c 1A60     		str	r2, [r3]
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Init tickstart for timeout managment*/
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
 396              		.loc 1 374 15
 397 007e FFF7FEFF 		bl	HAL_GetTick
 398 0082 0300     		movs	r3, r0
 399 0084 3B61     		str	r3, [r7, #16]
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 400              		.loc 1 377 7
 401 0086 3B69     		ldr	r3, [r7, #16]
 402 0088 8022     		movs	r2, #128
 403 008a D103     		lsls	r1, r2, #15
 404 008c F868     		ldr	r0, [r7, #12]
 405 008e 0E4A     		ldr	r2, .L19+4
 406 0090 0092     		str	r2, [sp]
 407 0092 0022     		movs	r2, #0
 408 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 409 0098 031E     		subs	r3, r0, #0
 410              		.loc 1 377 6
 411 009a 04D0     		beq	.L17
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 412              		.loc 1 379 12
 413 009c 1723     		movs	r3, #23
 414 009e FB18     		adds	r3, r7, r3
 415 00a0 0322     		movs	r2, #3
 416 00a2 1A70     		strb	r2, [r3]
 417 00a4 02E0     		b	.L18
 418              	.L17:
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   else
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     /* Initialize the UART State */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 419              		.loc 1 384 19
 420 00a6 FB68     		ldr	r3, [r7, #12]
 421 00a8 2022     		movs	r2, #32
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 15


 422 00aa 5A67     		str	r2, [r3, #116]
 423              	.L18:
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   }
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Unlocked */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 424              		.loc 1 388 3
 425 00ac FB68     		ldr	r3, [r7, #12]
 426 00ae 7022     		movs	r2, #112
 427 00b0 0021     		movs	r1, #0
 428 00b2 9954     		strb	r1, [r3, r2]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   return status;
 429              		.loc 1 390 10
 430 00b4 1723     		movs	r3, #23
 431 00b6 FB18     		adds	r3, r7, r3
 432 00b8 1B78     		ldrb	r3, [r3]
 433              	.L15:
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 434              		.loc 1 391 1
 435 00ba 1800     		movs	r0, r3
 436 00bc BD46     		mov	sp, r7
 437 00be 06B0     		add	sp, sp, #24
 438              		@ sp needed
 439 00c0 80BD     		pop	{r7, pc}
 440              	.L20:
 441 00c2 C046     		.align	2
 442              	.L19:
 443 00c4 FFFFCFFF 		.word	-3145729
 444 00c8 FFFFFF01 		.word	33554431
 445              		.cfi_endproc
 446              	.LFE43:
 448              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 449              		.align	1
 450              		.global	HAL_UARTEx_EnableStopMode
 451              		.syntax unified
 452              		.code	16
 453              		.thumb_func
 454              		.fpu softvfp
 456              	HAL_UARTEx_EnableStopMode:
 457              	.LFB44:
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart UART handle.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval HAL status
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 458              		.loc 1 400 1
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              	.LCFI12:
 464              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 16


 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 82B0     		sub	sp, sp, #8
 468              	.LCFI13:
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              	.LCFI14:
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Locked */
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 474              		.loc 1 402 3
 475 0008 7B68     		ldr	r3, [r7, #4]
 476 000a 7022     		movs	r2, #112
 477 000c 9B5C     		ldrb	r3, [r3, r2]
 478 000e 012B     		cmp	r3, #1
 479 0010 01D1     		bne	.L22
 480              		.loc 1 402 3 is_stmt 0 discriminator 1
 481 0012 0223     		movs	r3, #2
 482 0014 10E0     		b	.L23
 483              	.L22:
 484              		.loc 1 402 3 discriminator 2
 485 0016 7B68     		ldr	r3, [r7, #4]
 486 0018 7022     		movs	r2, #112
 487 001a 0121     		movs	r1, #1
 488 001c 9954     		strb	r1, [r3, r2]
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set UESM bit */
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
 489              		.loc 1 405 3 is_stmt 1 discriminator 2
 490 001e 7B68     		ldr	r3, [r7, #4]
 491 0020 1B68     		ldr	r3, [r3]
 492 0022 1A68     		ldr	r2, [r3]
 493 0024 7B68     		ldr	r3, [r7, #4]
 494 0026 1B68     		ldr	r3, [r3]
 495 0028 0221     		movs	r1, #2
 496 002a 0A43     		orrs	r2, r1
 497 002c 1A60     		str	r2, [r3]
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Unlocked */
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 498              		.loc 1 408 3 discriminator 2
 499 002e 7B68     		ldr	r3, [r7, #4]
 500 0030 7022     		movs	r2, #112
 501 0032 0021     		movs	r1, #0
 502 0034 9954     		strb	r1, [r3, r2]
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   return HAL_OK;
 503              		.loc 1 410 10 discriminator 2
 504 0036 0023     		movs	r3, #0
 505              	.L23:
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 506              		.loc 1 411 1
 507 0038 1800     		movs	r0, r3
 508 003a BD46     		mov	sp, r7
 509 003c 02B0     		add	sp, sp, #8
 510              		@ sp needed
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 17


 511 003e 80BD     		pop	{r7, pc}
 512              		.cfi_endproc
 513              	.LFE44:
 515              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_UARTEx_DisableStopMode
 518              		.syntax unified
 519              		.code	16
 520              		.thumb_func
 521              		.fpu softvfp
 523              	HAL_UARTEx_DisableStopMode:
 524              	.LFB45:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart UART handle.
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval HAL status
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 525              		.loc 1 419 1
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529 0000 80B5     		push	{r7, lr}
 530              	.LCFI15:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 82B0     		sub	sp, sp, #8
 535              	.LCFI16:
 536              		.cfi_def_cfa_offset 16
 537 0004 00AF     		add	r7, sp, #0
 538              	.LCFI17:
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Locked */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 541              		.loc 1 421 3
 542 0008 7B68     		ldr	r3, [r7, #4]
 543 000a 7022     		movs	r2, #112
 544 000c 9B5C     		ldrb	r3, [r3, r2]
 545 000e 012B     		cmp	r3, #1
 546 0010 01D1     		bne	.L25
 547              		.loc 1 421 3 is_stmt 0 discriminator 1
 548 0012 0223     		movs	r3, #2
 549 0014 10E0     		b	.L26
 550              	.L25:
 551              		.loc 1 421 3 discriminator 2
 552 0016 7B68     		ldr	r3, [r7, #4]
 553 0018 7022     		movs	r2, #112
 554 001a 0121     		movs	r1, #1
 555 001c 9954     		strb	r1, [r3, r2]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Clear UESM bit */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 556              		.loc 1 424 3 is_stmt 1 discriminator 2
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 18


 557 001e 7B68     		ldr	r3, [r7, #4]
 558 0020 1B68     		ldr	r3, [r3]
 559 0022 1A68     		ldr	r2, [r3]
 560 0024 7B68     		ldr	r3, [r7, #4]
 561 0026 1B68     		ldr	r3, [r3]
 562 0028 0221     		movs	r1, #2
 563 002a 8A43     		bics	r2, r1
 564 002c 1A60     		str	r2, [r3]
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Process Unlocked */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 565              		.loc 1 427 3 discriminator 2
 566 002e 7B68     		ldr	r3, [r7, #4]
 567 0030 7022     		movs	r2, #112
 568 0032 0021     		movs	r1, #0
 569 0034 9954     		strb	r1, [r3, r2]
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   return HAL_OK;
 570              		.loc 1 429 10 discriminator 2
 571 0036 0023     		movs	r3, #0
 572              	.L26:
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 573              		.loc 1 430 1
 574 0038 1800     		movs	r0, r3
 575 003a BD46     		mov	sp, r7
 576 003c 02B0     		add	sp, sp, #8
 577              		@ sp needed
 578 003e 80BD     		pop	{r7, pc}
 579              		.cfi_endproc
 580              	.LFE45:
 582              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
 583              		.align	1
 584              		.syntax unified
 585              		.code	16
 586              		.thumb_func
 587              		.fpu softvfp
 589              	UARTEx_Wakeup_AddressConfig:
 590              	.LFB46:
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #endif /* USART_CR1_UESM */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @}
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @}
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @{
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** #if defined(USART_CR1_UESM)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** /**
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param huart           UART handle.
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 19


 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   * @retval None
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   */
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** {
 591              		.loc 1 453 1
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595 0000 80B5     		push	{r7, lr}
 596              	.LCFI18:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 84B0     		sub	sp, sp, #16
 601              	.LCFI19:
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              	.LCFI20:
 605              		.cfi_def_cfa_register 7
 606 0006 F860     		str	r0, [r7, #12]
 607 0008 3B1D     		adds	r3, r7, #4
 608 000a 1960     		str	r1, [r3]
 609 000c 5A60     		str	r2, [r3, #4]
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the USART address length */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 610              		.loc 1 457 3
 611 000e FB68     		ldr	r3, [r7, #12]
 612 0010 1B68     		ldr	r3, [r3]
 613 0012 5B68     		ldr	r3, [r3, #4]
 614 0014 1022     		movs	r2, #16
 615 0016 9343     		bics	r3, r2
 616 0018 1A00     		movs	r2, r3
 617 001a 3B1D     		adds	r3, r7, #4
 618 001c 9B88     		ldrh	r3, [r3, #4]
 619 001e 1900     		movs	r1, r3
 620 0020 FB68     		ldr	r3, [r7, #12]
 621 0022 1B68     		ldr	r3, [r3]
 622 0024 0A43     		orrs	r2, r1
 623 0026 5A60     		str	r2, [r3, #4]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** 
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   /* Set the USART address node */
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 624              		.loc 1 460 3
 625 0028 FB68     		ldr	r3, [r7, #12]
 626 002a 1B68     		ldr	r3, [r3]
 627 002c 5B68     		ldr	r3, [r3, #4]
 628 002e 1B02     		lsls	r3, r3, #8
 629 0030 190A     		lsrs	r1, r3, #8
 630 0032 3B1D     		adds	r3, r7, #4
 631 0034 9B79     		ldrb	r3, [r3, #6]
 632 0036 1A06     		lsls	r2, r3, #24
 633 0038 FB68     		ldr	r3, [r7, #12]
 634 003a 1B68     		ldr	r3, [r3]
 635 003c 0A43     		orrs	r2, r1
 636 003e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 20


 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c **** }
 637              		.loc 1 461 1
 638 0040 C046     		nop
 639 0042 BD46     		mov	sp, r7
 640 0044 04B0     		add	sp, sp, #16
 641              		@ sp needed
 642 0046 80BD     		pop	{r7, pc}
 643              		.cfi_endproc
 644              	.LFE46:
 646              		.text
 647              	.Letext0:
 648              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 649              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 650              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 651              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 652              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 653              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 654              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 655              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 656              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
 657              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart_ex.c
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:16     .text.HAL_RS485Ex_Init:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:24     .text.HAL_RS485Ex_Init:00000000 HAL_RS485Ex_Init
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:175    .text.HAL_RS485Ex_Init:000000d8 $d
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:181    .text.HAL_UARTEx_WakeupCallback:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:188    .text.HAL_UARTEx_WakeupCallback:00000000 HAL_UARTEx_WakeupCallback
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:216    .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:223    .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 HAL_MultiProcessorEx_AddressLength_Set
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:300    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:307    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:00000000 HAL_UARTEx_StopModeWakeUpSourceConfig
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:589    .text.UARTEx_Wakeup_AddressConfig:00000000 UARTEx_Wakeup_AddressConfig
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:443    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:000000c4 $d
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:449    .text.HAL_UARTEx_EnableStopMode:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:456    .text.HAL_UARTEx_EnableStopMode:00000000 HAL_UARTEx_EnableStopMode
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:516    .text.HAL_UARTEx_DisableStopMode:00000000 $t
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:523    .text.HAL_UARTEx_DisableStopMode:00000000 HAL_UARTEx_DisableStopMode
C:\Users\Vulca\AppData\Local\Temp\ccpTU4EF.s:583    .text.UARTEx_Wakeup_AddressConfig:00000000 $t

UNDEFINED SYMBOLS
HAL_UART_MspInit
UART_SetConfig
UART_AdvFeatureConfig
UART_CheckIdleState
HAL_GetTick
UART_WaitOnFlagUntilTimeout

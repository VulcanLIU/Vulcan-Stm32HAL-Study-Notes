ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_UART_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_UART_Init:
  25              	.LFB37:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  27              		.loc 1 292 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
  43              		.loc 1 294 5
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 296 12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 7


  48 000e 0123     		movs	r3, #1
  49 0010 47E0     		b	.L3
  50              	.L2:
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  51              		.loc 1 310 11
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 6922     		movs	r2, #105
  54 0016 9B5C     		ldrb	r3, [r3, r2]
  55 0018 DBB2     		uxtb	r3, r3
  56              		.loc 1 310 5
  57 001a 002B     		cmp	r3, #0
  58 001c 07D1     		bne	.L4
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 313 17
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 6822     		movs	r2, #104
  62 0022 0021     		movs	r1, #0
  63 0024 9954     		strb	r1, [r3, r2]
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 316 5
  65 0026 7B68     		ldr	r3, [r7, #4]
  66 0028 1800     		movs	r0, r3
  67 002a FFF7FEFF 		bl	HAL_UART_MspInit
  68              	.L4:
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  69              		.loc 1 319 17
  70 002e 7B68     		ldr	r3, [r7, #4]
  71 0030 6922     		movs	r2, #105
  72 0032 2421     		movs	r1, #36
  73 0034 9954     		strb	r1, [r3, r2]
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  74              		.loc 1 322 3
  75 0036 7B68     		ldr	r3, [r7, #4]
  76 0038 1B68     		ldr	r3, [r3]
  77 003a 1A68     		ldr	r2, [r3]
  78 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 8


  79 003e 1B68     		ldr	r3, [r3]
  80 0040 0121     		movs	r1, #1
  81 0042 8A43     		bics	r2, r1
  82 0044 1A60     		str	r2, [r3]
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  83              		.loc 1 325 7
  84 0046 7B68     		ldr	r3, [r7, #4]
  85 0048 1800     		movs	r0, r3
  86 004a FFF7FEFF 		bl	UART_SetConfig
  87 004e 0300     		movs	r3, r0
  88              		.loc 1 325 6
  89 0050 012B     		cmp	r3, #1
  90 0052 01D1     		bne	.L5
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  91              		.loc 1 327 12
  92 0054 0123     		movs	r3, #1
  93 0056 24E0     		b	.L3
  94              	.L5:
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  95              		.loc 1 330 26
  96 0058 7B68     		ldr	r3, [r7, #4]
  97 005a 5B6A     		ldr	r3, [r3, #36]
  98              		.loc 1 330 6
  99 005c 002B     		cmp	r3, #0
 100 005e 03D0     		beq	.L6
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 101              		.loc 1 332 5
 102 0060 7B68     		ldr	r3, [r7, #4]
 103 0062 1800     		movs	r0, r3
 104 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 105              	.L6:
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 106              		.loc 1 339 3
 107 0068 7B68     		ldr	r3, [r7, #4]
 108 006a 1B68     		ldr	r3, [r3]
 109 006c 5A68     		ldr	r2, [r3, #4]
 110 006e 7B68     		ldr	r3, [r7, #4]
 111 0070 1B68     		ldr	r3, [r3]
 112 0072 0E49     		ldr	r1, .L7
 113 0074 0A40     		ands	r2, r1
 114 0076 5A60     		str	r2, [r3, #4]
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 9


 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 115              		.loc 1 345 3
 116 0078 7B68     		ldr	r3, [r7, #4]
 117 007a 1B68     		ldr	r3, [r3]
 118 007c 9A68     		ldr	r2, [r3, #8]
 119 007e 7B68     		ldr	r3, [r7, #4]
 120 0080 1B68     		ldr	r3, [r3]
 121 0082 2A21     		movs	r1, #42
 122 0084 8A43     		bics	r2, r1
 123 0086 9A60     		str	r2, [r3, #8]
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 124              		.loc 1 358 3
 125 0088 7B68     		ldr	r3, [r7, #4]
 126 008a 1B68     		ldr	r3, [r3]
 127 008c 1A68     		ldr	r2, [r3]
 128 008e 7B68     		ldr	r3, [r7, #4]
 129 0090 1B68     		ldr	r3, [r3]
 130 0092 0121     		movs	r1, #1
 131 0094 0A43     		orrs	r2, r1
 132 0096 1A60     		str	r2, [r3]
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 133              		.loc 1 361 11
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 1800     		movs	r0, r3
 136 009c FFF7FEFF 		bl	UART_CheckIdleState
 137 00a0 0300     		movs	r3, r0
 138              	.L3:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 139              		.loc 1 362 1
 140 00a2 1800     		movs	r0, r3
 141 00a4 BD46     		mov	sp, r7
 142 00a6 02B0     		add	sp, sp, #8
 143              		@ sp needed
 144 00a8 80BD     		pop	{r7, pc}
 145              	.L8:
 146 00aa C046     		.align	2
 147              	.L7:
 148 00ac FFB7FFFF 		.word	-18433
 149              		.cfi_endproc
 150              	.LFE37:
 152              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 153              		.align	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 10


 154              		.global	HAL_HalfDuplex_Init
 155              		.syntax unified
 156              		.code	16
 157              		.thumb_func
 158              		.fpu softvfp
 160              	HAL_HalfDuplex_Init:
 161              	.LFB38:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 162              		.loc 1 371 1
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 82B0     		sub	sp, sp, #8
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 16
 174 0004 00AF     		add	r7, sp, #0
 175              	.LCFI5:
 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 178              		.loc 1 373 5
 179 0008 7B68     		ldr	r3, [r7, #4]
 180 000a 002B     		cmp	r3, #0
 181 000c 01D1     		bne	.L10
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 182              		.loc 1 375 12
 183 000e 0123     		movs	r3, #1
 184 0010 4FE0     		b	.L11
 185              	.L10:
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 186              		.loc 1 381 11
 187 0012 7B68     		ldr	r3, [r7, #4]
 188 0014 6922     		movs	r2, #105
 189 0016 9B5C     		ldrb	r3, [r3, r2]
 190 0018 DBB2     		uxtb	r3, r3
 191              		.loc 1 381 5
 192 001a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 11


 193 001c 07D1     		bne	.L12
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 194              		.loc 1 384 17
 195 001e 7B68     		ldr	r3, [r7, #4]
 196 0020 6822     		movs	r2, #104
 197 0022 0021     		movs	r1, #0
 198 0024 9954     		strb	r1, [r3, r2]
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 199              		.loc 1 387 5
 200 0026 7B68     		ldr	r3, [r7, #4]
 201 0028 1800     		movs	r0, r3
 202 002a FFF7FEFF 		bl	HAL_UART_MspInit
 203              	.L12:
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 204              		.loc 1 390 17
 205 002e 7B68     		ldr	r3, [r7, #4]
 206 0030 6922     		movs	r2, #105
 207 0032 2421     		movs	r1, #36
 208 0034 9954     		strb	r1, [r3, r2]
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 209              		.loc 1 393 3
 210 0036 7B68     		ldr	r3, [r7, #4]
 211 0038 1B68     		ldr	r3, [r3]
 212 003a 1A68     		ldr	r2, [r3]
 213 003c 7B68     		ldr	r3, [r7, #4]
 214 003e 1B68     		ldr	r3, [r3]
 215 0040 0121     		movs	r1, #1
 216 0042 8A43     		bics	r2, r1
 217 0044 1A60     		str	r2, [r3]
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 218              		.loc 1 396 7
 219 0046 7B68     		ldr	r3, [r7, #4]
 220 0048 1800     		movs	r0, r3
 221 004a FFF7FEFF 		bl	UART_SetConfig
 222 004e 0300     		movs	r3, r0
 223              		.loc 1 396 6
 224 0050 012B     		cmp	r3, #1
 225 0052 01D1     		bne	.L13
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 226              		.loc 1 398 12
 227 0054 0123     		movs	r3, #1
 228 0056 2CE0     		b	.L11
 229              	.L13:
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 12


 230              		.loc 1 401 26
 231 0058 7B68     		ldr	r3, [r7, #4]
 232 005a 5B6A     		ldr	r3, [r3, #36]
 233              		.loc 1 401 6
 234 005c 002B     		cmp	r3, #0
 235 005e 03D0     		beq	.L14
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 236              		.loc 1 403 5
 237 0060 7B68     		ldr	r3, [r7, #4]
 238 0062 1800     		movs	r0, r3
 239 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 240              	.L14:
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 241              		.loc 1 410 3
 242 0068 7B68     		ldr	r3, [r7, #4]
 243 006a 1B68     		ldr	r3, [r3]
 244 006c 5A68     		ldr	r2, [r3, #4]
 245 006e 7B68     		ldr	r3, [r7, #4]
 246 0070 1B68     		ldr	r3, [r3]
 247 0072 1249     		ldr	r1, .L15
 248 0074 0A40     		ands	r2, r1
 249 0076 5A60     		str	r2, [r3, #4]
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 250              		.loc 1 416 3
 251 0078 7B68     		ldr	r3, [r7, #4]
 252 007a 1B68     		ldr	r3, [r3]
 253 007c 9A68     		ldr	r2, [r3, #8]
 254 007e 7B68     		ldr	r3, [r7, #4]
 255 0080 1B68     		ldr	r3, [r3]
 256 0082 2221     		movs	r1, #34
 257 0084 8A43     		bics	r2, r1
 258 0086 9A60     		str	r2, [r3, #8]
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 259              		.loc 1 427 3
 260 0088 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 13


 261 008a 1B68     		ldr	r3, [r3]
 262 008c 9A68     		ldr	r2, [r3, #8]
 263 008e 7B68     		ldr	r3, [r7, #4]
 264 0090 1B68     		ldr	r3, [r3]
 265 0092 0821     		movs	r1, #8
 266 0094 0A43     		orrs	r2, r1
 267 0096 9A60     		str	r2, [r3, #8]
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 268              		.loc 1 430 3
 269 0098 7B68     		ldr	r3, [r7, #4]
 270 009a 1B68     		ldr	r3, [r3]
 271 009c 1A68     		ldr	r2, [r3]
 272 009e 7B68     		ldr	r3, [r7, #4]
 273 00a0 1B68     		ldr	r3, [r3]
 274 00a2 0121     		movs	r1, #1
 275 00a4 0A43     		orrs	r2, r1
 276 00a6 1A60     		str	r2, [r3]
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 277              		.loc 1 433 11
 278 00a8 7B68     		ldr	r3, [r7, #4]
 279 00aa 1800     		movs	r0, r3
 280 00ac FFF7FEFF 		bl	UART_CheckIdleState
 281 00b0 0300     		movs	r3, r0
 282              	.L11:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 283              		.loc 1 434 1
 284 00b2 1800     		movs	r0, r3
 285 00b4 BD46     		mov	sp, r7
 286 00b6 02B0     		add	sp, sp, #8
 287              		@ sp needed
 288 00b8 80BD     		pop	{r7, pc}
 289              	.L16:
 290 00ba C046     		.align	2
 291              	.L15:
 292 00bc FFB7FFFF 		.word	-18433
 293              		.cfi_endproc
 294              	.LFE38:
 296              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 297              		.align	1
 298              		.global	HAL_MultiProcessor_Init
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 302              		.fpu softvfp
 304              	HAL_MultiProcessor_Init:
 305              	.LFB39:
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 14


 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 306              		.loc 1 456 1
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 16
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              	.LCFI6:
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 84B0     		sub	sp, sp, #16
 316              	.LCFI7:
 317              		.cfi_def_cfa_offset 24
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI8:
 320              		.cfi_def_cfa_register 7
 321 0006 F860     		str	r0, [r7, #12]
 322 0008 7A60     		str	r2, [r7, #4]
 323 000a 0B23     		movs	r3, #11
 324 000c FB18     		adds	r3, r7, r3
 325 000e 0A1C     		adds	r2, r1, #0
 326 0010 1A70     		strb	r2, [r3]
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 327              		.loc 1 458 5
 328 0012 FB68     		ldr	r3, [r7, #12]
 329 0014 002B     		cmp	r3, #0
 330 0016 01D1     		bne	.L18
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 331              		.loc 1 460 12
 332 0018 0123     		movs	r3, #1
 333 001a 64E0     		b	.L19
 334              	.L18:
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 335              		.loc 1 466 11
 336 001c FB68     		ldr	r3, [r7, #12]
 337 001e 6922     		movs	r2, #105
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 15


 338 0020 9B5C     		ldrb	r3, [r3, r2]
 339 0022 DBB2     		uxtb	r3, r3
 340              		.loc 1 466 5
 341 0024 002B     		cmp	r3, #0
 342 0026 07D1     		bne	.L20
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 343              		.loc 1 469 17
 344 0028 FB68     		ldr	r3, [r7, #12]
 345 002a 6822     		movs	r2, #104
 346 002c 0021     		movs	r1, #0
 347 002e 9954     		strb	r1, [r3, r2]
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 348              		.loc 1 472 5
 349 0030 FB68     		ldr	r3, [r7, #12]
 350 0032 1800     		movs	r0, r3
 351 0034 FFF7FEFF 		bl	HAL_UART_MspInit
 352              	.L20:
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 353              		.loc 1 475 17
 354 0038 FB68     		ldr	r3, [r7, #12]
 355 003a 6922     		movs	r2, #105
 356 003c 2421     		movs	r1, #36
 357 003e 9954     		strb	r1, [r3, r2]
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 358              		.loc 1 478 3
 359 0040 FB68     		ldr	r3, [r7, #12]
 360 0042 1B68     		ldr	r3, [r3]
 361 0044 1A68     		ldr	r2, [r3]
 362 0046 FB68     		ldr	r3, [r7, #12]
 363 0048 1B68     		ldr	r3, [r3]
 364 004a 0121     		movs	r1, #1
 365 004c 8A43     		bics	r2, r1
 366 004e 1A60     		str	r2, [r3]
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 367              		.loc 1 481 7
 368 0050 FB68     		ldr	r3, [r7, #12]
 369 0052 1800     		movs	r0, r3
 370 0054 FFF7FEFF 		bl	UART_SetConfig
 371 0058 0300     		movs	r3, r0
 372              		.loc 1 481 6
 373 005a 012B     		cmp	r3, #1
 374 005c 01D1     		bne	.L21
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 375              		.loc 1 483 12
 376 005e 0123     		movs	r3, #1
 377 0060 41E0     		b	.L19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 16


 378              	.L21:
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 379              		.loc 1 486 26
 380 0062 FB68     		ldr	r3, [r7, #12]
 381 0064 5B6A     		ldr	r3, [r3, #36]
 382              		.loc 1 486 6
 383 0066 002B     		cmp	r3, #0
 384 0068 03D0     		beq	.L22
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 385              		.loc 1 488 5
 386 006a FB68     		ldr	r3, [r7, #12]
 387 006c 1800     		movs	r0, r3
 388 006e FFF7FEFF 		bl	UART_AdvFeatureConfig
 389              	.L22:
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 390              		.loc 1 495 3
 391 0072 FB68     		ldr	r3, [r7, #12]
 392 0074 1B68     		ldr	r3, [r3]
 393 0076 5A68     		ldr	r2, [r3, #4]
 394 0078 FB68     		ldr	r3, [r7, #12]
 395 007a 1B68     		ldr	r3, [r3]
 396 007c 1C49     		ldr	r1, .L24
 397 007e 0A40     		ands	r2, r1
 398 0080 5A60     		str	r2, [r3, #4]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 399              		.loc 1 501 3
 400 0082 FB68     		ldr	r3, [r7, #12]
 401 0084 1B68     		ldr	r3, [r3]
 402 0086 9A68     		ldr	r2, [r3, #8]
 403 0088 FB68     		ldr	r3, [r7, #12]
 404 008a 1B68     		ldr	r3, [r3]
 405 008c 2A21     		movs	r1, #42
 406 008e 8A43     		bics	r2, r1
 407 0090 9A60     		str	r2, [r3, #8]
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 17


 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 408              		.loc 1 513 6
 409 0092 7A68     		ldr	r2, [r7, #4]
 410 0094 8023     		movs	r3, #128
 411 0096 1B01     		lsls	r3, r3, #4
 412 0098 9A42     		cmp	r2, r3
 413 009a 0CD1     		bne	.L23
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 414              		.loc 1 516 5
 415 009c FB68     		ldr	r3, [r7, #12]
 416 009e 1B68     		ldr	r3, [r3]
 417 00a0 5B68     		ldr	r3, [r3, #4]
 418 00a2 1B02     		lsls	r3, r3, #8
 419 00a4 190A     		lsrs	r1, r3, #8
 420 00a6 0B23     		movs	r3, #11
 421 00a8 FB18     		adds	r3, r7, r3
 422 00aa 1B78     		ldrb	r3, [r3]
 423 00ac 1A06     		lsls	r2, r3, #24
 424 00ae FB68     		ldr	r3, [r7, #12]
 425 00b0 1B68     		ldr	r3, [r3]
 426 00b2 0A43     		orrs	r2, r1
 427 00b4 5A60     		str	r2, [r3, #4]
 428              	.L23:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 429              		.loc 1 520 3
 430 00b6 FB68     		ldr	r3, [r7, #12]
 431 00b8 1B68     		ldr	r3, [r3]
 432 00ba 1B68     		ldr	r3, [r3]
 433 00bc 0D4A     		ldr	r2, .L24+4
 434 00be 1340     		ands	r3, r2
 435 00c0 1900     		movs	r1, r3
 436 00c2 FB68     		ldr	r3, [r7, #12]
 437 00c4 1B68     		ldr	r3, [r3]
 438 00c6 7A68     		ldr	r2, [r7, #4]
 439 00c8 0A43     		orrs	r2, r1
 440 00ca 1A60     		str	r2, [r3]
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 441              		.loc 1 523 3
 442 00cc FB68     		ldr	r3, [r7, #12]
 443 00ce 1B68     		ldr	r3, [r3]
 444 00d0 1A68     		ldr	r2, [r3]
 445 00d2 FB68     		ldr	r3, [r7, #12]
 446 00d4 1B68     		ldr	r3, [r3]
 447 00d6 0121     		movs	r1, #1
 448 00d8 0A43     		orrs	r2, r1
 449 00da 1A60     		str	r2, [r3]
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 18


 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 450              		.loc 1 526 11
 451 00dc FB68     		ldr	r3, [r7, #12]
 452 00de 1800     		movs	r0, r3
 453 00e0 FFF7FEFF 		bl	UART_CheckIdleState
 454 00e4 0300     		movs	r3, r0
 455              	.L19:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 456              		.loc 1 527 1
 457 00e6 1800     		movs	r0, r3
 458 00e8 BD46     		mov	sp, r7
 459 00ea 04B0     		add	sp, sp, #16
 460              		@ sp needed
 461 00ec 80BD     		pop	{r7, pc}
 462              	.L25:
 463 00ee C046     		.align	2
 464              	.L24:
 465 00f0 FFB7FFFF 		.word	-18433
 466 00f4 FFF7FFFF 		.word	-2049
 467              		.cfi_endproc
 468              	.LFE39:
 470              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 471              		.align	1
 472              		.global	HAL_UART_DeInit
 473              		.syntax unified
 474              		.code	16
 475              		.thumb_func
 476              		.fpu softvfp
 478              	HAL_UART_DeInit:
 479              	.LFB40:
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 480              		.loc 1 536 1
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 8
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 80B5     		push	{r7, lr}
 485              	.LCFI9:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              	.LCFI10:
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI11:
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 19


 496              		.loc 1 538 5
 497 0008 7B68     		ldr	r3, [r7, #4]
 498 000a 002B     		cmp	r3, #0
 499 000c 01D1     		bne	.L27
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 500              		.loc 1 540 12
 501 000e 0123     		movs	r3, #1
 502 0010 2BE0     		b	.L28
 503              	.L27:
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 504              		.loc 1 546 17
 505 0012 7B68     		ldr	r3, [r7, #4]
 506 0014 6922     		movs	r2, #105
 507 0016 2421     		movs	r1, #36
 508 0018 9954     		strb	r1, [r3, r2]
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 509              		.loc 1 549 3
 510 001a 7B68     		ldr	r3, [r7, #4]
 511 001c 1B68     		ldr	r3, [r3]
 512 001e 1A68     		ldr	r2, [r3]
 513 0020 7B68     		ldr	r3, [r7, #4]
 514 0022 1B68     		ldr	r3, [r3]
 515 0024 0121     		movs	r1, #1
 516 0026 8A43     		bics	r2, r1
 517 0028 1A60     		str	r2, [r3]
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 518              		.loc 1 551 8
 519 002a 7B68     		ldr	r3, [r7, #4]
 520 002c 1B68     		ldr	r3, [r3]
 521              		.loc 1 551 24
 522 002e 0022     		movs	r2, #0
 523 0030 1A60     		str	r2, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 524              		.loc 1 552 8
 525 0032 7B68     		ldr	r3, [r7, #4]
 526 0034 1B68     		ldr	r3, [r3]
 527              		.loc 1 552 24
 528 0036 0022     		movs	r2, #0
 529 0038 5A60     		str	r2, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 530              		.loc 1 553 8
 531 003a 7B68     		ldr	r3, [r7, #4]
 532 003c 1B68     		ldr	r3, [r3]
 533              		.loc 1 553 24
 534 003e 0022     		movs	r2, #0
 535 0040 9A60     		str	r2, [r3, #8]
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 20


 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 536              		.loc 1 556 3
 537 0042 7B68     		ldr	r3, [r7, #4]
 538 0044 1800     		movs	r0, r3
 539 0046 FFF7FEFF 		bl	HAL_UART_MspDeInit
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 540              		.loc 1 558 20
 541 004a 7B68     		ldr	r3, [r7, #4]
 542 004c 0022     		movs	r2, #0
 543 004e DA66     		str	r2, [r3, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 544              		.loc 1 559 20
 545 0050 7B68     		ldr	r3, [r7, #4]
 546 0052 6922     		movs	r2, #105
 547 0054 0021     		movs	r1, #0
 548 0056 9954     		strb	r1, [r3, r2]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 549              		.loc 1 560 20
 550 0058 7B68     		ldr	r3, [r7, #4]
 551 005a 6A22     		movs	r2, #106
 552 005c 0021     		movs	r1, #0
 553 005e 9954     		strb	r1, [r3, r2]
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 554              		.loc 1 563 3
 555 0060 7B68     		ldr	r3, [r7, #4]
 556 0062 6822     		movs	r2, #104
 557 0064 0021     		movs	r1, #0
 558 0066 9954     		strb	r1, [r3, r2]
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 559              		.loc 1 565 10
 560 0068 0023     		movs	r3, #0
 561              	.L28:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 562              		.loc 1 566 1
 563 006a 1800     		movs	r0, r3
 564 006c BD46     		mov	sp, r7
 565 006e 02B0     		add	sp, sp, #8
 566              		@ sp needed
 567 0070 80BD     		pop	{r7, pc}
 568              		.cfi_endproc
 569              	.LFE40:
 571              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 572              		.align	1
 573              		.weak	HAL_UART_MspInit
 574              		.syntax unified
 575              		.code	16
 576              		.thumb_func
 577              		.fpu softvfp
 579              	HAL_UART_MspInit:
 580              	.LFB41:
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 21


 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 581              		.loc 1 574 1
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585 0000 80B5     		push	{r7, lr}
 586              	.LCFI12:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 82B0     		sub	sp, sp, #8
 591              	.LCFI13:
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              	.LCFI14:
 595              		.cfi_def_cfa_register 7
 596 0006 7860     		str	r0, [r7, #4]
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597              		.loc 1 581 1
 598 0008 C046     		nop
 599 000a BD46     		mov	sp, r7
 600 000c 02B0     		add	sp, sp, #8
 601              		@ sp needed
 602 000e 80BD     		pop	{r7, pc}
 603              		.cfi_endproc
 604              	.LFE41:
 606              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 607              		.align	1
 608              		.weak	HAL_UART_MspDeInit
 609              		.syntax unified
 610              		.code	16
 611              		.thumb_func
 612              		.fpu softvfp
 614              	HAL_UART_MspDeInit:
 615              	.LFB42:
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 616              		.loc 1 589 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 22


 620 0000 80B5     		push	{r7, lr}
 621              	.LCFI15:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 82B0     		sub	sp, sp, #8
 626              	.LCFI16:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI17:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 632              		.loc 1 596 1
 633 0008 C046     		nop
 634 000a BD46     		mov	sp, r7
 635 000c 02B0     		add	sp, sp, #8
 636              		@ sp needed
 637 000e 80BD     		pop	{r7, pc}
 638              		.cfi_endproc
 639              	.LFE42:
 641              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 642              		.align	1
 643              		.global	HAL_UART_Transmit
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 647              		.fpu softvfp
 649              	HAL_UART_Transmit:
 650              	.LFB43:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 23


 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 24


 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 651              		.loc 1 692 1
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 24
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              	.LCFI18:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 88B0     		sub	sp, sp, #32
 661              	.LCFI19:
 662              		.cfi_def_cfa_offset 40
 663 0004 02AF     		add	r7, sp, #8
 664              	.LCFI20:
 665              		.cfi_def_cfa 7, 32
 666 0006 F860     		str	r0, [r7, #12]
 667 0008 B960     		str	r1, [r7, #8]
 668 000a 3B60     		str	r3, [r7]
 669 000c BB1D     		adds	r3, r7, #6
 670 000e 1A80     		strh	r2, [r3]
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 671              		.loc 1 694 12
 672 0010 0023     		movs	r3, #0
 673 0012 7B61     		str	r3, [r7, #20]
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 674              		.loc 1 697 11
 675 0014 FB68     		ldr	r3, [r7, #12]
 676 0016 6922     		movs	r2, #105
 677 0018 9B5C     		ldrb	r3, [r3, r2]
 678 001a DBB2     		uxtb	r3, r3
 679              		.loc 1 697 5
 680 001c 202B     		cmp	r3, #32
 681 001e 00D0     		beq	.LCB560
 682 0020 8CE0     		b	.L32	@long jump
 683              	.LCB560:
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 25


 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 684              		.loc 1 699 7
 685 0022 BB68     		ldr	r3, [r7, #8]
 686 0024 002B     		cmp	r3, #0
 687 0026 03D0     		beq	.L33
 688              		.loc 1 699 25 discriminator 1
 689 0028 BB1D     		adds	r3, r7, #6
 690 002a 1B88     		ldrh	r3, [r3]
 691 002c 002B     		cmp	r3, #0
 692 002e 01D1     		bne	.L34
 693              	.L33:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 694              		.loc 1 701 15
 695 0030 0123     		movs	r3, #1
 696 0032 84E0     		b	.L35
 697              	.L34:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 698              		.loc 1 707 21
 699 0034 FB68     		ldr	r3, [r7, #12]
 700 0036 9A68     		ldr	r2, [r3, #8]
 701              		.loc 1 707 8
 702 0038 8023     		movs	r3, #128
 703 003a 5B01     		lsls	r3, r3, #5
 704 003c 9A42     		cmp	r2, r3
 705 003e 09D1     		bne	.L36
 706              		.loc 1 707 71 discriminator 1
 707 0040 FB68     		ldr	r3, [r7, #12]
 708 0042 1B69     		ldr	r3, [r3, #16]
 709              		.loc 1 707 56 discriminator 1
 710 0044 002B     		cmp	r3, #0
 711 0046 05D1     		bne	.L36
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 712              		.loc 1 709 12
 713 0048 BB68     		ldr	r3, [r7, #8]
 714              		.loc 1 709 28
 715 004a 0122     		movs	r2, #1
 716 004c 1340     		ands	r3, r2
 717              		.loc 1 709 9
 718 004e 01D0     		beq	.L36
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 719              		.loc 1 711 17
 720 0050 0123     		movs	r3, #1
 721 0052 74E0     		b	.L35
 722              	.L36:
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 26


 723              		.loc 1 716 5
 724 0054 FB68     		ldr	r3, [r7, #12]
 725 0056 6822     		movs	r2, #104
 726 0058 9B5C     		ldrb	r3, [r3, r2]
 727 005a 012B     		cmp	r3, #1
 728 005c 01D1     		bne	.L37
 729              		.loc 1 716 5 is_stmt 0 discriminator 1
 730 005e 0223     		movs	r3, #2
 731 0060 6DE0     		b	.L35
 732              	.L37:
 733              		.loc 1 716 5 discriminator 2
 734 0062 FB68     		ldr	r3, [r7, #12]
 735 0064 6822     		movs	r2, #104
 736 0066 0121     		movs	r1, #1
 737 0068 9954     		strb	r1, [r3, r2]
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 738              		.loc 1 718 22 is_stmt 1 discriminator 2
 739 006a FB68     		ldr	r3, [r7, #12]
 740 006c 0022     		movs	r2, #0
 741 006e DA66     		str	r2, [r3, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 742              		.loc 1 719 19 discriminator 2
 743 0070 FB68     		ldr	r3, [r7, #12]
 744 0072 6922     		movs	r2, #105
 745 0074 2121     		movs	r1, #33
 746 0076 9954     		strb	r1, [r3, r2]
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 747              		.loc 1 722 17 discriminator 2
 748 0078 FFF7FEFF 		bl	HAL_GetTick
 749 007c 0300     		movs	r3, r0
 750 007e 7B61     		str	r3, [r7, #20]
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 751              		.loc 1 724 23 discriminator 2
 752 0080 FB68     		ldr	r3, [r7, #12]
 753 0082 BA1D     		adds	r2, r7, #6
 754 0084 5021     		movs	r1, #80
 755 0086 1288     		ldrh	r2, [r2]
 756 0088 5A52     		strh	r2, [r3, r1]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 757              		.loc 1 725 24 discriminator 2
 758 008a FB68     		ldr	r3, [r7, #12]
 759 008c BA1D     		adds	r2, r7, #6
 760 008e 5221     		movs	r1, #82
 761 0090 1288     		ldrh	r2, [r2]
 762 0092 5A52     		strh	r2, [r3, r1]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 763              		.loc 1 726 10 discriminator 2
 764 0094 35E0     		b	.L38
 765              	.L41:
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 766              		.loc 1 728 12
 767 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 27


 768 0098 5222     		movs	r2, #82
 769 009a 9B5A     		ldrh	r3, [r3, r2]
 770 009c 9BB2     		uxth	r3, r3
 771              		.loc 1 728 25
 772 009e 013B     		subs	r3, r3, #1
 773 00a0 99B2     		uxth	r1, r3
 774 00a2 FB68     		ldr	r3, [r7, #12]
 775 00a4 5222     		movs	r2, #82
 776 00a6 9952     		strh	r1, [r3, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 777              		.loc 1 729 10
 778 00a8 7A69     		ldr	r2, [r7, #20]
 779 00aa F868     		ldr	r0, [r7, #12]
 780 00ac 3B68     		ldr	r3, [r7]
 781 00ae 0093     		str	r3, [sp]
 782 00b0 1300     		movs	r3, r2
 783 00b2 0022     		movs	r2, #0
 784 00b4 8021     		movs	r1, #128
 785 00b6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 786 00ba 031E     		subs	r3, r0, #0
 787              		.loc 1 729 9
 788 00bc 01D0     		beq	.L39
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 789              		.loc 1 731 16
 790 00be 0323     		movs	r3, #3
 791 00c0 3DE0     		b	.L35
 792              	.L39:
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 793              		.loc 1 733 23
 794 00c2 FB68     		ldr	r3, [r7, #12]
 795 00c4 9A68     		ldr	r2, [r3, #8]
 796              		.loc 1 733 10
 797 00c6 8023     		movs	r3, #128
 798 00c8 5B01     		lsls	r3, r3, #5
 799 00ca 9A42     		cmp	r2, r3
 800 00cc 11D1     		bne	.L40
 801              		.loc 1 733 73 discriminator 1
 802 00ce FB68     		ldr	r3, [r7, #12]
 803 00d0 1B69     		ldr	r3, [r3, #16]
 804              		.loc 1 733 58 discriminator 1
 805 00d2 002B     		cmp	r3, #0
 806 00d4 0DD1     		bne	.L40
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 807              		.loc 1 735 13
 808 00d6 BB68     		ldr	r3, [r7, #8]
 809 00d8 3B61     		str	r3, [r7, #16]
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 810              		.loc 1 736 38
 811 00da 3B69     		ldr	r3, [r7, #16]
 812 00dc 1A88     		ldrh	r2, [r3]
 813              		.loc 1 736 14
 814 00de FB68     		ldr	r3, [r7, #12]
 815 00e0 1B68     		ldr	r3, [r3]
 816              		.loc 1 736 38
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 28


 817 00e2 D205     		lsls	r2, r2, #23
 818 00e4 D20D     		lsrs	r2, r2, #23
 819 00e6 92B2     		uxth	r2, r2
 820              		.loc 1 736 30
 821 00e8 1A85     		strh	r2, [r3, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 822              		.loc 1 737 15
 823 00ea BB68     		ldr	r3, [r7, #8]
 824 00ec 0233     		adds	r3, r3, #2
 825 00ee BB60     		str	r3, [r7, #8]
 826 00f0 07E0     		b	.L38
 827              	.L40:
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 828              		.loc 1 741 39
 829 00f2 BB68     		ldr	r3, [r7, #8]
 830 00f4 5A1C     		adds	r2, r3, #1
 831 00f6 BA60     		str	r2, [r7, #8]
 832              		.loc 1 741 33
 833 00f8 1A78     		ldrb	r2, [r3]
 834              		.loc 1 741 14
 835 00fa FB68     		ldr	r3, [r7, #12]
 836 00fc 1B68     		ldr	r3, [r3]
 837              		.loc 1 741 33
 838 00fe 92B2     		uxth	r2, r2
 839              		.loc 1 741 30
 840 0100 1A85     		strh	r2, [r3, #40]
 841              	.L38:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 842              		.loc 1 726 16
 843 0102 FB68     		ldr	r3, [r7, #12]
 844 0104 5222     		movs	r2, #82
 845 0106 9B5A     		ldrh	r3, [r3, r2]
 846 0108 9BB2     		uxth	r3, r3
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 847              		.loc 1 726 10
 848 010a 002B     		cmp	r3, #0
 849 010c C3D1     		bne	.L41
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 850              		.loc 1 744 8
 851 010e 7A69     		ldr	r2, [r7, #20]
 852 0110 F868     		ldr	r0, [r7, #12]
 853 0112 3B68     		ldr	r3, [r7]
 854 0114 0093     		str	r3, [sp]
 855 0116 1300     		movs	r3, r2
 856 0118 0022     		movs	r2, #0
 857 011a 4021     		movs	r1, #64
 858 011c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 859 0120 031E     		subs	r3, r0, #0
 860              		.loc 1 744 7
 861 0122 01D0     		beq	.L42
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 29


 862              		.loc 1 746 14
 863 0124 0323     		movs	r3, #3
 864 0126 0AE0     		b	.L35
 865              	.L42:
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 866              		.loc 1 750 19
 867 0128 FB68     		ldr	r3, [r7, #12]
 868 012a 6922     		movs	r2, #105
 869 012c 2021     		movs	r1, #32
 870 012e 9954     		strb	r1, [r3, r2]
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 871              		.loc 1 753 5
 872 0130 FB68     		ldr	r3, [r7, #12]
 873 0132 6822     		movs	r2, #104
 874 0134 0021     		movs	r1, #0
 875 0136 9954     		strb	r1, [r3, r2]
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 876              		.loc 1 755 12
 877 0138 0023     		movs	r3, #0
 878 013a 00E0     		b	.L35
 879              	.L32:
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 880              		.loc 1 759 12
 881 013c 0223     		movs	r3, #2
 882              	.L35:
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 883              		.loc 1 761 1
 884 013e 1800     		movs	r0, r3
 885 0140 BD46     		mov	sp, r7
 886 0142 06B0     		add	sp, sp, #24
 887              		@ sp needed
 888 0144 80BD     		pop	{r7, pc}
 889              		.cfi_endproc
 890              	.LFE43:
 892              		.section	.text.HAL_UART_Receive,"ax",%progbits
 893              		.align	1
 894              		.global	HAL_UART_Receive
 895              		.syntax unified
 896              		.code	16
 897              		.thumb_func
 898              		.fpu softvfp
 900              	HAL_UART_Receive:
 901              	.LFB44:
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 30


 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 902              		.loc 1 776 1
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 32
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 80B5     		push	{r7, lr}
 907              	.LCFI21:
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0002 8AB0     		sub	sp, sp, #40
 912              	.LCFI22:
 913              		.cfi_def_cfa_offset 48
 914 0004 02AF     		add	r7, sp, #8
 915              	.LCFI23:
 916              		.cfi_def_cfa 7, 40
 917 0006 F860     		str	r0, [r7, #12]
 918 0008 B960     		str	r1, [r7, #8]
 919 000a 3B60     		str	r3, [r7]
 920 000c BB1D     		adds	r3, r7, #6
 921 000e 1A80     		strh	r2, [r3]
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 922              		.loc 1 779 12
 923 0010 0023     		movs	r3, #0
 924 0012 FB61     		str	r3, [r7, #28]
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 925              		.loc 1 782 11
 926 0014 FB68     		ldr	r3, [r7, #12]
 927 0016 6A22     		movs	r2, #106
 928 0018 9B5C     		ldrb	r3, [r3, r2]
 929 001a DBB2     		uxtb	r3, r3
 930              		.loc 1 782 5
 931 001c 202B     		cmp	r3, #32
 932 001e 00D0     		beq	.LCB770
 933 0020 C8E0     		b	.L44	@long jump
 934              	.LCB770:
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 935              		.loc 1 784 7
 936 0022 BB68     		ldr	r3, [r7, #8]
 937 0024 002B     		cmp	r3, #0
 938 0026 03D0     		beq	.L45
 939              		.loc 1 784 25 discriminator 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 31


 940 0028 BB1D     		adds	r3, r7, #6
 941 002a 1B88     		ldrh	r3, [r3]
 942 002c 002B     		cmp	r3, #0
 943 002e 01D1     		bne	.L46
 944              	.L45:
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 945              		.loc 1 786 15
 946 0030 0123     		movs	r3, #1
 947 0032 C0E0     		b	.L47
 948              	.L46:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 949              		.loc 1 792 21
 950 0034 FB68     		ldr	r3, [r7, #12]
 951 0036 9A68     		ldr	r2, [r3, #8]
 952              		.loc 1 792 8
 953 0038 8023     		movs	r3, #128
 954 003a 5B01     		lsls	r3, r3, #5
 955 003c 9A42     		cmp	r2, r3
 956 003e 09D1     		bne	.L48
 957              		.loc 1 792 71 discriminator 1
 958 0040 FB68     		ldr	r3, [r7, #12]
 959 0042 1B69     		ldr	r3, [r3, #16]
 960              		.loc 1 792 56 discriminator 1
 961 0044 002B     		cmp	r3, #0
 962 0046 05D1     		bne	.L48
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 963              		.loc 1 794 12
 964 0048 BB68     		ldr	r3, [r7, #8]
 965              		.loc 1 794 28
 966 004a 0122     		movs	r2, #1
 967 004c 1340     		ands	r3, r2
 968              		.loc 1 794 9
 969 004e 01D0     		beq	.L48
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 970              		.loc 1 796 17
 971 0050 0123     		movs	r3, #1
 972 0052 B0E0     		b	.L47
 973              	.L48:
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 974              		.loc 1 801 5
 975 0054 FB68     		ldr	r3, [r7, #12]
 976 0056 6822     		movs	r2, #104
 977 0058 9B5C     		ldrb	r3, [r3, r2]
 978 005a 012B     		cmp	r3, #1
 979 005c 01D1     		bne	.L49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 32


 980              		.loc 1 801 5 is_stmt 0 discriminator 1
 981 005e 0223     		movs	r3, #2
 982 0060 A9E0     		b	.L47
 983              	.L49:
 984              		.loc 1 801 5 discriminator 2
 985 0062 FB68     		ldr	r3, [r7, #12]
 986 0064 6822     		movs	r2, #104
 987 0066 0121     		movs	r1, #1
 988 0068 9954     		strb	r1, [r3, r2]
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 989              		.loc 1 803 22 is_stmt 1 discriminator 2
 990 006a FB68     		ldr	r3, [r7, #12]
 991 006c 0022     		movs	r2, #0
 992 006e DA66     		str	r2, [r3, #108]
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 993              		.loc 1 804 20 discriminator 2
 994 0070 FB68     		ldr	r3, [r7, #12]
 995 0072 6A22     		movs	r2, #106
 996 0074 2221     		movs	r1, #34
 997 0076 9954     		strb	r1, [r3, r2]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 998              		.loc 1 807 17 discriminator 2
 999 0078 FFF7FEFF 		bl	HAL_GetTick
 1000 007c 0300     		movs	r3, r0
 1001 007e FB61     		str	r3, [r7, #28]
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 1002              		.loc 1 809 23 discriminator 2
 1003 0080 FB68     		ldr	r3, [r7, #12]
 1004 0082 BA1D     		adds	r2, r7, #6
 1005 0084 5821     		movs	r1, #88
 1006 0086 1288     		ldrh	r2, [r2]
 1007 0088 5A52     		strh	r2, [r3, r1]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 1008              		.loc 1 810 24 discriminator 2
 1009 008a FB68     		ldr	r3, [r7, #12]
 1010 008c BA1D     		adds	r2, r7, #6
 1011 008e 5A21     		movs	r1, #90
 1012 0090 1288     		ldrh	r2, [r2]
 1013 0092 5A52     		strh	r2, [r3, r1]
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1014              		.loc 1 813 5 discriminator 2
 1015 0094 FB68     		ldr	r3, [r7, #12]
 1016 0096 9A68     		ldr	r2, [r3, #8]
 1017 0098 8023     		movs	r3, #128
 1018 009a 5B01     		lsls	r3, r3, #5
 1019 009c 9A42     		cmp	r2, r3
 1020 009e 0DD1     		bne	.L50
 1021              		.loc 1 813 5 is_stmt 0 discriminator 1
 1022 00a0 FB68     		ldr	r3, [r7, #12]
 1023 00a2 1B69     		ldr	r3, [r3, #16]
 1024 00a4 002B     		cmp	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 33


 1025 00a6 04D1     		bne	.L51
 1026              		.loc 1 813 5 discriminator 3
 1027 00a8 FB68     		ldr	r3, [r7, #12]
 1028 00aa 5C22     		movs	r2, #92
 1029 00ac 4449     		ldr	r1, .L60
 1030 00ae 9952     		strh	r1, [r3, r2]
 1031 00b0 29E0     		b	.L52
 1032              	.L51:
 1033              		.loc 1 813 5 discriminator 4
 1034 00b2 FB68     		ldr	r3, [r7, #12]
 1035 00b4 5C22     		movs	r2, #92
 1036 00b6 FF21     		movs	r1, #255
 1037 00b8 9952     		strh	r1, [r3, r2]
 1038 00ba 24E0     		b	.L52
 1039              	.L50:
 1040              		.loc 1 813 5 discriminator 2
 1041 00bc FB68     		ldr	r3, [r7, #12]
 1042 00be 9B68     		ldr	r3, [r3, #8]
 1043 00c0 002B     		cmp	r3, #0
 1044 00c2 0DD1     		bne	.L53
 1045              		.loc 1 813 5 discriminator 5
 1046 00c4 FB68     		ldr	r3, [r7, #12]
 1047 00c6 1B69     		ldr	r3, [r3, #16]
 1048 00c8 002B     		cmp	r3, #0
 1049 00ca 04D1     		bne	.L54
 1050              		.loc 1 813 5 discriminator 7
 1051 00cc FB68     		ldr	r3, [r7, #12]
 1052 00ce 5C22     		movs	r2, #92
 1053 00d0 FF21     		movs	r1, #255
 1054 00d2 9952     		strh	r1, [r3, r2]
 1055 00d4 17E0     		b	.L52
 1056              	.L54:
 1057              		.loc 1 813 5 discriminator 8
 1058 00d6 FB68     		ldr	r3, [r7, #12]
 1059 00d8 5C22     		movs	r2, #92
 1060 00da 7F21     		movs	r1, #127
 1061 00dc 9952     		strh	r1, [r3, r2]
 1062 00de 12E0     		b	.L52
 1063              	.L53:
 1064              		.loc 1 813 5 discriminator 6
 1065 00e0 FB68     		ldr	r3, [r7, #12]
 1066 00e2 9A68     		ldr	r2, [r3, #8]
 1067 00e4 8023     		movs	r3, #128
 1068 00e6 5B05     		lsls	r3, r3, #21
 1069 00e8 9A42     		cmp	r2, r3
 1070 00ea 0CD1     		bne	.L52
 1071              		.loc 1 813 5 discriminator 9
 1072 00ec FB68     		ldr	r3, [r7, #12]
 1073 00ee 1B69     		ldr	r3, [r3, #16]
 1074 00f0 002B     		cmp	r3, #0
 1075 00f2 04D1     		bne	.L55
 1076              		.loc 1 813 5 discriminator 10
 1077 00f4 FB68     		ldr	r3, [r7, #12]
 1078 00f6 5C22     		movs	r2, #92
 1079 00f8 7F21     		movs	r1, #127
 1080 00fa 9952     		strh	r1, [r3, r2]
 1081 00fc 03E0     		b	.L52
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 34


 1082              	.L55:
 1083              		.loc 1 813 5 discriminator 11
 1084 00fe FB68     		ldr	r3, [r7, #12]
 1085 0100 5C22     		movs	r2, #92
 1086 0102 3F21     		movs	r1, #63
 1087 0104 9952     		strh	r1, [r3, r2]
 1088              	.L52:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 1089              		.loc 1 814 12 is_stmt 1
 1090 0106 1A23     		movs	r3, #26
 1091 0108 FB18     		adds	r3, r7, r3
 1092 010a FA68     		ldr	r2, [r7, #12]
 1093 010c 5C21     		movs	r1, #92
 1094 010e 525A     		ldrh	r2, [r2, r1]
 1095 0110 1A80     		strh	r2, [r3]
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1096              		.loc 1 817 10
 1097 0112 3FE0     		b	.L56
 1098              	.L59:
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 1099              		.loc 1 819 12
 1100 0114 FB68     		ldr	r3, [r7, #12]
 1101 0116 5A22     		movs	r2, #90
 1102 0118 9B5A     		ldrh	r3, [r3, r2]
 1103 011a 9BB2     		uxth	r3, r3
 1104              		.loc 1 819 25
 1105 011c 013B     		subs	r3, r3, #1
 1106 011e 99B2     		uxth	r1, r3
 1107 0120 FB68     		ldr	r3, [r7, #12]
 1108 0122 5A22     		movs	r2, #90
 1109 0124 9952     		strh	r1, [r3, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1110              		.loc 1 820 10
 1111 0126 FA69     		ldr	r2, [r7, #28]
 1112 0128 F868     		ldr	r0, [r7, #12]
 1113 012a 3B68     		ldr	r3, [r7]
 1114 012c 0093     		str	r3, [sp]
 1115 012e 1300     		movs	r3, r2
 1116 0130 0022     		movs	r2, #0
 1117 0132 2021     		movs	r1, #32
 1118 0134 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1119 0138 031E     		subs	r3, r0, #0
 1120              		.loc 1 820 9
 1121 013a 01D0     		beq	.L57
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 1122              		.loc 1 822 16
 1123 013c 0323     		movs	r3, #3
 1124 013e 3AE0     		b	.L47
 1125              	.L57:
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1126              		.loc 1 824 23
 1127 0140 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 35


 1128 0142 9A68     		ldr	r2, [r3, #8]
 1129              		.loc 1 824 10
 1130 0144 8023     		movs	r3, #128
 1131 0146 5B01     		lsls	r3, r3, #5
 1132 0148 9A42     		cmp	r2, r3
 1133 014a 14D1     		bne	.L58
 1134              		.loc 1 824 73 discriminator 1
 1135 014c FB68     		ldr	r3, [r7, #12]
 1136 014e 1B69     		ldr	r3, [r3, #16]
 1137              		.loc 1 824 58 discriminator 1
 1138 0150 002B     		cmp	r3, #0
 1139 0152 10D1     		bne	.L58
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1140              		.loc 1 826 13
 1141 0154 BB68     		ldr	r3, [r7, #8]
 1142 0156 7B61     		str	r3, [r7, #20]
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1143              		.loc 1 827 32
 1144 0158 FB68     		ldr	r3, [r7, #12]
 1145 015a 1B68     		ldr	r3, [r3]
 1146              		.loc 1 827 42
 1147 015c 9B8C     		ldrh	r3, [r3, #36]
 1148 015e 9BB2     		uxth	r3, r3
 1149              		.loc 1 827 16
 1150 0160 1A22     		movs	r2, #26
 1151 0162 BA18     		adds	r2, r7, r2
 1152 0164 1288     		ldrh	r2, [r2]
 1153 0166 1340     		ands	r3, r2
 1154 0168 9AB2     		uxth	r2, r3
 1155              		.loc 1 827 14
 1156 016a 7B69     		ldr	r3, [r7, #20]
 1157 016c 1A80     		strh	r2, [r3]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 1158              		.loc 1 828 15
 1159 016e BB68     		ldr	r3, [r7, #8]
 1160 0170 0233     		adds	r3, r3, #2
 1161 0172 BB60     		str	r3, [r7, #8]
 1162 0174 0EE0     		b	.L56
 1163              	.L58:
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1164              		.loc 1 832 35
 1165 0176 FB68     		ldr	r3, [r7, #12]
 1166 0178 1B68     		ldr	r3, [r3]
 1167              		.loc 1 832 45
 1168 017a 9B8C     		ldrh	r3, [r3, #36]
 1169 017c 9BB2     		uxth	r3, r3
 1170              		.loc 1 832 20
 1171 017e DAB2     		uxtb	r2, r3
 1172              		.loc 1 832 53
 1173 0180 1A23     		movs	r3, #26
 1174 0182 FB18     		adds	r3, r7, r3
 1175 0184 1B88     		ldrh	r3, [r3]
 1176 0186 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 36


 1177              		.loc 1 832 15
 1178 0188 BB68     		ldr	r3, [r7, #8]
 1179 018a 581C     		adds	r0, r3, #1
 1180 018c B860     		str	r0, [r7, #8]
 1181              		.loc 1 832 20
 1182 018e 0A40     		ands	r2, r1
 1183 0190 D2B2     		uxtb	r2, r2
 1184              		.loc 1 832 18
 1185 0192 1A70     		strb	r2, [r3]
 1186              	.L56:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1187              		.loc 1 817 16
 1188 0194 FB68     		ldr	r3, [r7, #12]
 1189 0196 5A22     		movs	r2, #90
 1190 0198 9B5A     		ldrh	r3, [r3, r2]
 1191 019a 9BB2     		uxth	r3, r3
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1192              		.loc 1 817 10
 1193 019c 002B     		cmp	r3, #0
 1194 019e B9D1     		bne	.L59
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1195              		.loc 1 837 20
 1196 01a0 FB68     		ldr	r3, [r7, #12]
 1197 01a2 6A22     		movs	r2, #106
 1198 01a4 2021     		movs	r1, #32
 1199 01a6 9954     		strb	r1, [r3, r2]
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1200              		.loc 1 840 5
 1201 01a8 FB68     		ldr	r3, [r7, #12]
 1202 01aa 6822     		movs	r2, #104
 1203 01ac 0021     		movs	r1, #0
 1204 01ae 9954     		strb	r1, [r3, r2]
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1205              		.loc 1 842 12
 1206 01b0 0023     		movs	r3, #0
 1207 01b2 00E0     		b	.L47
 1208              	.L44:
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1209              		.loc 1 846 12
 1210 01b4 0223     		movs	r3, #2
 1211              	.L47:
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1212              		.loc 1 848 1
 1213 01b6 1800     		movs	r0, r3
 1214 01b8 BD46     		mov	sp, r7
 1215 01ba 08B0     		add	sp, sp, #32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 37


 1216              		@ sp needed
 1217 01bc 80BD     		pop	{r7, pc}
 1218              	.L61:
 1219 01be C046     		.align	2
 1220              	.L60:
 1221 01c0 FF010000 		.word	511
 1222              		.cfi_endproc
 1223              	.LFE44:
 1225              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1226              		.align	1
 1227              		.global	HAL_UART_Transmit_IT
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1231              		.fpu softvfp
 1233              	HAL_UART_Transmit_IT:
 1234              	.LFB45:
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1235              		.loc 1 862 1
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 16
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239 0000 80B5     		push	{r7, lr}
 1240              	.LCFI24:
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 7, -8
 1243              		.cfi_offset 14, -4
 1244 0002 84B0     		sub	sp, sp, #16
 1245              	.LCFI25:
 1246              		.cfi_def_cfa_offset 24
 1247 0004 00AF     		add	r7, sp, #0
 1248              	.LCFI26:
 1249              		.cfi_def_cfa_register 7
 1250 0006 F860     		str	r0, [r7, #12]
 1251 0008 B960     		str	r1, [r7, #8]
 1252 000a BB1D     		adds	r3, r7, #6
 1253 000c 1A80     		strh	r2, [r3]
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1254              		.loc 1 864 11
 1255 000e FB68     		ldr	r3, [r7, #12]
 1256 0010 6922     		movs	r2, #105
 1257 0012 9B5C     		ldrb	r3, [r3, r2]
 1258 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 38


 1259              		.loc 1 864 5
 1260 0016 202B     		cmp	r3, #32
 1261 0018 45D1     		bne	.L63
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1262              		.loc 1 866 7
 1263 001a BB68     		ldr	r3, [r7, #8]
 1264 001c 002B     		cmp	r3, #0
 1265 001e 03D0     		beq	.L64
 1266              		.loc 1 866 25 discriminator 1
 1267 0020 BB1D     		adds	r3, r7, #6
 1268 0022 1B88     		ldrh	r3, [r3]
 1269 0024 002B     		cmp	r3, #0
 1270 0026 01D1     		bne	.L65
 1271              	.L64:
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1272              		.loc 1 868 14
 1273 0028 0123     		movs	r3, #1
 1274 002a 3DE0     		b	.L66
 1275              	.L65:
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1276              		.loc 1 874 21
 1277 002c FB68     		ldr	r3, [r7, #12]
 1278 002e 9A68     		ldr	r2, [r3, #8]
 1279              		.loc 1 874 8
 1280 0030 8023     		movs	r3, #128
 1281 0032 5B01     		lsls	r3, r3, #5
 1282 0034 9A42     		cmp	r2, r3
 1283 0036 09D1     		bne	.L67
 1284              		.loc 1 874 71 discriminator 1
 1285 0038 FB68     		ldr	r3, [r7, #12]
 1286 003a 1B69     		ldr	r3, [r3, #16]
 1287              		.loc 1 874 56 discriminator 1
 1288 003c 002B     		cmp	r3, #0
 1289 003e 05D1     		bne	.L67
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 1290              		.loc 1 876 12
 1291 0040 BB68     		ldr	r3, [r7, #8]
 1292              		.loc 1 876 28
 1293 0042 0122     		movs	r2, #1
 1294 0044 1340     		ands	r3, r2
 1295              		.loc 1 876 9
 1296 0046 01D0     		beq	.L67
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1297              		.loc 1 878 17
 1298 0048 0123     		movs	r3, #1
 1299 004a 2DE0     		b	.L66
 1300              	.L67:
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 39


 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1301              		.loc 1 883 5
 1302 004c FB68     		ldr	r3, [r7, #12]
 1303 004e 6822     		movs	r2, #104
 1304 0050 9B5C     		ldrb	r3, [r3, r2]
 1305 0052 012B     		cmp	r3, #1
 1306 0054 01D1     		bne	.L68
 1307              		.loc 1 883 5 is_stmt 0 discriminator 1
 1308 0056 0223     		movs	r3, #2
 1309 0058 26E0     		b	.L66
 1310              	.L68:
 1311              		.loc 1 883 5 discriminator 2
 1312 005a FB68     		ldr	r3, [r7, #12]
 1313 005c 6822     		movs	r2, #104
 1314 005e 0121     		movs	r1, #1
 1315 0060 9954     		strb	r1, [r3, r2]
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1316              		.loc 1 885 23 is_stmt 1 discriminator 2
 1317 0062 FB68     		ldr	r3, [r7, #12]
 1318 0064 BA68     		ldr	r2, [r7, #8]
 1319 0066 DA64     		str	r2, [r3, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 1320              		.loc 1 886 23 discriminator 2
 1321 0068 FB68     		ldr	r3, [r7, #12]
 1322 006a BA1D     		adds	r2, r7, #6
 1323 006c 5021     		movs	r1, #80
 1324 006e 1288     		ldrh	r2, [r2]
 1325 0070 5A52     		strh	r2, [r3, r1]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1326              		.loc 1 887 24 discriminator 2
 1327 0072 FB68     		ldr	r3, [r7, #12]
 1328 0074 BA1D     		adds	r2, r7, #6
 1329 0076 5221     		movs	r1, #82
 1330 0078 1288     		ldrh	r2, [r2]
 1331 007a 5A52     		strh	r2, [r3, r1]
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1332              		.loc 1 889 22 discriminator 2
 1333 007c FB68     		ldr	r3, [r7, #12]
 1334 007e 0022     		movs	r2, #0
 1335 0080 DA66     		str	r2, [r3, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1336              		.loc 1 890 19 discriminator 2
 1337 0082 FB68     		ldr	r3, [r7, #12]
 1338 0084 6922     		movs	r2, #105
 1339 0086 2121     		movs	r1, #33
 1340 0088 9954     		strb	r1, [r3, r2]
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1341              		.loc 1 893 5 discriminator 2
 1342 008a FB68     		ldr	r3, [r7, #12]
 1343 008c 6822     		movs	r2, #104
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 40


 1344 008e 0021     		movs	r1, #0
 1345 0090 9954     		strb	r1, [r3, r2]
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1346              		.loc 1 896 5 discriminator 2
 1347 0092 FB68     		ldr	r3, [r7, #12]
 1348 0094 1B68     		ldr	r3, [r3]
 1349 0096 1A68     		ldr	r2, [r3]
 1350 0098 FB68     		ldr	r3, [r7, #12]
 1351 009a 1B68     		ldr	r3, [r3]
 1352 009c 8021     		movs	r1, #128
 1353 009e 0A43     		orrs	r2, r1
 1354 00a0 1A60     		str	r2, [r3]
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1355              		.loc 1 898 12 discriminator 2
 1356 00a2 0023     		movs	r3, #0
 1357 00a4 00E0     		b	.L66
 1358              	.L63:
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1359              		.loc 1 902 12
 1360 00a6 0223     		movs	r3, #2
 1361              	.L66:
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1362              		.loc 1 904 1
 1363 00a8 1800     		movs	r0, r3
 1364 00aa BD46     		mov	sp, r7
 1365 00ac 04B0     		add	sp, sp, #16
 1366              		@ sp needed
 1367 00ae 80BD     		pop	{r7, pc}
 1368              		.cfi_endproc
 1369              	.LFE45:
 1371              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1372              		.align	1
 1373              		.global	HAL_UART_Receive_IT
 1374              		.syntax unified
 1375              		.code	16
 1376              		.thumb_func
 1377              		.fpu softvfp
 1379              	HAL_UART_Receive_IT:
 1380              	.LFB46:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 41


 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1381              		.loc 1 918 1
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 16
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              	.LCFI27:
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 84B0     		sub	sp, sp, #16
 1391              	.LCFI28:
 1392              		.cfi_def_cfa_offset 24
 1393 0004 00AF     		add	r7, sp, #0
 1394              	.LCFI29:
 1395              		.cfi_def_cfa_register 7
 1396 0006 F860     		str	r0, [r7, #12]
 1397 0008 B960     		str	r1, [r7, #8]
 1398 000a BB1D     		adds	r3, r7, #6
 1399 000c 1A80     		strh	r2, [r3]
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1400              		.loc 1 920 11
 1401 000e FB68     		ldr	r3, [r7, #12]
 1402 0010 6A22     		movs	r2, #106
 1403 0012 9B5C     		ldrb	r3, [r3, r2]
 1404 0014 DBB2     		uxtb	r3, r3
 1405              		.loc 1 920 5
 1406 0016 202B     		cmp	r3, #32
 1407 0018 00D0     		beq	.LCB1181
 1408 001a 87E0     		b	.L70	@long jump
 1409              	.LCB1181:
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1410              		.loc 1 922 7
 1411 001c BB68     		ldr	r3, [r7, #8]
 1412 001e 002B     		cmp	r3, #0
 1413 0020 03D0     		beq	.L71
 1414              		.loc 1 922 25 discriminator 1
 1415 0022 BB1D     		adds	r3, r7, #6
 1416 0024 1B88     		ldrh	r3, [r3]
 1417 0026 002B     		cmp	r3, #0
 1418 0028 01D1     		bne	.L72
 1419              	.L71:
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1420              		.loc 1 924 14
 1421 002a 0123     		movs	r3, #1
 1422 002c 7FE0     		b	.L73
 1423              	.L72:
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 42


 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1424              		.loc 1 930 21
 1425 002e FB68     		ldr	r3, [r7, #12]
 1426 0030 9A68     		ldr	r2, [r3, #8]
 1427              		.loc 1 930 8
 1428 0032 8023     		movs	r3, #128
 1429 0034 5B01     		lsls	r3, r3, #5
 1430 0036 9A42     		cmp	r2, r3
 1431 0038 09D1     		bne	.L74
 1432              		.loc 1 930 71 discriminator 1
 1433 003a FB68     		ldr	r3, [r7, #12]
 1434 003c 1B69     		ldr	r3, [r3, #16]
 1435              		.loc 1 930 56 discriminator 1
 1436 003e 002B     		cmp	r3, #0
 1437 0040 05D1     		bne	.L74
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 1438              		.loc 1 932 12
 1439 0042 BB68     		ldr	r3, [r7, #8]
 1440              		.loc 1 932 28
 1441 0044 0122     		movs	r2, #1
 1442 0046 1340     		ands	r3, r2
 1443              		.loc 1 932 9
 1444 0048 01D0     		beq	.L74
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1445              		.loc 1 934 17
 1446 004a 0123     		movs	r3, #1
 1447 004c 6FE0     		b	.L73
 1448              	.L74:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1449              		.loc 1 939 5
 1450 004e FB68     		ldr	r3, [r7, #12]
 1451 0050 6822     		movs	r2, #104
 1452 0052 9B5C     		ldrb	r3, [r3, r2]
 1453 0054 012B     		cmp	r3, #1
 1454 0056 01D1     		bne	.L75
 1455              		.loc 1 939 5 is_stmt 0 discriminator 1
 1456 0058 0223     		movs	r3, #2
 1457 005a 68E0     		b	.L73
 1458              	.L75:
 1459              		.loc 1 939 5 discriminator 2
 1460 005c FB68     		ldr	r3, [r7, #12]
 1461 005e 6822     		movs	r2, #104
 1462 0060 0121     		movs	r1, #1
 1463 0062 9954     		strb	r1, [r3, r2]
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1464              		.loc 1 941 23 is_stmt 1 discriminator 2
 1465 0064 FB68     		ldr	r3, [r7, #12]
 1466 0066 BA68     		ldr	r2, [r7, #8]
 1467 0068 5A65     		str	r2, [r3, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 43


 1468              		.loc 1 942 23 discriminator 2
 1469 006a FB68     		ldr	r3, [r7, #12]
 1470 006c BA1D     		adds	r2, r7, #6
 1471 006e 5821     		movs	r1, #88
 1472 0070 1288     		ldrh	r2, [r2]
 1473 0072 5A52     		strh	r2, [r3, r1]
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 1474              		.loc 1 943 24 discriminator 2
 1475 0074 FB68     		ldr	r3, [r7, #12]
 1476 0076 BA1D     		adds	r2, r7, #6
 1477 0078 5A21     		movs	r1, #90
 1478 007a 1288     		ldrh	r2, [r2]
 1479 007c 5A52     		strh	r2, [r3, r1]
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1480              		.loc 1 946 5 discriminator 2
 1481 007e FB68     		ldr	r3, [r7, #12]
 1482 0080 9A68     		ldr	r2, [r3, #8]
 1483 0082 8023     		movs	r3, #128
 1484 0084 5B01     		lsls	r3, r3, #5
 1485 0086 9A42     		cmp	r2, r3
 1486 0088 0DD1     		bne	.L76
 1487              		.loc 1 946 5 is_stmt 0 discriminator 1
 1488 008a FB68     		ldr	r3, [r7, #12]
 1489 008c 1B69     		ldr	r3, [r3, #16]
 1490 008e 002B     		cmp	r3, #0
 1491 0090 04D1     		bne	.L77
 1492              		.loc 1 946 5 discriminator 3
 1493 0092 FB68     		ldr	r3, [r7, #12]
 1494 0094 5C22     		movs	r2, #92
 1495 0096 2849     		ldr	r1, .L82
 1496 0098 9952     		strh	r1, [r3, r2]
 1497 009a 29E0     		b	.L78
 1498              	.L77:
 1499              		.loc 1 946 5 discriminator 4
 1500 009c FB68     		ldr	r3, [r7, #12]
 1501 009e 5C22     		movs	r2, #92
 1502 00a0 FF21     		movs	r1, #255
 1503 00a2 9952     		strh	r1, [r3, r2]
 1504 00a4 24E0     		b	.L78
 1505              	.L76:
 1506              		.loc 1 946 5 discriminator 2
 1507 00a6 FB68     		ldr	r3, [r7, #12]
 1508 00a8 9B68     		ldr	r3, [r3, #8]
 1509 00aa 002B     		cmp	r3, #0
 1510 00ac 0DD1     		bne	.L79
 1511              		.loc 1 946 5 discriminator 5
 1512 00ae FB68     		ldr	r3, [r7, #12]
 1513 00b0 1B69     		ldr	r3, [r3, #16]
 1514 00b2 002B     		cmp	r3, #0
 1515 00b4 04D1     		bne	.L80
 1516              		.loc 1 946 5 discriminator 7
 1517 00b6 FB68     		ldr	r3, [r7, #12]
 1518 00b8 5C22     		movs	r2, #92
 1519 00ba FF21     		movs	r1, #255
 1520 00bc 9952     		strh	r1, [r3, r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 44


 1521 00be 17E0     		b	.L78
 1522              	.L80:
 1523              		.loc 1 946 5 discriminator 8
 1524 00c0 FB68     		ldr	r3, [r7, #12]
 1525 00c2 5C22     		movs	r2, #92
 1526 00c4 7F21     		movs	r1, #127
 1527 00c6 9952     		strh	r1, [r3, r2]
 1528 00c8 12E0     		b	.L78
 1529              	.L79:
 1530              		.loc 1 946 5 discriminator 6
 1531 00ca FB68     		ldr	r3, [r7, #12]
 1532 00cc 9A68     		ldr	r2, [r3, #8]
 1533 00ce 8023     		movs	r3, #128
 1534 00d0 5B05     		lsls	r3, r3, #21
 1535 00d2 9A42     		cmp	r2, r3
 1536 00d4 0CD1     		bne	.L78
 1537              		.loc 1 946 5 discriminator 9
 1538 00d6 FB68     		ldr	r3, [r7, #12]
 1539 00d8 1B69     		ldr	r3, [r3, #16]
 1540 00da 002B     		cmp	r3, #0
 1541 00dc 04D1     		bne	.L81
 1542              		.loc 1 946 5 discriminator 10
 1543 00de FB68     		ldr	r3, [r7, #12]
 1544 00e0 5C22     		movs	r2, #92
 1545 00e2 7F21     		movs	r1, #127
 1546 00e4 9952     		strh	r1, [r3, r2]
 1547 00e6 03E0     		b	.L78
 1548              	.L81:
 1549              		.loc 1 946 5 discriminator 11
 1550 00e8 FB68     		ldr	r3, [r7, #12]
 1551 00ea 5C22     		movs	r2, #92
 1552 00ec 3F21     		movs	r1, #63
 1553 00ee 9952     		strh	r1, [r3, r2]
 1554              	.L78:
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1555              		.loc 1 948 22 is_stmt 1
 1556 00f0 FB68     		ldr	r3, [r7, #12]
 1557 00f2 0022     		movs	r2, #0
 1558 00f4 DA66     		str	r2, [r3, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1559              		.loc 1 949 20
 1560 00f6 FB68     		ldr	r3, [r7, #12]
 1561 00f8 6A22     		movs	r2, #106
 1562 00fa 2221     		movs	r1, #34
 1563 00fc 9954     		strb	r1, [r3, r2]
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1564              		.loc 1 952 5
 1565 00fe FB68     		ldr	r3, [r7, #12]
 1566 0100 6822     		movs	r2, #104
 1567 0102 0021     		movs	r1, #0
 1568 0104 9954     		strb	r1, [r3, r2]
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 45


 1569              		.loc 1 955 5
 1570 0106 FB68     		ldr	r3, [r7, #12]
 1571 0108 1B68     		ldr	r3, [r3]
 1572 010a 9A68     		ldr	r2, [r3, #8]
 1573 010c FB68     		ldr	r3, [r7, #12]
 1574 010e 1B68     		ldr	r3, [r3]
 1575 0110 0121     		movs	r1, #1
 1576 0112 0A43     		orrs	r2, r1
 1577 0114 9A60     		str	r2, [r3, #8]
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1578              		.loc 1 958 5
 1579 0116 FB68     		ldr	r3, [r7, #12]
 1580 0118 1B68     		ldr	r3, [r3]
 1581 011a 1A68     		ldr	r2, [r3]
 1582 011c FB68     		ldr	r3, [r7, #12]
 1583 011e 1B68     		ldr	r3, [r3]
 1584 0120 9021     		movs	r1, #144
 1585 0122 4900     		lsls	r1, r1, #1
 1586 0124 0A43     		orrs	r2, r1
 1587 0126 1A60     		str	r2, [r3]
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1588              		.loc 1 960 12
 1589 0128 0023     		movs	r3, #0
 1590 012a 00E0     		b	.L73
 1591              	.L70:
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1592              		.loc 1 964 12
 1593 012c 0223     		movs	r3, #2
 1594              	.L73:
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1595              		.loc 1 966 1
 1596 012e 1800     		movs	r0, r3
 1597 0130 BD46     		mov	sp, r7
 1598 0132 04B0     		add	sp, sp, #16
 1599              		@ sp needed
 1600 0134 80BD     		pop	{r7, pc}
 1601              	.L83:
 1602 0136 C046     		.align	2
 1603              	.L82:
 1604 0138 FF010000 		.word	511
 1605              		.cfi_endproc
 1606              	.LFE46:
 1608              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1609              		.align	1
 1610              		.global	HAL_UART_Transmit_DMA
 1611              		.syntax unified
 1612              		.code	16
 1613              		.thumb_func
 1614              		.fpu softvfp
 1616              	HAL_UART_Transmit_DMA:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 46


 1617              	.LFB47:
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1618              		.loc 1 980 1
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 16
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 80B5     		push	{r7, lr}
 1623              	.LCFI30:
 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 84B0     		sub	sp, sp, #16
 1628              	.LCFI31:
 1629              		.cfi_def_cfa_offset 24
 1630 0004 00AF     		add	r7, sp, #0
 1631              	.LCFI32:
 1632              		.cfi_def_cfa_register 7
 1633 0006 F860     		str	r0, [r7, #12]
 1634 0008 B960     		str	r1, [r7, #8]
 1635 000a BB1D     		adds	r3, r7, #6
 1636 000c 1A80     		strh	r2, [r3]
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1637              		.loc 1 982 11
 1638 000e FB68     		ldr	r3, [r7, #12]
 1639 0010 6922     		movs	r2, #105
 1640 0012 9B5C     		ldrb	r3, [r3, r2]
 1641 0014 DBB2     		uxtb	r3, r3
 1642              		.loc 1 982 5
 1643 0016 202B     		cmp	r3, #32
 1644 0018 66D1     		bne	.L85
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1645              		.loc 1 984 7
 1646 001a BB68     		ldr	r3, [r7, #8]
 1647 001c 002B     		cmp	r3, #0
 1648 001e 03D0     		beq	.L86
 1649              		.loc 1 984 25 discriminator 1
 1650 0020 BB1D     		adds	r3, r7, #6
 1651 0022 1B88     		ldrh	r3, [r3]
 1652 0024 002B     		cmp	r3, #0
 1653 0026 01D1     		bne	.L87
 1654              	.L86:
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 47


 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1655              		.loc 1 986 14
 1656 0028 0123     		movs	r3, #1
 1657 002a 5EE0     		b	.L88
 1658              	.L87:
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1659              		.loc 1 992 21
 1660 002c FB68     		ldr	r3, [r7, #12]
 1661 002e 9A68     		ldr	r2, [r3, #8]
 1662              		.loc 1 992 8
 1663 0030 8023     		movs	r3, #128
 1664 0032 5B01     		lsls	r3, r3, #5
 1665 0034 9A42     		cmp	r2, r3
 1666 0036 09D1     		bne	.L89
 1667              		.loc 1 992 71 discriminator 1
 1668 0038 FB68     		ldr	r3, [r7, #12]
 1669 003a 1B69     		ldr	r3, [r3, #16]
 1670              		.loc 1 992 56 discriminator 1
 1671 003c 002B     		cmp	r3, #0
 1672 003e 05D1     		bne	.L89
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 1673              		.loc 1 994 12
 1674 0040 BB68     		ldr	r3, [r7, #8]
 1675              		.loc 1 994 28
 1676 0042 0122     		movs	r2, #1
 1677 0044 1340     		ands	r3, r2
 1678              		.loc 1 994 9
 1679 0046 01D0     		beq	.L89
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1680              		.loc 1 996 17
 1681 0048 0123     		movs	r3, #1
 1682 004a 4EE0     		b	.L88
 1683              	.L89:
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1684              		.loc 1 1001 5
 1685 004c FB68     		ldr	r3, [r7, #12]
 1686 004e 6822     		movs	r2, #104
 1687 0050 9B5C     		ldrb	r3, [r3, r2]
 1688 0052 012B     		cmp	r3, #1
 1689 0054 01D1     		bne	.L90
 1690              		.loc 1 1001 5 is_stmt 0 discriminator 1
 1691 0056 0223     		movs	r3, #2
 1692 0058 47E0     		b	.L88
 1693              	.L90:
 1694              		.loc 1 1001 5 discriminator 2
 1695 005a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 48


 1696 005c 6822     		movs	r2, #104
 1697 005e 0121     		movs	r1, #1
 1698 0060 9954     		strb	r1, [r3, r2]
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1699              		.loc 1 1003 23 is_stmt 1 discriminator 2
 1700 0062 FB68     		ldr	r3, [r7, #12]
 1701 0064 BA68     		ldr	r2, [r7, #8]
 1702 0066 DA64     		str	r2, [r3, #76]
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 1703              		.loc 1 1004 23 discriminator 2
 1704 0068 FB68     		ldr	r3, [r7, #12]
 1705 006a BA1D     		adds	r2, r7, #6
 1706 006c 5021     		movs	r1, #80
 1707 006e 1288     		ldrh	r2, [r2]
 1708 0070 5A52     		strh	r2, [r3, r1]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1709              		.loc 1 1005 24 discriminator 2
 1710 0072 FB68     		ldr	r3, [r7, #12]
 1711 0074 BA1D     		adds	r2, r7, #6
 1712 0076 5221     		movs	r1, #82
 1713 0078 1288     		ldrh	r2, [r2]
 1714 007a 5A52     		strh	r2, [r3, r1]
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1715              		.loc 1 1007 22 discriminator 2
 1716 007c FB68     		ldr	r3, [r7, #12]
 1717 007e 0022     		movs	r2, #0
 1718 0080 DA66     		str	r2, [r3, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1719              		.loc 1 1008 19 discriminator 2
 1720 0082 FB68     		ldr	r3, [r7, #12]
 1721 0084 6922     		movs	r2, #105
 1722 0086 2121     		movs	r1, #33
 1723 0088 9954     		strb	r1, [r3, r2]
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1724              		.loc 1 1011 10 discriminator 2
 1725 008a FB68     		ldr	r3, [r7, #12]
 1726 008c 1B6E     		ldr	r3, [r3, #96]
 1727              		.loc 1 1011 37 discriminator 2
 1728 008e 194A     		ldr	r2, .L91
 1729 0090 9A62     		str	r2, [r3, #40]
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1730              		.loc 1 1014 10 discriminator 2
 1731 0092 FB68     		ldr	r3, [r7, #12]
 1732 0094 1B6E     		ldr	r3, [r3, #96]
 1733              		.loc 1 1014 41 discriminator 2
 1734 0096 184A     		ldr	r2, .L91+4
 1735 0098 DA62     		str	r2, [r3, #44]
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1736              		.loc 1 1017 10 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 49


 1737 009a FB68     		ldr	r3, [r7, #12]
 1738 009c 1B6E     		ldr	r3, [r3, #96]
 1739              		.loc 1 1017 38 discriminator 2
 1740 009e 174A     		ldr	r2, .L91+8
 1741 00a0 1A63     		str	r2, [r3, #48]
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1742              		.loc 1 1020 10 discriminator 2
 1743 00a2 FB68     		ldr	r3, [r7, #12]
 1744 00a4 1B6E     		ldr	r3, [r3, #96]
 1745              		.loc 1 1020 38 discriminator 2
 1746 00a6 0022     		movs	r2, #0
 1747 00a8 5A63     		str	r2, [r3, #52]
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 1748              		.loc 1 1023 5 discriminator 2
 1749 00aa FB68     		ldr	r3, [r7, #12]
 1750 00ac 186E     		ldr	r0, [r3, #96]
 1751              		.loc 1 1023 52 discriminator 2
 1752 00ae FB68     		ldr	r3, [r7, #12]
 1753 00b0 DB6C     		ldr	r3, [r3, #76]
 1754              		.loc 1 1023 5 discriminator 2
 1755 00b2 1900     		movs	r1, r3
 1756              		.loc 1 1023 82 discriminator 2
 1757 00b4 FB68     		ldr	r3, [r7, #12]
 1758 00b6 1B68     		ldr	r3, [r3]
 1759              		.loc 1 1023 76 discriminator 2
 1760 00b8 2833     		adds	r3, r3, #40
 1761              		.loc 1 1023 5 discriminator 2
 1762 00ba 1A00     		movs	r2, r3
 1763 00bc BB1D     		adds	r3, r7, #6
 1764 00be 1B88     		ldrh	r3, [r3]
 1765 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1766              		.loc 1 1026 5 discriminator 2
 1767 00c4 FB68     		ldr	r3, [r7, #12]
 1768 00c6 1B68     		ldr	r3, [r3]
 1769 00c8 4022     		movs	r2, #64
 1770 00ca 1A62     		str	r2, [r3, #32]
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1771              		.loc 1 1029 5 discriminator 2
 1772 00cc FB68     		ldr	r3, [r7, #12]
 1773 00ce 6822     		movs	r2, #104
 1774 00d0 0021     		movs	r1, #0
 1775 00d2 9954     		strb	r1, [r3, r2]
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1776              		.loc 1 1033 5 discriminator 2
 1777 00d4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 50


 1778 00d6 1B68     		ldr	r3, [r3]
 1779 00d8 9A68     		ldr	r2, [r3, #8]
 1780 00da FB68     		ldr	r3, [r7, #12]
 1781 00dc 1B68     		ldr	r3, [r3]
 1782 00de 8021     		movs	r1, #128
 1783 00e0 0A43     		orrs	r2, r1
 1784 00e2 9A60     		str	r2, [r3, #8]
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1785              		.loc 1 1035 12 discriminator 2
 1786 00e4 0023     		movs	r3, #0
 1787 00e6 00E0     		b	.L88
 1788              	.L85:
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1789              		.loc 1 1039 12
 1790 00e8 0223     		movs	r3, #2
 1791              	.L88:
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1792              		.loc 1 1041 1
 1793 00ea 1800     		movs	r0, r3
 1794 00ec BD46     		mov	sp, r7
 1795 00ee 04B0     		add	sp, sp, #16
 1796              		@ sp needed
 1797 00f0 80BD     		pop	{r7, pc}
 1798              	.L92:
 1799 00f2 C046     		.align	2
 1800              	.L91:
 1801 00f4 00000000 		.word	UART_DMATransmitCplt
 1802 00f8 00000000 		.word	UART_DMATxHalfCplt
 1803 00fc 00000000 		.word	UART_DMAError
 1804              		.cfi_endproc
 1805              	.LFE47:
 1807              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1808              		.align	1
 1809              		.global	HAL_UART_Receive_DMA
 1810              		.syntax unified
 1811              		.code	16
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	HAL_UART_Receive_DMA:
 1816              	.LFB48:
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 51


1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1817              		.loc 1 1055 1
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 16
 1820              		@ frame_needed = 1, uses_anonymous_args = 0
 1821 0000 80B5     		push	{r7, lr}
 1822              	.LCFI33:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 7, -8
 1825              		.cfi_offset 14, -4
 1826 0002 84B0     		sub	sp, sp, #16
 1827              	.LCFI34:
 1828              		.cfi_def_cfa_offset 24
 1829 0004 00AF     		add	r7, sp, #0
 1830              	.LCFI35:
 1831              		.cfi_def_cfa_register 7
 1832 0006 F860     		str	r0, [r7, #12]
 1833 0008 B960     		str	r1, [r7, #8]
 1834 000a BB1D     		adds	r3, r7, #6
 1835 000c 1A80     		strh	r2, [r3]
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1836              		.loc 1 1057 11
 1837 000e FB68     		ldr	r3, [r7, #12]
 1838 0010 6A22     		movs	r2, #106
 1839 0012 9B5C     		ldrb	r3, [r3, r2]
 1840 0014 DBB2     		uxtb	r3, r3
 1841              		.loc 1 1057 5
 1842 0016 202B     		cmp	r3, #32
 1843 0018 00D0     		beq	.LCB1557
 1844 001a 6EE0     		b	.L94	@long jump
 1845              	.LCB1557:
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1846              		.loc 1 1059 7
 1847 001c BB68     		ldr	r3, [r7, #8]
 1848 001e 002B     		cmp	r3, #0
 1849 0020 03D0     		beq	.L95
 1850              		.loc 1 1059 25 discriminator 1
 1851 0022 BB1D     		adds	r3, r7, #6
 1852 0024 1B88     		ldrh	r3, [r3]
 1853 0026 002B     		cmp	r3, #0
 1854 0028 01D1     		bne	.L96
 1855              	.L95:
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1856              		.loc 1 1061 14
 1857 002a 0123     		movs	r3, #1
 1858 002c 66E0     		b	.L97
 1859              	.L96:
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 52


 1860              		.loc 1 1067 21
 1861 002e FB68     		ldr	r3, [r7, #12]
 1862 0030 9A68     		ldr	r2, [r3, #8]
 1863              		.loc 1 1067 8
 1864 0032 8023     		movs	r3, #128
 1865 0034 5B01     		lsls	r3, r3, #5
 1866 0036 9A42     		cmp	r2, r3
 1867 0038 09D1     		bne	.L98
 1868              		.loc 1 1067 71 discriminator 1
 1869 003a FB68     		ldr	r3, [r7, #12]
 1870 003c 1B69     		ldr	r3, [r3, #16]
 1871              		.loc 1 1067 56 discriminator 1
 1872 003e 002B     		cmp	r3, #0
 1873 0040 05D1     		bne	.L98
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 1874              		.loc 1 1069 12
 1875 0042 BB68     		ldr	r3, [r7, #8]
 1876              		.loc 1 1069 28
 1877 0044 0122     		movs	r2, #1
 1878 0046 1340     		ands	r3, r2
 1879              		.loc 1 1069 9
 1880 0048 01D0     		beq	.L98
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1881              		.loc 1 1071 17
 1882 004a 0123     		movs	r3, #1
 1883 004c 56E0     		b	.L97
 1884              	.L98:
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 1885              		.loc 1 1076 5
 1886 004e FB68     		ldr	r3, [r7, #12]
 1887 0050 6822     		movs	r2, #104
 1888 0052 9B5C     		ldrb	r3, [r3, r2]
 1889 0054 012B     		cmp	r3, #1
 1890 0056 01D1     		bne	.L99
 1891              		.loc 1 1076 5 is_stmt 0 discriminator 1
 1892 0058 0223     		movs	r3, #2
 1893 005a 4FE0     		b	.L97
 1894              	.L99:
 1895              		.loc 1 1076 5 discriminator 2
 1896 005c FB68     		ldr	r3, [r7, #12]
 1897 005e 6822     		movs	r2, #104
 1898 0060 0121     		movs	r1, #1
 1899 0062 9954     		strb	r1, [r3, r2]
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1900              		.loc 1 1078 23 is_stmt 1 discriminator 2
 1901 0064 FB68     		ldr	r3, [r7, #12]
 1902 0066 BA68     		ldr	r2, [r7, #8]
 1903 0068 5A65     		str	r2, [r3, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 1904              		.loc 1 1079 23 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 53


 1905 006a FB68     		ldr	r3, [r7, #12]
 1906 006c BA1D     		adds	r2, r7, #6
 1907 006e 5821     		movs	r1, #88
 1908 0070 1288     		ldrh	r2, [r2]
 1909 0072 5A52     		strh	r2, [r3, r1]
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1910              		.loc 1 1081 22 discriminator 2
 1911 0074 FB68     		ldr	r3, [r7, #12]
 1912 0076 0022     		movs	r2, #0
 1913 0078 DA66     		str	r2, [r3, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1914              		.loc 1 1082 20 discriminator 2
 1915 007a FB68     		ldr	r3, [r7, #12]
 1916 007c 6A22     		movs	r2, #106
 1917 007e 2221     		movs	r1, #34
 1918 0080 9954     		strb	r1, [r3, r2]
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1919              		.loc 1 1085 10 discriminator 2
 1920 0082 FB68     		ldr	r3, [r7, #12]
 1921 0084 5B6E     		ldr	r3, [r3, #100]
 1922              		.loc 1 1085 37 discriminator 2
 1923 0086 1F4A     		ldr	r2, .L100
 1924 0088 9A62     		str	r2, [r3, #40]
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1925              		.loc 1 1088 10 discriminator 2
 1926 008a FB68     		ldr	r3, [r7, #12]
 1927 008c 5B6E     		ldr	r3, [r3, #100]
 1928              		.loc 1 1088 41 discriminator 2
 1929 008e 1E4A     		ldr	r2, .L100+4
 1930 0090 DA62     		str	r2, [r3, #44]
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1931              		.loc 1 1091 10 discriminator 2
 1932 0092 FB68     		ldr	r3, [r7, #12]
 1933 0094 5B6E     		ldr	r3, [r3, #100]
 1934              		.loc 1 1091 38 discriminator 2
 1935 0096 1D4A     		ldr	r2, .L100+8
 1936 0098 1A63     		str	r2, [r3, #48]
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1937              		.loc 1 1094 10 discriminator 2
 1938 009a FB68     		ldr	r3, [r7, #12]
 1939 009c 5B6E     		ldr	r3, [r3, #100]
 1940              		.loc 1 1094 38 discriminator 2
 1941 009e 0022     		movs	r2, #0
 1942 00a0 5A63     		str	r2, [r3, #52]
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
 1943              		.loc 1 1097 5 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 54


 1944 00a2 FB68     		ldr	r3, [r7, #12]
 1945 00a4 586E     		ldr	r0, [r3, #100]
 1946              		.loc 1 1097 53 discriminator 2
 1947 00a6 FB68     		ldr	r3, [r7, #12]
 1948 00a8 1B68     		ldr	r3, [r3]
 1949              		.loc 1 1097 47 discriminator 2
 1950 00aa 2433     		adds	r3, r3, #36
 1951              		.loc 1 1097 5 discriminator 2
 1952 00ac 1900     		movs	r1, r3
 1953              		.loc 1 1097 85 discriminator 2
 1954 00ae FB68     		ldr	r3, [r7, #12]
 1955 00b0 5B6D     		ldr	r3, [r3, #84]
 1956              		.loc 1 1097 5 discriminator 2
 1957 00b2 1A00     		movs	r2, r3
 1958 00b4 BB1D     		adds	r3, r7, #6
 1959 00b6 1B88     		ldrh	r3, [r3]
 1960 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1961              		.loc 1 1100 5 discriminator 2
 1962 00bc FB68     		ldr	r3, [r7, #12]
 1963 00be 6822     		movs	r2, #104
 1964 00c0 0021     		movs	r1, #0
 1965 00c2 9954     		strb	r1, [r3, r2]
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1966              		.loc 1 1103 5 discriminator 2
 1967 00c4 FB68     		ldr	r3, [r7, #12]
 1968 00c6 1B68     		ldr	r3, [r3]
 1969 00c8 1A68     		ldr	r2, [r3]
 1970 00ca FB68     		ldr	r3, [r7, #12]
 1971 00cc 1B68     		ldr	r3, [r3]
 1972 00ce 8021     		movs	r1, #128
 1973 00d0 4900     		lsls	r1, r1, #1
 1974 00d2 0A43     		orrs	r2, r1
 1975 00d4 1A60     		str	r2, [r3]
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1976              		.loc 1 1106 5 discriminator 2
 1977 00d6 FB68     		ldr	r3, [r7, #12]
 1978 00d8 1B68     		ldr	r3, [r3]
 1979 00da 9A68     		ldr	r2, [r3, #8]
 1980 00dc FB68     		ldr	r3, [r7, #12]
 1981 00de 1B68     		ldr	r3, [r3]
 1982 00e0 0121     		movs	r1, #1
 1983 00e2 0A43     		orrs	r2, r1
 1984 00e4 9A60     		str	r2, [r3, #8]
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1985              		.loc 1 1110 5 discriminator 2
 1986 00e6 FB68     		ldr	r3, [r7, #12]
 1987 00e8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 55


 1988 00ea 9A68     		ldr	r2, [r3, #8]
 1989 00ec FB68     		ldr	r3, [r7, #12]
 1990 00ee 1B68     		ldr	r3, [r3]
 1991 00f0 4021     		movs	r1, #64
 1992 00f2 0A43     		orrs	r2, r1
 1993 00f4 9A60     		str	r2, [r3, #8]
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1994              		.loc 1 1112 12 discriminator 2
 1995 00f6 0023     		movs	r3, #0
 1996 00f8 00E0     		b	.L97
 1997              	.L94:
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1998              		.loc 1 1116 12
 1999 00fa 0223     		movs	r3, #2
 2000              	.L97:
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2001              		.loc 1 1118 1
 2002 00fc 1800     		movs	r0, r3
 2003 00fe BD46     		mov	sp, r7
 2004 0100 04B0     		add	sp, sp, #16
 2005              		@ sp needed
 2006 0102 80BD     		pop	{r7, pc}
 2007              	.L101:
 2008              		.align	2
 2009              	.L100:
 2010 0104 00000000 		.word	UART_DMAReceiveCplt
 2011 0108 00000000 		.word	UART_DMARxHalfCplt
 2012 010c 00000000 		.word	UART_DMAError
 2013              		.cfi_endproc
 2014              	.LFE48:
 2016              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2017              		.align	1
 2018              		.global	HAL_UART_DMAPause
 2019              		.syntax unified
 2020              		.code	16
 2021              		.thumb_func
 2022              		.fpu softvfp
 2024              	HAL_UART_DMAPause:
 2025              	.LFB49:
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2026              		.loc 1 1126 1
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 8
 2029              		@ frame_needed = 1, uses_anonymous_args = 0
 2030 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 56


 2031              	.LCFI36:
 2032              		.cfi_def_cfa_offset 8
 2033              		.cfi_offset 7, -8
 2034              		.cfi_offset 14, -4
 2035 0002 82B0     		sub	sp, sp, #8
 2036              	.LCFI37:
 2037              		.cfi_def_cfa_offset 16
 2038 0004 00AF     		add	r7, sp, #0
 2039              	.LCFI38:
 2040              		.cfi_def_cfa_register 7
 2041 0006 7860     		str	r0, [r7, #4]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 2042              		.loc 1 1128 3
 2043 0008 7B68     		ldr	r3, [r7, #4]
 2044 000a 6822     		movs	r2, #104
 2045 000c 9B5C     		ldrb	r3, [r3, r2]
 2046 000e 012B     		cmp	r3, #1
 2047 0010 01D1     		bne	.L103
 2048              		.loc 1 1128 3 is_stmt 0 discriminator 1
 2049 0012 0223     		movs	r3, #2
 2050 0014 40E0     		b	.L104
 2051              	.L103:
 2052              		.loc 1 1128 3 discriminator 2
 2053 0016 7B68     		ldr	r3, [r7, #4]
 2054 0018 6822     		movs	r2, #104
 2055 001a 0121     		movs	r1, #1
 2056 001c 9954     		strb	r1, [r3, r2]
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2057              		.loc 1 1130 13 is_stmt 1 discriminator 2
 2058 001e 7B68     		ldr	r3, [r7, #4]
 2059 0020 6922     		movs	r2, #105
 2060 0022 9B5C     		ldrb	r3, [r3, r2]
 2061 0024 DBB2     		uxtb	r3, r3
 2062              		.loc 1 1130 6 discriminator 2
 2063 0026 212B     		cmp	r3, #33
 2064 0028 0DD1     		bne	.L105
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2065              		.loc 1 1131 8 discriminator 1
 2066 002a 7B68     		ldr	r3, [r7, #4]
 2067 002c 1B68     		ldr	r3, [r3]
 2068 002e 9B68     		ldr	r3, [r3, #8]
 2069 0030 8022     		movs	r2, #128
 2070 0032 1340     		ands	r3, r2
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2071              		.loc 1 1130 49 discriminator 1
 2072 0034 07D0     		beq	.L105
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2073              		.loc 1 1134 5
 2074 0036 7B68     		ldr	r3, [r7, #4]
 2075 0038 1B68     		ldr	r3, [r3]
 2076 003a 9A68     		ldr	r2, [r3, #8]
 2077 003c 7B68     		ldr	r3, [r7, #4]
 2078 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 57


 2079 0040 8021     		movs	r1, #128
 2080 0042 8A43     		bics	r2, r1
 2081 0044 9A60     		str	r2, [r3, #8]
 2082              	.L105:
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2083              		.loc 1 1136 13
 2084 0046 7B68     		ldr	r3, [r7, #4]
 2085 0048 6A22     		movs	r2, #106
 2086 004a 9B5C     		ldrb	r3, [r3, r2]
 2087 004c DBB2     		uxtb	r3, r3
 2088              		.loc 1 1136 6
 2089 004e 222B     		cmp	r3, #34
 2090 0050 1DD1     		bne	.L106
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2091              		.loc 1 1137 8 discriminator 1
 2092 0052 7B68     		ldr	r3, [r7, #4]
 2093 0054 1B68     		ldr	r3, [r3]
 2094 0056 9B68     		ldr	r3, [r3, #8]
 2095 0058 4022     		movs	r2, #64
 2096 005a 1340     		ands	r3, r2
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2097              		.loc 1 1136 50 discriminator 1
 2098 005c 17D0     		beq	.L106
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2099              		.loc 1 1140 5
 2100 005e 7B68     		ldr	r3, [r7, #4]
 2101 0060 1B68     		ldr	r3, [r3]
 2102 0062 1A68     		ldr	r2, [r3]
 2103 0064 7B68     		ldr	r3, [r7, #4]
 2104 0066 1B68     		ldr	r3, [r3]
 2105 0068 0D49     		ldr	r1, .L107
 2106 006a 0A40     		ands	r2, r1
 2107 006c 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2108              		.loc 1 1141 5
 2109 006e 7B68     		ldr	r3, [r7, #4]
 2110 0070 1B68     		ldr	r3, [r3]
 2111 0072 9A68     		ldr	r2, [r3, #8]
 2112 0074 7B68     		ldr	r3, [r7, #4]
 2113 0076 1B68     		ldr	r3, [r3]
 2114 0078 0121     		movs	r1, #1
 2115 007a 8A43     		bics	r2, r1
 2116 007c 9A60     		str	r2, [r3, #8]
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2117              		.loc 1 1144 5
 2118 007e 7B68     		ldr	r3, [r7, #4]
 2119 0080 1B68     		ldr	r3, [r3]
 2120 0082 9A68     		ldr	r2, [r3, #8]
 2121 0084 7B68     		ldr	r3, [r7, #4]
 2122 0086 1B68     		ldr	r3, [r3]
 2123 0088 4021     		movs	r1, #64
 2124 008a 8A43     		bics	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 58


 2125 008c 9A60     		str	r2, [r3, #8]
 2126              	.L106:
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2127              		.loc 1 1148 3
 2128 008e 7B68     		ldr	r3, [r7, #4]
 2129 0090 6822     		movs	r2, #104
 2130 0092 0021     		movs	r1, #0
 2131 0094 9954     		strb	r1, [r3, r2]
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2132              		.loc 1 1150 10
 2133 0096 0023     		movs	r3, #0
 2134              	.L104:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2135              		.loc 1 1151 1
 2136 0098 1800     		movs	r0, r3
 2137 009a BD46     		mov	sp, r7
 2138 009c 02B0     		add	sp, sp, #8
 2139              		@ sp needed
 2140 009e 80BD     		pop	{r7, pc}
 2141              	.L108:
 2142              		.align	2
 2143              	.L107:
 2144 00a0 FFFEFFFF 		.word	-257
 2145              		.cfi_endproc
 2146              	.LFE49:
 2148              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2149              		.align	1
 2150              		.global	HAL_UART_DMAResume
 2151              		.syntax unified
 2152              		.code	16
 2153              		.thumb_func
 2154              		.fpu softvfp
 2156              	HAL_UART_DMAResume:
 2157              	.LFB50:
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2158              		.loc 1 1159 1
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 8
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162 0000 80B5     		push	{r7, lr}
 2163              	.LCFI39:
 2164              		.cfi_def_cfa_offset 8
 2165              		.cfi_offset 7, -8
 2166              		.cfi_offset 14, -4
 2167 0002 82B0     		sub	sp, sp, #8
 2168              	.LCFI40:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 59


 2169              		.cfi_def_cfa_offset 16
 2170 0004 00AF     		add	r7, sp, #0
 2171              	.LCFI41:
 2172              		.cfi_def_cfa_register 7
 2173 0006 7860     		str	r0, [r7, #4]
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 2174              		.loc 1 1161 3
 2175 0008 7B68     		ldr	r3, [r7, #4]
 2176 000a 6822     		movs	r2, #104
 2177 000c 9B5C     		ldrb	r3, [r3, r2]
 2178 000e 012B     		cmp	r3, #1
 2179 0010 01D1     		bne	.L110
 2180              		.loc 1 1161 3 is_stmt 0 discriminator 1
 2181 0012 0223     		movs	r3, #2
 2182 0014 39E0     		b	.L111
 2183              	.L110:
 2184              		.loc 1 1161 3 discriminator 2
 2185 0016 7B68     		ldr	r3, [r7, #4]
 2186 0018 6822     		movs	r2, #104
 2187 001a 0121     		movs	r1, #1
 2188 001c 9954     		strb	r1, [r3, r2]
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2189              		.loc 1 1163 11 is_stmt 1 discriminator 2
 2190 001e 7B68     		ldr	r3, [r7, #4]
 2191 0020 6922     		movs	r2, #105
 2192 0022 9B5C     		ldrb	r3, [r3, r2]
 2193 0024 DBB2     		uxtb	r3, r3
 2194              		.loc 1 1163 5 discriminator 2
 2195 0026 212B     		cmp	r3, #33
 2196 0028 07D1     		bne	.L112
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2197              		.loc 1 1166 5
 2198 002a 7B68     		ldr	r3, [r7, #4]
 2199 002c 1B68     		ldr	r3, [r3]
 2200 002e 9A68     		ldr	r2, [r3, #8]
 2201 0030 7B68     		ldr	r3, [r7, #4]
 2202 0032 1B68     		ldr	r3, [r3]
 2203 0034 8021     		movs	r1, #128
 2204 0036 0A43     		orrs	r2, r1
 2205 0038 9A60     		str	r2, [r3, #8]
 2206              	.L112:
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2207              		.loc 1 1168 11
 2208 003a 7B68     		ldr	r3, [r7, #4]
 2209 003c 6A22     		movs	r2, #106
 2210 003e 9B5C     		ldrb	r3, [r3, r2]
 2211 0040 DBB2     		uxtb	r3, r3
 2212              		.loc 1 1168 5
 2213 0042 222B     		cmp	r3, #34
 2214 0044 1CD1     		bne	.L113
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 60


1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2215              		.loc 1 1171 5
 2216 0046 7B68     		ldr	r3, [r7, #4]
 2217 0048 1B68     		ldr	r3, [r3]
 2218 004a 0822     		movs	r2, #8
 2219 004c 1A62     		str	r2, [r3, #32]
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2220              		.loc 1 1174 5
 2221 004e 7B68     		ldr	r3, [r7, #4]
 2222 0050 1B68     		ldr	r3, [r3]
 2223 0052 1A68     		ldr	r2, [r3]
 2224 0054 7B68     		ldr	r3, [r7, #4]
 2225 0056 1B68     		ldr	r3, [r3]
 2226 0058 8021     		movs	r1, #128
 2227 005a 4900     		lsls	r1, r1, #1
 2228 005c 0A43     		orrs	r2, r1
 2229 005e 1A60     		str	r2, [r3]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2230              		.loc 1 1175 5
 2231 0060 7B68     		ldr	r3, [r7, #4]
 2232 0062 1B68     		ldr	r3, [r3]
 2233 0064 9A68     		ldr	r2, [r3, #8]
 2234 0066 7B68     		ldr	r3, [r7, #4]
 2235 0068 1B68     		ldr	r3, [r3]
 2236 006a 0121     		movs	r1, #1
 2237 006c 0A43     		orrs	r2, r1
 2238 006e 9A60     		str	r2, [r3, #8]
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2239              		.loc 1 1178 5
 2240 0070 7B68     		ldr	r3, [r7, #4]
 2241 0072 1B68     		ldr	r3, [r3]
 2242 0074 9A68     		ldr	r2, [r3, #8]
 2243 0076 7B68     		ldr	r3, [r7, #4]
 2244 0078 1B68     		ldr	r3, [r3]
 2245 007a 4021     		movs	r1, #64
 2246 007c 0A43     		orrs	r2, r1
 2247 007e 9A60     		str	r2, [r3, #8]
 2248              	.L113:
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2249              		.loc 1 1182 3
 2250 0080 7B68     		ldr	r3, [r7, #4]
 2251 0082 6822     		movs	r2, #104
 2252 0084 0021     		movs	r1, #0
 2253 0086 9954     		strb	r1, [r3, r2]
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2254              		.loc 1 1184 10
 2255 0088 0023     		movs	r3, #0
 2256              	.L111:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 61


 2257              		.loc 1 1185 1
 2258 008a 1800     		movs	r0, r3
 2259 008c BD46     		mov	sp, r7
 2260 008e 02B0     		add	sp, sp, #8
 2261              		@ sp needed
 2262 0090 80BD     		pop	{r7, pc}
 2263              		.cfi_endproc
 2264              	.LFE50:
 2266              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2267              		.align	1
 2268              		.global	HAL_UART_DMAStop
 2269              		.syntax unified
 2270              		.code	16
 2271              		.thumb_func
 2272              		.fpu softvfp
 2274              	HAL_UART_DMAStop:
 2275              	.LFB51:
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2276              		.loc 1 1193 1
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280 0000 80B5     		push	{r7, lr}
 2281              	.LCFI42:
 2282              		.cfi_def_cfa_offset 8
 2283              		.cfi_offset 7, -8
 2284              		.cfi_offset 14, -4
 2285 0002 82B0     		sub	sp, sp, #8
 2286              	.LCFI43:
 2287              		.cfi_def_cfa_offset 16
 2288 0004 00AF     		add	r7, sp, #0
 2289              	.LCFI44:
 2290              		.cfi_def_cfa_register 7
 2291 0006 7860     		str	r0, [r7, #4]
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2292              		.loc 1 1202 13
 2293 0008 7B68     		ldr	r3, [r7, #4]
 2294 000a 6922     		movs	r2, #105
 2295 000c 9B5C     		ldrb	r3, [r3, r2]
 2296 000e DBB2     		uxtb	r3, r3
 2297              		.loc 1 1202 6
 2298 0010 212B     		cmp	r3, #33
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 62


 2299 0012 1AD1     		bne	.L115
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2300              		.loc 1 1203 8 discriminator 1
 2301 0014 7B68     		ldr	r3, [r7, #4]
 2302 0016 1B68     		ldr	r3, [r3]
 2303 0018 9B68     		ldr	r3, [r3, #8]
 2304 001a 8022     		movs	r2, #128
 2305 001c 1340     		ands	r3, r2
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2306              		.loc 1 1202 49 discriminator 1
 2307 001e 14D0     		beq	.L115
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2308              		.loc 1 1205 5
 2309 0020 7B68     		ldr	r3, [r7, #4]
 2310 0022 1B68     		ldr	r3, [r3]
 2311 0024 9A68     		ldr	r2, [r3, #8]
 2312 0026 7B68     		ldr	r3, [r7, #4]
 2313 0028 1B68     		ldr	r3, [r3]
 2314 002a 8021     		movs	r1, #128
 2315 002c 8A43     		bics	r2, r1
 2316 002e 9A60     		str	r2, [r3, #8]
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2317              		.loc 1 1208 13
 2318 0030 7B68     		ldr	r3, [r7, #4]
 2319 0032 1B6E     		ldr	r3, [r3, #96]
 2320              		.loc 1 1208 7
 2321 0034 002B     		cmp	r3, #0
 2322 0036 04D0     		beq	.L116
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2323              		.loc 1 1210 7
 2324 0038 7B68     		ldr	r3, [r7, #4]
 2325 003a 1B6E     		ldr	r3, [r3, #96]
 2326 003c 1800     		movs	r0, r3
 2327 003e FFF7FEFF 		bl	HAL_DMA_Abort
 2328              	.L116:
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2329              		.loc 1 1213 5
 2330 0042 7B68     		ldr	r3, [r7, #4]
 2331 0044 1800     		movs	r0, r3
 2332 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2333              	.L115:
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2334              		.loc 1 1217 13
 2335 004a 7B68     		ldr	r3, [r7, #4]
 2336 004c 6A22     		movs	r2, #106
 2337 004e 9B5C     		ldrb	r3, [r3, r2]
 2338 0050 DBB2     		uxtb	r3, r3
 2339              		.loc 1 1217 6
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 63


 2340 0052 222B     		cmp	r3, #34
 2341 0054 1AD1     		bne	.L117
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2342              		.loc 1 1218 8 discriminator 1
 2343 0056 7B68     		ldr	r3, [r7, #4]
 2344 0058 1B68     		ldr	r3, [r3]
 2345 005a 9B68     		ldr	r3, [r3, #8]
 2346 005c 4022     		movs	r2, #64
 2347 005e 1340     		ands	r3, r2
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2348              		.loc 1 1217 50 discriminator 1
 2349 0060 14D0     		beq	.L117
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2350              		.loc 1 1220 5
 2351 0062 7B68     		ldr	r3, [r7, #4]
 2352 0064 1B68     		ldr	r3, [r3]
 2353 0066 9A68     		ldr	r2, [r3, #8]
 2354 0068 7B68     		ldr	r3, [r7, #4]
 2355 006a 1B68     		ldr	r3, [r3]
 2356 006c 4021     		movs	r1, #64
 2357 006e 8A43     		bics	r2, r1
 2358 0070 9A60     		str	r2, [r3, #8]
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2359              		.loc 1 1223 13
 2360 0072 7B68     		ldr	r3, [r7, #4]
 2361 0074 5B6E     		ldr	r3, [r3, #100]
 2362              		.loc 1 1223 7
 2363 0076 002B     		cmp	r3, #0
 2364 0078 04D0     		beq	.L118
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2365              		.loc 1 1225 7
 2366 007a 7B68     		ldr	r3, [r7, #4]
 2367 007c 5B6E     		ldr	r3, [r3, #100]
 2368 007e 1800     		movs	r0, r3
 2369 0080 FFF7FEFF 		bl	HAL_DMA_Abort
 2370              	.L118:
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2371              		.loc 1 1228 5
 2372 0084 7B68     		ldr	r3, [r7, #4]
 2373 0086 1800     		movs	r0, r3
 2374 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2375              	.L117:
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2376              		.loc 1 1231 10
 2377 008c 0023     		movs	r3, #0
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2378              		.loc 1 1232 1
 2379 008e 1800     		movs	r0, r3
 2380 0090 BD46     		mov	sp, r7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 64


 2381 0092 02B0     		add	sp, sp, #8
 2382              		@ sp needed
 2383 0094 80BD     		pop	{r7, pc}
 2384              		.cfi_endproc
 2385              	.LFE51:
 2387              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2388              		.align	1
 2389              		.global	HAL_UART_Abort
 2390              		.syntax unified
 2391              		.code	16
 2392              		.thumb_func
 2393              		.fpu softvfp
 2395              	HAL_UART_Abort:
 2396              	.LFB52:
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2397              		.loc 1 1247 1
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 8
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401 0000 80B5     		push	{r7, lr}
 2402              	.LCFI45:
 2403              		.cfi_def_cfa_offset 8
 2404              		.cfi_offset 7, -8
 2405              		.cfi_offset 14, -4
 2406 0002 82B0     		sub	sp, sp, #8
 2407              	.LCFI46:
 2408              		.cfi_def_cfa_offset 16
 2409 0004 00AF     		add	r7, sp, #0
 2410              	.LCFI47:
 2411              		.cfi_def_cfa_register 7
 2412 0006 7860     		str	r0, [r7, #4]
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2413              		.loc 1 1249 3
 2414 0008 7B68     		ldr	r3, [r7, #4]
 2415 000a 1B68     		ldr	r3, [r3]
 2416 000c 1A68     		ldr	r2, [r3]
 2417 000e 7B68     		ldr	r3, [r7, #4]
 2418 0010 1B68     		ldr	r3, [r3]
 2419 0012 2E49     		ldr	r1, .L124
 2420 0014 0A40     		ands	r2, r1
 2421 0016 1A60     		str	r2, [r3]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 65


 2422              		.loc 1 1250 3
 2423 0018 7B68     		ldr	r3, [r7, #4]
 2424 001a 1B68     		ldr	r3, [r3]
 2425 001c 9A68     		ldr	r2, [r3, #8]
 2426 001e 7B68     		ldr	r3, [r7, #4]
 2427 0020 1B68     		ldr	r3, [r3]
 2428 0022 0121     		movs	r1, #1
 2429 0024 8A43     		bics	r2, r1
 2430 0026 9A60     		str	r2, [r3, #8]
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2431              		.loc 1 1253 7
 2432 0028 7B68     		ldr	r3, [r7, #4]
 2433 002a 1B68     		ldr	r3, [r3]
 2434 002c 9B68     		ldr	r3, [r3, #8]
 2435 002e 8022     		movs	r2, #128
 2436 0030 1340     		ands	r3, r2
 2437              		.loc 1 1253 6
 2438 0032 14D0     		beq	.L121
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2439              		.loc 1 1255 5
 2440 0034 7B68     		ldr	r3, [r7, #4]
 2441 0036 1B68     		ldr	r3, [r3]
 2442 0038 9A68     		ldr	r2, [r3, #8]
 2443 003a 7B68     		ldr	r3, [r7, #4]
 2444 003c 1B68     		ldr	r3, [r3]
 2445 003e 8021     		movs	r1, #128
 2446 0040 8A43     		bics	r2, r1
 2447 0042 9A60     		str	r2, [r3, #8]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2448              		.loc 1 1258 13
 2449 0044 7B68     		ldr	r3, [r7, #4]
 2450 0046 1B6E     		ldr	r3, [r3, #96]
 2451              		.loc 1 1258 7
 2452 0048 002B     		cmp	r3, #0
 2453 004a 08D0     		beq	.L121
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2454              		.loc 1 1262 12
 2455 004c 7B68     		ldr	r3, [r7, #4]
 2456 004e 1B6E     		ldr	r3, [r3, #96]
 2457              		.loc 1 1262 40
 2458 0050 0022     		movs	r2, #0
 2459 0052 5A63     		str	r2, [r3, #52]
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2460              		.loc 1 1264 7
 2461 0054 7B68     		ldr	r3, [r7, #4]
 2462 0056 1B6E     		ldr	r3, [r3, #96]
 2463 0058 1800     		movs	r0, r3
 2464 005a FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 66


 2465              	.L121:
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2466              		.loc 1 1269 7
 2467 005e 7B68     		ldr	r3, [r7, #4]
 2468 0060 1B68     		ldr	r3, [r3]
 2469 0062 9B68     		ldr	r3, [r3, #8]
 2470 0064 4022     		movs	r2, #64
 2471 0066 1340     		ands	r3, r2
 2472              		.loc 1 1269 6
 2473 0068 14D0     		beq	.L122
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2474              		.loc 1 1271 5
 2475 006a 7B68     		ldr	r3, [r7, #4]
 2476 006c 1B68     		ldr	r3, [r3]
 2477 006e 9A68     		ldr	r2, [r3, #8]
 2478 0070 7B68     		ldr	r3, [r7, #4]
 2479 0072 1B68     		ldr	r3, [r3]
 2480 0074 4021     		movs	r1, #64
 2481 0076 8A43     		bics	r2, r1
 2482 0078 9A60     		str	r2, [r3, #8]
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2483              		.loc 1 1274 13
 2484 007a 7B68     		ldr	r3, [r7, #4]
 2485 007c 5B6E     		ldr	r3, [r3, #100]
 2486              		.loc 1 1274 7
 2487 007e 002B     		cmp	r3, #0
 2488 0080 08D0     		beq	.L122
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2489              		.loc 1 1278 12
 2490 0082 7B68     		ldr	r3, [r7, #4]
 2491 0084 5B6E     		ldr	r3, [r3, #100]
 2492              		.loc 1 1278 40
 2493 0086 0022     		movs	r2, #0
 2494 0088 5A63     		str	r2, [r3, #52]
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2495              		.loc 1 1280 7
 2496 008a 7B68     		ldr	r3, [r7, #4]
 2497 008c 5B6E     		ldr	r3, [r3, #100]
 2498 008e 1800     		movs	r0, r3
 2499 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 2500              	.L122:
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 67


 2501              		.loc 1 1285 22
 2502 0094 7B68     		ldr	r3, [r7, #4]
 2503 0096 5222     		movs	r2, #82
 2504 0098 0021     		movs	r1, #0
 2505 009a 9952     		strh	r1, [r3, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 2506              		.loc 1 1286 22
 2507 009c 7B68     		ldr	r3, [r7, #4]
 2508 009e 5A22     		movs	r2, #90
 2509 00a0 0021     		movs	r1, #0
 2510 00a2 9952     		strh	r1, [r3, r2]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2511              		.loc 1 1289 3
 2512 00a4 7B68     		ldr	r3, [r7, #4]
 2513 00a6 1B68     		ldr	r3, [r3]
 2514 00a8 0F22     		movs	r2, #15
 2515 00aa 1A62     		str	r2, [r3, #32]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2516              		.loc 1 1292 18
 2517 00ac 7B68     		ldr	r3, [r7, #4]
 2518 00ae 6922     		movs	r2, #105
 2519 00b0 2021     		movs	r1, #32
 2520 00b2 9954     		strb	r1, [r3, r2]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2521              		.loc 1 1293 18
 2522 00b4 7B68     		ldr	r3, [r7, #4]
 2523 00b6 6A22     		movs	r2, #106
 2524 00b8 2021     		movs	r1, #32
 2525 00ba 9954     		strb	r1, [r3, r2]
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2526              		.loc 1 1296 20
 2527 00bc 7B68     		ldr	r3, [r7, #4]
 2528 00be 0022     		movs	r2, #0
 2529 00c0 DA66     		str	r2, [r3, #108]
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2530              		.loc 1 1298 10
 2531 00c2 0023     		movs	r3, #0
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2532              		.loc 1 1299 1
 2533 00c4 1800     		movs	r0, r3
 2534 00c6 BD46     		mov	sp, r7
 2535 00c8 02B0     		add	sp, sp, #8
 2536              		@ sp needed
 2537 00ca 80BD     		pop	{r7, pc}
 2538              	.L125:
 2539              		.align	2
 2540              	.L124:
 2541 00cc 1FFEFFFF 		.word	-481
 2542              		.cfi_endproc
 2543              	.LFE52:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 68


 2545              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2546              		.align	1
 2547              		.global	HAL_UART_AbortTransmit
 2548              		.syntax unified
 2549              		.code	16
 2550              		.thumb_func
 2551              		.fpu softvfp
 2553              	HAL_UART_AbortTransmit:
 2554              	.LFB53:
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2555              		.loc 1 1314 1
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 8
 2558              		@ frame_needed = 1, uses_anonymous_args = 0
 2559 0000 80B5     		push	{r7, lr}
 2560              	.LCFI48:
 2561              		.cfi_def_cfa_offset 8
 2562              		.cfi_offset 7, -8
 2563              		.cfi_offset 14, -4
 2564 0002 82B0     		sub	sp, sp, #8
 2565              	.LCFI49:
 2566              		.cfi_def_cfa_offset 16
 2567 0004 00AF     		add	r7, sp, #0
 2568              	.LCFI50:
 2569              		.cfi_def_cfa_register 7
 2570 0006 7860     		str	r0, [r7, #4]
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2571              		.loc 1 1316 3
 2572 0008 7B68     		ldr	r3, [r7, #4]
 2573 000a 1B68     		ldr	r3, [r3]
 2574 000c 1A68     		ldr	r2, [r3]
 2575 000e 7B68     		ldr	r3, [r7, #4]
 2576 0010 1B68     		ldr	r3, [r3]
 2577 0012 C021     		movs	r1, #192
 2578 0014 8A43     		bics	r2, r1
 2579 0016 1A60     		str	r2, [r3]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2580              		.loc 1 1319 7
 2581 0018 7B68     		ldr	r3, [r7, #4]
 2582 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 69


 2583 001c 9B68     		ldr	r3, [r3, #8]
 2584 001e 8022     		movs	r2, #128
 2585 0020 1340     		ands	r3, r2
 2586              		.loc 1 1319 6
 2587 0022 14D0     		beq	.L127
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2588              		.loc 1 1321 5
 2589 0024 7B68     		ldr	r3, [r7, #4]
 2590 0026 1B68     		ldr	r3, [r3]
 2591 0028 9A68     		ldr	r2, [r3, #8]
 2592 002a 7B68     		ldr	r3, [r7, #4]
 2593 002c 1B68     		ldr	r3, [r3]
 2594 002e 8021     		movs	r1, #128
 2595 0030 8A43     		bics	r2, r1
 2596 0032 9A60     		str	r2, [r3, #8]
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2597              		.loc 1 1324 13
 2598 0034 7B68     		ldr	r3, [r7, #4]
 2599 0036 1B6E     		ldr	r3, [r3, #96]
 2600              		.loc 1 1324 7
 2601 0038 002B     		cmp	r3, #0
 2602 003a 08D0     		beq	.L127
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2603              		.loc 1 1328 12
 2604 003c 7B68     		ldr	r3, [r7, #4]
 2605 003e 1B6E     		ldr	r3, [r3, #96]
 2606              		.loc 1 1328 40
 2607 0040 0022     		movs	r2, #0
 2608 0042 5A63     		str	r2, [r3, #52]
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2609              		.loc 1 1330 7
 2610 0044 7B68     		ldr	r3, [r7, #4]
 2611 0046 1B6E     		ldr	r3, [r3, #96]
 2612 0048 1800     		movs	r0, r3
 2613 004a FFF7FEFF 		bl	HAL_DMA_Abort
 2614              	.L127:
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
 2615              		.loc 1 1335 22
 2616 004e 7B68     		ldr	r3, [r7, #4]
 2617 0050 5222     		movs	r2, #82
 2618 0052 0021     		movs	r1, #0
 2619 0054 9952     		strh	r1, [r3, r2]
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2620              		.loc 1 1338 17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 70


 2621 0056 7B68     		ldr	r3, [r7, #4]
 2622 0058 6922     		movs	r2, #105
 2623 005a 2021     		movs	r1, #32
 2624 005c 9954     		strb	r1, [r3, r2]
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2625              		.loc 1 1340 10
 2626 005e 0023     		movs	r3, #0
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2627              		.loc 1 1341 1
 2628 0060 1800     		movs	r0, r3
 2629 0062 BD46     		mov	sp, r7
 2630 0064 02B0     		add	sp, sp, #8
 2631              		@ sp needed
 2632 0066 80BD     		pop	{r7, pc}
 2633              		.cfi_endproc
 2634              	.LFE53:
 2636              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2637              		.align	1
 2638              		.global	HAL_UART_AbortReceive
 2639              		.syntax unified
 2640              		.code	16
 2641              		.thumb_func
 2642              		.fpu softvfp
 2644              	HAL_UART_AbortReceive:
 2645              	.LFB54:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2646              		.loc 1 1356 1
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 8
 2649              		@ frame_needed = 1, uses_anonymous_args = 0
 2650 0000 80B5     		push	{r7, lr}
 2651              	.LCFI51:
 2652              		.cfi_def_cfa_offset 8
 2653              		.cfi_offset 7, -8
 2654              		.cfi_offset 14, -4
 2655 0002 82B0     		sub	sp, sp, #8
 2656              	.LCFI52:
 2657              		.cfi_def_cfa_offset 16
 2658 0004 00AF     		add	r7, sp, #0
 2659              	.LCFI53:
 2660              		.cfi_def_cfa_register 7
 2661 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 71


1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2662              		.loc 1 1358 3
 2663 0008 7B68     		ldr	r3, [r7, #4]
 2664 000a 1B68     		ldr	r3, [r3]
 2665 000c 1A68     		ldr	r2, [r3]
 2666 000e 7B68     		ldr	r3, [r7, #4]
 2667 0010 1B68     		ldr	r3, [r3]
 2668 0012 1B49     		ldr	r1, .L132
 2669 0014 0A40     		ands	r2, r1
 2670 0016 1A60     		str	r2, [r3]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2671              		.loc 1 1359 3
 2672 0018 7B68     		ldr	r3, [r7, #4]
 2673 001a 1B68     		ldr	r3, [r3]
 2674 001c 9A68     		ldr	r2, [r3, #8]
 2675 001e 7B68     		ldr	r3, [r7, #4]
 2676 0020 1B68     		ldr	r3, [r3]
 2677 0022 0121     		movs	r1, #1
 2678 0024 8A43     		bics	r2, r1
 2679 0026 9A60     		str	r2, [r3, #8]
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2680              		.loc 1 1362 7
 2681 0028 7B68     		ldr	r3, [r7, #4]
 2682 002a 1B68     		ldr	r3, [r3]
 2683 002c 9B68     		ldr	r3, [r3, #8]
 2684 002e 4022     		movs	r2, #64
 2685 0030 1340     		ands	r3, r2
 2686              		.loc 1 1362 6
 2687 0032 14D0     		beq	.L130
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2688              		.loc 1 1364 5
 2689 0034 7B68     		ldr	r3, [r7, #4]
 2690 0036 1B68     		ldr	r3, [r3]
 2691 0038 9A68     		ldr	r2, [r3, #8]
 2692 003a 7B68     		ldr	r3, [r7, #4]
 2693 003c 1B68     		ldr	r3, [r3]
 2694 003e 4021     		movs	r1, #64
 2695 0040 8A43     		bics	r2, r1
 2696 0042 9A60     		str	r2, [r3, #8]
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2697              		.loc 1 1367 13
 2698 0044 7B68     		ldr	r3, [r7, #4]
 2699 0046 5B6E     		ldr	r3, [r3, #100]
 2700              		.loc 1 1367 7
 2701 0048 002B     		cmp	r3, #0
 2702 004a 08D0     		beq	.L130
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2703              		.loc 1 1371 12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 72


 2704 004c 7B68     		ldr	r3, [r7, #4]
 2705 004e 5B6E     		ldr	r3, [r3, #100]
 2706              		.loc 1 1371 40
 2707 0050 0022     		movs	r2, #0
 2708 0052 5A63     		str	r2, [r3, #52]
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2709              		.loc 1 1373 7
 2710 0054 7B68     		ldr	r3, [r7, #4]
 2711 0056 5B6E     		ldr	r3, [r3, #100]
 2712 0058 1800     		movs	r0, r3
 2713 005a FFF7FEFF 		bl	HAL_DMA_Abort
 2714              	.L130:
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 2715              		.loc 1 1378 22
 2716 005e 7B68     		ldr	r3, [r7, #4]
 2717 0060 5A22     		movs	r2, #90
 2718 0062 0021     		movs	r1, #0
 2719 0064 9952     		strh	r1, [r3, r2]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2720              		.loc 1 1381 3
 2721 0066 7B68     		ldr	r3, [r7, #4]
 2722 0068 1B68     		ldr	r3, [r3]
 2723 006a 0F22     		movs	r2, #15
 2724 006c 1A62     		str	r2, [r3, #32]
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2725              		.loc 1 1384 18
 2726 006e 7B68     		ldr	r3, [r7, #4]
 2727 0070 6A22     		movs	r2, #106
 2728 0072 2021     		movs	r1, #32
 2729 0074 9954     		strb	r1, [r3, r2]
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2730              		.loc 1 1386 10
 2731 0076 0023     		movs	r3, #0
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2732              		.loc 1 1387 1
 2733 0078 1800     		movs	r0, r3
 2734 007a BD46     		mov	sp, r7
 2735 007c 02B0     		add	sp, sp, #8
 2736              		@ sp needed
 2737 007e 80BD     		pop	{r7, pc}
 2738              	.L133:
 2739              		.align	2
 2740              	.L132:
 2741 0080 DFFEFFFF 		.word	-289
 2742              		.cfi_endproc
 2743              	.LFE54:
 2745              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 73


 2746              		.align	1
 2747              		.global	HAL_UART_Abort_IT
 2748              		.syntax unified
 2749              		.code	16
 2750              		.thumb_func
 2751              		.fpu softvfp
 2753              	HAL_UART_Abort_IT:
 2754              	.LFB55:
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2755              		.loc 1 1404 1
 2756              		.cfi_startproc
 2757              		@ args = 0, pretend = 0, frame = 16
 2758              		@ frame_needed = 1, uses_anonymous_args = 0
 2759 0000 80B5     		push	{r7, lr}
 2760              	.LCFI54:
 2761              		.cfi_def_cfa_offset 8
 2762              		.cfi_offset 7, -8
 2763              		.cfi_offset 14, -4
 2764 0002 84B0     		sub	sp, sp, #16
 2765              	.LCFI55:
 2766              		.cfi_def_cfa_offset 24
 2767 0004 00AF     		add	r7, sp, #0
 2768              	.LCFI56:
 2769              		.cfi_def_cfa_register 7
 2770 0006 7860     		str	r0, [r7, #4]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2771              		.loc 1 1405 12
 2772 0008 0123     		movs	r3, #1
 2773 000a FB60     		str	r3, [r7, #12]
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2774              		.loc 1 1408 3
 2775 000c 7B68     		ldr	r3, [r7, #4]
 2776 000e 1B68     		ldr	r3, [r3]
 2777 0010 1A68     		ldr	r2, [r3]
 2778 0012 7B68     		ldr	r3, [r7, #4]
 2779 0014 1B68     		ldr	r3, [r3]
 2780 0016 4B49     		ldr	r1, .L145
 2781 0018 0A40     		ands	r2, r1
 2782 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 74


1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2783              		.loc 1 1409 3
 2784 001c 7B68     		ldr	r3, [r7, #4]
 2785 001e 1B68     		ldr	r3, [r3]
 2786 0020 9A68     		ldr	r2, [r3, #8]
 2787 0022 7B68     		ldr	r3, [r7, #4]
 2788 0024 1B68     		ldr	r3, [r3]
 2789 0026 0121     		movs	r1, #1
 2790 0028 8A43     		bics	r2, r1
 2791 002a 9A60     		str	r2, [r3, #8]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2792              		.loc 1 1414 11
 2793 002c 7B68     		ldr	r3, [r7, #4]
 2794 002e 1B6E     		ldr	r3, [r3, #96]
 2795              		.loc 1 1414 5
 2796 0030 002B     		cmp	r3, #0
 2797 0032 0ED0     		beq	.L135
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2798              		.loc 1 1418 8
 2799 0034 7B68     		ldr	r3, [r7, #4]
 2800 0036 1B68     		ldr	r3, [r3]
 2801 0038 9B68     		ldr	r3, [r3, #8]
 2802 003a 8022     		movs	r2, #128
 2803 003c 1340     		ands	r3, r2
 2804              		.loc 1 1418 7
 2805 003e 04D0     		beq	.L136
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2806              		.loc 1 1420 12
 2807 0040 7B68     		ldr	r3, [r7, #4]
 2808 0042 1B6E     		ldr	r3, [r3, #96]
 2809              		.loc 1 1420 40
 2810 0044 404A     		ldr	r2, .L145+4
 2811 0046 5A63     		str	r2, [r3, #52]
 2812 0048 03E0     		b	.L135
 2813              	.L136:
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2814              		.loc 1 1424 12
 2815 004a 7B68     		ldr	r3, [r7, #4]
 2816 004c 1B6E     		ldr	r3, [r3, #96]
 2817              		.loc 1 1424 40
 2818 004e 0022     		movs	r2, #0
 2819 0050 5A63     		str	r2, [r3, #52]
 2820              	.L135:
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 75


1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2821              		.loc 1 1428 11
 2822 0052 7B68     		ldr	r3, [r7, #4]
 2823 0054 5B6E     		ldr	r3, [r3, #100]
 2824              		.loc 1 1428 5
 2825 0056 002B     		cmp	r3, #0
 2826 0058 0ED0     		beq	.L137
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2827              		.loc 1 1432 8
 2828 005a 7B68     		ldr	r3, [r7, #4]
 2829 005c 1B68     		ldr	r3, [r3]
 2830 005e 9B68     		ldr	r3, [r3, #8]
 2831 0060 4022     		movs	r2, #64
 2832 0062 1340     		ands	r3, r2
 2833              		.loc 1 1432 7
 2834 0064 04D0     		beq	.L138
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2835              		.loc 1 1434 12
 2836 0066 7B68     		ldr	r3, [r7, #4]
 2837 0068 5B6E     		ldr	r3, [r3, #100]
 2838              		.loc 1 1434 40
 2839 006a 384A     		ldr	r2, .L145+8
 2840 006c 5A63     		str	r2, [r3, #52]
 2841 006e 03E0     		b	.L137
 2842              	.L138:
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2843              		.loc 1 1438 12
 2844 0070 7B68     		ldr	r3, [r7, #4]
 2845 0072 5B6E     		ldr	r3, [r3, #100]
 2846              		.loc 1 1438 40
 2847 0074 0022     		movs	r2, #0
 2848 0076 5A63     		str	r2, [r3, #52]
 2849              	.L137:
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2850              		.loc 1 1443 6
 2851 0078 7B68     		ldr	r3, [r7, #4]
 2852 007a 1B68     		ldr	r3, [r3]
 2853 007c 9B68     		ldr	r3, [r3, #8]
 2854 007e 8022     		movs	r2, #128
 2855 0080 1340     		ands	r3, r2
 2856              		.loc 1 1443 5
 2857 0082 19D0     		beq	.L139
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2858              		.loc 1 1446 5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 76


 2859 0084 7B68     		ldr	r3, [r7, #4]
 2860 0086 1B68     		ldr	r3, [r3]
 2861 0088 9A68     		ldr	r2, [r3, #8]
 2862 008a 7B68     		ldr	r3, [r7, #4]
 2863 008c 1B68     		ldr	r3, [r3]
 2864 008e 8021     		movs	r1, #128
 2865 0090 8A43     		bics	r2, r1
 2866 0092 9A60     		str	r2, [r3, #8]
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2867              		.loc 1 1449 13
 2868 0094 7B68     		ldr	r3, [r7, #4]
 2869 0096 1B6E     		ldr	r3, [r3, #96]
 2870              		.loc 1 1449 7
 2871 0098 002B     		cmp	r3, #0
 2872 009a 0DD0     		beq	.L139
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2873              		.loc 1 1455 10
 2874 009c 7B68     		ldr	r3, [r7, #4]
 2875 009e 1B6E     		ldr	r3, [r3, #96]
 2876 00a0 1800     		movs	r0, r3
 2877 00a2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2878 00a6 031E     		subs	r3, r0, #0
 2879              		.loc 1 1455 9
 2880 00a8 04D0     		beq	.L140
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2881              		.loc 1 1457 14
 2882 00aa 7B68     		ldr	r3, [r7, #4]
 2883 00ac 1B6E     		ldr	r3, [r3, #96]
 2884              		.loc 1 1457 42
 2885 00ae 0022     		movs	r2, #0
 2886 00b0 5A63     		str	r2, [r3, #52]
 2887 00b2 01E0     		b	.L139
 2888              	.L140:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 2889              		.loc 1 1461 19
 2890 00b4 0023     		movs	r3, #0
 2891 00b6 FB60     		str	r3, [r7, #12]
 2892              	.L139:
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2893              		.loc 1 1467 7
 2894 00b8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 77


 2895 00ba 1B68     		ldr	r3, [r3]
 2896 00bc 9B68     		ldr	r3, [r3, #8]
 2897 00be 4022     		movs	r2, #64
 2898 00c0 1340     		ands	r3, r2
 2899              		.loc 1 1467 6
 2900 00c2 1BD0     		beq	.L141
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2901              		.loc 1 1469 5
 2902 00c4 7B68     		ldr	r3, [r7, #4]
 2903 00c6 1B68     		ldr	r3, [r3]
 2904 00c8 9A68     		ldr	r2, [r3, #8]
 2905 00ca 7B68     		ldr	r3, [r7, #4]
 2906 00cc 1B68     		ldr	r3, [r3]
 2907 00ce 4021     		movs	r1, #64
 2908 00d0 8A43     		bics	r2, r1
 2909 00d2 9A60     		str	r2, [r3, #8]
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2910              		.loc 1 1472 13
 2911 00d4 7B68     		ldr	r3, [r7, #4]
 2912 00d6 5B6E     		ldr	r3, [r3, #100]
 2913              		.loc 1 1472 7
 2914 00d8 002B     		cmp	r3, #0
 2915 00da 0FD0     		beq	.L141
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2916              		.loc 1 1478 10
 2917 00dc 7B68     		ldr	r3, [r7, #4]
 2918 00de 5B6E     		ldr	r3, [r3, #100]
 2919 00e0 1800     		movs	r0, r3
 2920 00e2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2921 00e6 031E     		subs	r3, r0, #0
 2922              		.loc 1 1478 9
 2923 00e8 06D0     		beq	.L142
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2924              		.loc 1 1480 14
 2925 00ea 7B68     		ldr	r3, [r7, #4]
 2926 00ec 5B6E     		ldr	r3, [r3, #100]
 2927              		.loc 1 1480 42
 2928 00ee 0022     		movs	r2, #0
 2929 00f0 5A63     		str	r2, [r3, #52]
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 2930              		.loc 1 1481 19
 2931 00f2 0123     		movs	r3, #1
 2932 00f4 FB60     		str	r3, [r7, #12]
 2933 00f6 01E0     		b	.L141
 2934              	.L142:
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 78


1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 2935              		.loc 1 1485 19
 2936 00f8 0023     		movs	r3, #0
 2937 00fa FB60     		str	r3, [r7, #12]
 2938              	.L141:
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
 2939              		.loc 1 1491 6
 2940 00fc FB68     		ldr	r3, [r7, #12]
 2941 00fe 012B     		cmp	r3, #1
 2942 0100 1AD1     		bne	.L143
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
 2943              		.loc 1 1494 24
 2944 0102 7B68     		ldr	r3, [r7, #4]
 2945 0104 5222     		movs	r2, #82
 2946 0106 0021     		movs	r1, #0
 2947 0108 9952     		strh	r1, [r3, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2948              		.loc 1 1495 24
 2949 010a 7B68     		ldr	r3, [r7, #4]
 2950 010c 5A22     		movs	r2, #90
 2951 010e 0021     		movs	r1, #0
 2952 0110 9952     		strh	r1, [r3, r2]
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2953              		.loc 1 1498 22
 2954 0112 7B68     		ldr	r3, [r7, #4]
 2955 0114 0022     		movs	r2, #0
 2956 0116 DA66     		str	r2, [r3, #108]
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2957              		.loc 1 1501 5
 2958 0118 7B68     		ldr	r3, [r7, #4]
 2959 011a 1B68     		ldr	r3, [r3]
 2960 011c 0F22     		movs	r2, #15
 2961 011e 1A62     		str	r2, [r3, #32]
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2962              		.loc 1 1504 20
 2963 0120 7B68     		ldr	r3, [r7, #4]
 2964 0122 6922     		movs	r2, #105
 2965 0124 2021     		movs	r1, #32
 2966 0126 9954     		strb	r1, [r3, r2]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2967              		.loc 1 1505 20
 2968 0128 7B68     		ldr	r3, [r7, #4]
 2969 012a 6A22     		movs	r2, #106
 2970 012c 2021     		movs	r1, #32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 79


 2971 012e 9954     		strb	r1, [r3, r2]
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2972              		.loc 1 1508 5
 2973 0130 7B68     		ldr	r3, [r7, #4]
 2974 0132 1800     		movs	r0, r3
 2975 0134 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2976              	.L143:
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2977              		.loc 1 1511 10
 2978 0138 0023     		movs	r3, #0
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2979              		.loc 1 1512 1
 2980 013a 1800     		movs	r0, r3
 2981 013c BD46     		mov	sp, r7
 2982 013e 04B0     		add	sp, sp, #16
 2983              		@ sp needed
 2984 0140 80BD     		pop	{r7, pc}
 2985              	.L146:
 2986 0142 C046     		.align	2
 2987              	.L145:
 2988 0144 1FFEFFFF 		.word	-481
 2989 0148 00000000 		.word	UART_DMATxAbortCallback
 2990 014c 00000000 		.word	UART_DMARxAbortCallback
 2991              		.cfi_endproc
 2992              	.LFE55:
 2994              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2995              		.align	1
 2996              		.global	HAL_UART_AbortTransmit_IT
 2997              		.syntax unified
 2998              		.code	16
 2999              		.thumb_func
 3000              		.fpu softvfp
 3002              	HAL_UART_AbortTransmit_IT:
 3003              	.LFB56:
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3004              		.loc 1 1529 1
 3005              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 80


 3006              		@ args = 0, pretend = 0, frame = 8
 3007              		@ frame_needed = 1, uses_anonymous_args = 0
 3008 0000 80B5     		push	{r7, lr}
 3009              	.LCFI57:
 3010              		.cfi_def_cfa_offset 8
 3011              		.cfi_offset 7, -8
 3012              		.cfi_offset 14, -4
 3013 0002 82B0     		sub	sp, sp, #8
 3014              	.LCFI58:
 3015              		.cfi_def_cfa_offset 16
 3016 0004 00AF     		add	r7, sp, #0
 3017              	.LCFI59:
 3018              		.cfi_def_cfa_register 7
 3019 0006 7860     		str	r0, [r7, #4]
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3020              		.loc 1 1531 3
 3021 0008 7B68     		ldr	r3, [r7, #4]
 3022 000a 1B68     		ldr	r3, [r3]
 3023 000c 1A68     		ldr	r2, [r3]
 3024 000e 7B68     		ldr	r3, [r7, #4]
 3025 0010 1B68     		ldr	r3, [r3]
 3026 0012 C021     		movs	r1, #192
 3027 0014 8A43     		bics	r2, r1
 3028 0016 1A60     		str	r2, [r3]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3029              		.loc 1 1534 7
 3030 0018 7B68     		ldr	r3, [r7, #4]
 3031 001a 1B68     		ldr	r3, [r3]
 3032 001c 9B68     		ldr	r3, [r3, #8]
 3033 001e 8022     		movs	r2, #128
 3034 0020 1340     		ands	r3, r2
 3035              		.loc 1 1534 6
 3036 0022 2BD0     		beq	.L148
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3037              		.loc 1 1536 5
 3038 0024 7B68     		ldr	r3, [r7, #4]
 3039 0026 1B68     		ldr	r3, [r3]
 3040 0028 9A68     		ldr	r2, [r3, #8]
 3041 002a 7B68     		ldr	r3, [r7, #4]
 3042 002c 1B68     		ldr	r3, [r3]
 3043 002e 8021     		movs	r1, #128
 3044 0030 8A43     		bics	r2, r1
 3045 0032 9A60     		str	r2, [r3, #8]
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 3046              		.loc 1 1539 13
 3047 0034 7B68     		ldr	r3, [r7, #4]
 3048 0036 1B6E     		ldr	r3, [r3, #96]
 3049              		.loc 1 1539 7
 3050 0038 002B     		cmp	r3, #0
 3051 003a 12D0     		beq	.L149
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 81


1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3052              		.loc 1 1543 12
 3053 003c 7B68     		ldr	r3, [r7, #4]
 3054 003e 1B6E     		ldr	r3, [r3, #96]
 3055              		.loc 1 1543 40
 3056 0040 174A     		ldr	r2, .L152
 3057 0042 5A63     		str	r2, [r3, #52]
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3058              		.loc 1 1546 10
 3059 0044 7B68     		ldr	r3, [r7, #4]
 3060 0046 1B6E     		ldr	r3, [r3, #96]
 3061 0048 1800     		movs	r0, r3
 3062 004a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3063 004e 031E     		subs	r3, r0, #0
 3064              		.loc 1 1546 9
 3065 0050 20D0     		beq	.L150
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3066              		.loc 1 1549 14
 3067 0052 7B68     		ldr	r3, [r7, #4]
 3068 0054 1B6E     		ldr	r3, [r3, #96]
 3069              		.loc 1 1549 22
 3070 0056 5A6B     		ldr	r2, [r3, #52]
 3071              		.loc 1 1549 47
 3072 0058 7B68     		ldr	r3, [r7, #4]
 3073 005a 1B6E     		ldr	r3, [r3, #96]
 3074              		.loc 1 1549 9
 3075 005c 1800     		movs	r0, r3
 3076 005e 9047     		blx	r2
 3077              	.LVL0:
 3078 0060 18E0     		b	.L150
 3079              	.L149:
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
 3080              		.loc 1 1555 26
 3081 0062 7B68     		ldr	r3, [r7, #4]
 3082 0064 5222     		movs	r2, #82
 3083 0066 0021     		movs	r1, #0
 3084 0068 9952     		strh	r1, [r3, r2]
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3085              		.loc 1 1558 21
 3086 006a 7B68     		ldr	r3, [r7, #4]
 3087 006c 6922     		movs	r2, #105
 3088 006e 2021     		movs	r1, #32
 3089 0070 9954     		strb	r1, [r3, r2]
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 82


1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3090              		.loc 1 1561 7
 3091 0072 7B68     		ldr	r3, [r7, #4]
 3092 0074 1800     		movs	r0, r3
 3093 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3094 007a 0BE0     		b	.L150
 3095              	.L148:
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
 3096              		.loc 1 1567 24
 3097 007c 7B68     		ldr	r3, [r7, #4]
 3098 007e 5222     		movs	r2, #82
 3099 0080 0021     		movs	r1, #0
 3100 0082 9952     		strh	r1, [r3, r2]
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3101              		.loc 1 1570 19
 3102 0084 7B68     		ldr	r3, [r7, #4]
 3103 0086 6922     		movs	r2, #105
 3104 0088 2021     		movs	r1, #32
 3105 008a 9954     		strb	r1, [r3, r2]
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3106              		.loc 1 1573 5
 3107 008c 7B68     		ldr	r3, [r7, #4]
 3108 008e 1800     		movs	r0, r3
 3109 0090 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3110              	.L150:
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3111              		.loc 1 1576 10
 3112 0094 0023     		movs	r3, #0
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3113              		.loc 1 1577 1
 3114 0096 1800     		movs	r0, r3
 3115 0098 BD46     		mov	sp, r7
 3116 009a 02B0     		add	sp, sp, #8
 3117              		@ sp needed
 3118 009c 80BD     		pop	{r7, pc}
 3119              	.L153:
 3120 009e C046     		.align	2
 3121              	.L152:
 3122 00a0 00000000 		.word	UART_DMATxOnlyAbortCallback
 3123              		.cfi_endproc
 3124              	.LFE56:
 3126              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3127              		.align	1
 3128              		.global	HAL_UART_AbortReceive_IT
 3129              		.syntax unified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 83


 3130              		.code	16
 3131              		.thumb_func
 3132              		.fpu softvfp
 3134              	HAL_UART_AbortReceive_IT:
 3135              	.LFB57:
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3136              		.loc 1 1594 1
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 8
 3139              		@ frame_needed = 1, uses_anonymous_args = 0
 3140 0000 80B5     		push	{r7, lr}
 3141              	.LCFI60:
 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 7, -8
 3144              		.cfi_offset 14, -4
 3145 0002 82B0     		sub	sp, sp, #8
 3146              	.LCFI61:
 3147              		.cfi_def_cfa_offset 16
 3148 0004 00AF     		add	r7, sp, #0
 3149              	.LCFI62:
 3150              		.cfi_def_cfa_register 7
 3151 0006 7860     		str	r0, [r7, #4]
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3152              		.loc 1 1596 3
 3153 0008 7B68     		ldr	r3, [r7, #4]
 3154 000a 1B68     		ldr	r3, [r3]
 3155 000c 1A68     		ldr	r2, [r3]
 3156 000e 7B68     		ldr	r3, [r7, #4]
 3157 0010 1B68     		ldr	r3, [r3]
 3158 0012 2B49     		ldr	r1, .L159
 3159 0014 0A40     		ands	r2, r1
 3160 0016 1A60     		str	r2, [r3]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3161              		.loc 1 1597 3
 3162 0018 7B68     		ldr	r3, [r7, #4]
 3163 001a 1B68     		ldr	r3, [r3]
 3164 001c 9A68     		ldr	r2, [r3, #8]
 3165 001e 7B68     		ldr	r3, [r7, #4]
 3166 0020 1B68     		ldr	r3, [r3]
 3167 0022 0121     		movs	r1, #1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 84


 3168 0024 8A43     		bics	r2, r1
 3169 0026 9A60     		str	r2, [r3, #8]
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3170              		.loc 1 1600 7
 3171 0028 7B68     		ldr	r3, [r7, #4]
 3172 002a 1B68     		ldr	r3, [r3]
 3173 002c 9B68     		ldr	r3, [r3, #8]
 3174 002e 4022     		movs	r2, #64
 3175 0030 1340     		ands	r3, r2
 3176              		.loc 1 1600 6
 3177 0032 2FD0     		beq	.L155
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3178              		.loc 1 1602 5
 3179 0034 7B68     		ldr	r3, [r7, #4]
 3180 0036 1B68     		ldr	r3, [r3]
 3181 0038 9A68     		ldr	r2, [r3, #8]
 3182 003a 7B68     		ldr	r3, [r7, #4]
 3183 003c 1B68     		ldr	r3, [r3]
 3184 003e 4021     		movs	r1, #64
 3185 0040 8A43     		bics	r2, r1
 3186 0042 9A60     		str	r2, [r3, #8]
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 3187              		.loc 1 1605 13
 3188 0044 7B68     		ldr	r3, [r7, #4]
 3189 0046 5B6E     		ldr	r3, [r3, #100]
 3190              		.loc 1 1605 7
 3191 0048 002B     		cmp	r3, #0
 3192 004a 12D0     		beq	.L156
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3193              		.loc 1 1609 12
 3194 004c 7B68     		ldr	r3, [r7, #4]
 3195 004e 5B6E     		ldr	r3, [r3, #100]
 3196              		.loc 1 1609 40
 3197 0050 1C4A     		ldr	r2, .L159+4
 3198 0052 5A63     		str	r2, [r3, #52]
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3199              		.loc 1 1612 10
 3200 0054 7B68     		ldr	r3, [r7, #4]
 3201 0056 5B6E     		ldr	r3, [r3, #100]
 3202 0058 1800     		movs	r0, r3
 3203 005a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3204 005e 031E     		subs	r3, r0, #0
 3205              		.loc 1 1612 9
 3206 0060 28D0     		beq	.L157
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 85


 3207              		.loc 1 1615 14
 3208 0062 7B68     		ldr	r3, [r7, #4]
 3209 0064 5B6E     		ldr	r3, [r3, #100]
 3210              		.loc 1 1615 22
 3211 0066 5A6B     		ldr	r2, [r3, #52]
 3212              		.loc 1 1615 47
 3213 0068 7B68     		ldr	r3, [r7, #4]
 3214 006a 5B6E     		ldr	r3, [r3, #100]
 3215              		.loc 1 1615 9
 3216 006c 1800     		movs	r0, r3
 3217 006e 9047     		blx	r2
 3218              	.LVL1:
 3219 0070 20E0     		b	.L157
 3220              	.L156:
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
 3221              		.loc 1 1621 26
 3222 0072 7B68     		ldr	r3, [r7, #4]
 3223 0074 5A22     		movs	r2, #90
 3224 0076 0021     		movs	r1, #0
 3225 0078 9952     		strh	r1, [r3, r2]
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3226              		.loc 1 1624 7
 3227 007a 7B68     		ldr	r3, [r7, #4]
 3228 007c 1B68     		ldr	r3, [r3]
 3229 007e 0F22     		movs	r2, #15
 3230 0080 1A62     		str	r2, [r3, #32]
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3231              		.loc 1 1627 22
 3232 0082 7B68     		ldr	r3, [r7, #4]
 3233 0084 6A22     		movs	r2, #106
 3234 0086 2021     		movs	r1, #32
 3235 0088 9954     		strb	r1, [r3, r2]
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3236              		.loc 1 1630 7
 3237 008a 7B68     		ldr	r3, [r7, #4]
 3238 008c 1800     		movs	r0, r3
 3239 008e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3240 0092 0FE0     		b	.L157
 3241              	.L155:
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
 3242              		.loc 1 1636 24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 86


 3243 0094 7B68     		ldr	r3, [r7, #4]
 3244 0096 5A22     		movs	r2, #90
 3245 0098 0021     		movs	r1, #0
 3246 009a 9952     		strh	r1, [r3, r2]
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3247              		.loc 1 1639 5
 3248 009c 7B68     		ldr	r3, [r7, #4]
 3249 009e 1B68     		ldr	r3, [r3]
 3250 00a0 0F22     		movs	r2, #15
 3251 00a2 1A62     		str	r2, [r3, #32]
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3252              		.loc 1 1642 20
 3253 00a4 7B68     		ldr	r3, [r7, #4]
 3254 00a6 6A22     		movs	r2, #106
 3255 00a8 2021     		movs	r1, #32
 3256 00aa 9954     		strb	r1, [r3, r2]
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3257              		.loc 1 1645 5
 3258 00ac 7B68     		ldr	r3, [r7, #4]
 3259 00ae 1800     		movs	r0, r3
 3260 00b0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3261              	.L157:
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3262              		.loc 1 1648 10
 3263 00b4 0023     		movs	r3, #0
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3264              		.loc 1 1649 1
 3265 00b6 1800     		movs	r0, r3
 3266 00b8 BD46     		mov	sp, r7
 3267 00ba 02B0     		add	sp, sp, #8
 3268              		@ sp needed
 3269 00bc 80BD     		pop	{r7, pc}
 3270              	.L160:
 3271 00be C046     		.align	2
 3272              	.L159:
 3273 00c0 DFFEFFFF 		.word	-289
 3274 00c4 00000000 		.word	UART_DMARxOnlyAbortCallback
 3275              		.cfi_endproc
 3276              	.LFE57:
 3278              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3279              		.align	1
 3280              		.global	HAL_UART_IRQHandler
 3281              		.syntax unified
 3282              		.code	16
 3283              		.thumb_func
 3284              		.fpu softvfp
 3286              	HAL_UART_IRQHandler:
 3287              	.LFB58:
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 87


1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3288              		.loc 1 1657 1
 3289              		.cfi_startproc
 3290              		@ args = 0, pretend = 0, frame = 24
 3291              		@ frame_needed = 1, uses_anonymous_args = 0
 3292 0000 80B5     		push	{r7, lr}
 3293              	.LCFI63:
 3294              		.cfi_def_cfa_offset 8
 3295              		.cfi_offset 7, -8
 3296              		.cfi_offset 14, -4
 3297 0002 86B0     		sub	sp, sp, #24
 3298              	.LCFI64:
 3299              		.cfi_def_cfa_offset 32
 3300 0004 00AF     		add	r7, sp, #0
 3301              	.LCFI65:
 3302              		.cfi_def_cfa_register 7
 3303 0006 7860     		str	r0, [r7, #4]
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3304              		.loc 1 1658 25
 3305 0008 7B68     		ldr	r3, [r7, #4]
 3306 000a 1B68     		ldr	r3, [r3]
 3307              		.loc 1 1658 12
 3308 000c DB69     		ldr	r3, [r3, #28]
 3309 000e 7B61     		str	r3, [r7, #20]
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3310              		.loc 1 1659 25
 3311 0010 7B68     		ldr	r3, [r7, #4]
 3312 0012 1B68     		ldr	r3, [r3]
 3313              		.loc 1 1659 12
 3314 0014 1B68     		ldr	r3, [r3]
 3315 0016 3B61     		str	r3, [r7, #16]
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3316              		.loc 1 1664 14
 3317 0018 7B69     		ldr	r3, [r7, #20]
 3318 001a 0F22     		movs	r2, #15
 3319 001c 1340     		ands	r3, r2
 3320 001e FB60     		str	r3, [r7, #12]
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 3321              		.loc 1 1665 6
 3322 0020 FB68     		ldr	r3, [r7, #12]
 3323 0022 002B     		cmp	r3, #0
 3324 0024 0CD1     		bne	.L162
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3325              		.loc 1 1668 19
 3326 0026 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 88


 3327 0028 2022     		movs	r2, #32
 3328 002a 1340     		ands	r3, r2
 3329              		.loc 1 1668 7
 3330 002c 08D0     		beq	.L162
 3331              		.loc 1 1668 59 discriminator 1
 3332 002e 3B69     		ldr	r3, [r7, #16]
 3333 0030 2022     		movs	r2, #32
 3334 0032 1340     		ands	r3, r2
 3335              		.loc 1 1668 47 discriminator 1
 3336 0034 04D0     		beq	.L162
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
 3337              		.loc 1 1670 7
 3338 0036 7B68     		ldr	r3, [r7, #4]
 3339 0038 1800     		movs	r0, r3
 3340 003a FFF7FEFF 		bl	UART_Receive_IT
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 3341              		.loc 1 1671 7
 3342 003e EEE0     		b	.L161
 3343              	.L162:
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
 3344              		.loc 1 1676 12
 3345 0040 7B68     		ldr	r3, [r7, #4]
 3346 0042 1B68     		ldr	r3, [r3]
 3347              		.loc 1 1676 10
 3348 0044 9B68     		ldr	r3, [r3, #8]
 3349 0046 BB60     		str	r3, [r7, #8]
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 3350              		.loc 1 1677 5
 3351 0048 FB68     		ldr	r3, [r7, #12]
 3352 004a 002B     		cmp	r3, #0
 3353 004c 00D1     		bne	.LCB2824
 3354 004e AFE0     		b	.L164	@long jump
 3355              	.LCB2824:
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 3356              		.loc 1 1678 22
 3357 0050 BB68     		ldr	r3, [r7, #8]
 3358 0052 0122     		movs	r2, #1
 3359 0054 1340     		ands	r3, r2
 3360              		.loc 1 1678 6
 3361 0056 05D1     		bne	.L165
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 3362              		.loc 1 1679 22
 3363 0058 3A69     		ldr	r2, [r7, #16]
 3364 005a 9023     		movs	r3, #144
 3365 005c 5B00     		lsls	r3, r3, #1
 3366 005e 1340     		ands	r3, r2
 3367              		.loc 1 1679 10
 3368 0060 00D1     		bne	.LCB2835
 3369 0062 A5E0     		b	.L164	@long jump
 3370              	.LCB2835:
 3371              	.L165:
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 89


1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3372              		.loc 1 1682 19
 3373 0064 7B69     		ldr	r3, [r7, #20]
 3374 0066 0122     		movs	r2, #1
 3375 0068 1340     		ands	r3, r2
 3376              		.loc 1 1682 7
 3377 006a 0ED0     		beq	.L166
 3378              		.loc 1 1682 57 discriminator 1
 3379 006c 3A69     		ldr	r2, [r7, #16]
 3380 006e 8023     		movs	r3, #128
 3381 0070 5B00     		lsls	r3, r3, #1
 3382 0072 1340     		ands	r3, r2
 3383              		.loc 1 1682 45 discriminator 1
 3384 0074 09D0     		beq	.L166
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 3385              		.loc 1 1684 7
 3386 0076 7B68     		ldr	r3, [r7, #4]
 3387 0078 1B68     		ldr	r3, [r3]
 3388 007a 0122     		movs	r2, #1
 3389 007c 1A62     		str	r2, [r3, #32]
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3390              		.loc 1 1686 24
 3391 007e 7B68     		ldr	r3, [r7, #4]
 3392 0080 DB6E     		ldr	r3, [r3, #108]
 3393 0082 0122     		movs	r2, #1
 3394 0084 1A43     		orrs	r2, r3
 3395 0086 7B68     		ldr	r3, [r7, #4]
 3396 0088 DA66     		str	r2, [r3, #108]
 3397              	.L166:
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3398              		.loc 1 1690 19
 3399 008a 7B69     		ldr	r3, [r7, #20]
 3400 008c 0222     		movs	r2, #2
 3401 008e 1340     		ands	r3, r2
 3402              		.loc 1 1690 7
 3403 0090 0DD0     		beq	.L167
 3404              		.loc 1 1690 57 discriminator 1
 3405 0092 BB68     		ldr	r3, [r7, #8]
 3406 0094 0122     		movs	r2, #1
 3407 0096 1340     		ands	r3, r2
 3408              		.loc 1 1690 45 discriminator 1
 3409 0098 09D0     		beq	.L167
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 3410              		.loc 1 1692 7
 3411 009a 7B68     		ldr	r3, [r7, #4]
 3412 009c 1B68     		ldr	r3, [r3]
 3413 009e 0222     		movs	r2, #2
 3414 00a0 1A62     		str	r2, [r3, #32]
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 90


 3415              		.loc 1 1694 24
 3416 00a2 7B68     		ldr	r3, [r7, #4]
 3417 00a4 DB6E     		ldr	r3, [r3, #108]
 3418 00a6 0422     		movs	r2, #4
 3419 00a8 1A43     		orrs	r2, r3
 3420 00aa 7B68     		ldr	r3, [r7, #4]
 3421 00ac DA66     		str	r2, [r3, #108]
 3422              	.L167:
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3423              		.loc 1 1698 19
 3424 00ae 7B69     		ldr	r3, [r7, #20]
 3425 00b0 0422     		movs	r2, #4
 3426 00b2 1340     		ands	r3, r2
 3427              		.loc 1 1698 7
 3428 00b4 0DD0     		beq	.L168
 3429              		.loc 1 1698 57 discriminator 1
 3430 00b6 BB68     		ldr	r3, [r7, #8]
 3431 00b8 0122     		movs	r2, #1
 3432 00ba 1340     		ands	r3, r2
 3433              		.loc 1 1698 45 discriminator 1
 3434 00bc 09D0     		beq	.L168
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 3435              		.loc 1 1700 7
 3436 00be 7B68     		ldr	r3, [r7, #4]
 3437 00c0 1B68     		ldr	r3, [r3]
 3438 00c2 0422     		movs	r2, #4
 3439 00c4 1A62     		str	r2, [r3, #32]
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3440              		.loc 1 1702 24
 3441 00c6 7B68     		ldr	r3, [r7, #4]
 3442 00c8 DB6E     		ldr	r3, [r3, #108]
 3443 00ca 0222     		movs	r2, #2
 3444 00cc 1A43     		orrs	r2, r3
 3445 00ce 7B68     		ldr	r3, [r7, #4]
 3446 00d0 DA66     		str	r2, [r3, #108]
 3447              	.L168:
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 3448              		.loc 1 1706 19
 3449 00d2 7B69     		ldr	r3, [r7, #20]
 3450 00d4 0822     		movs	r2, #8
 3451 00d6 1340     		ands	r3, r2
 3452              		.loc 1 1706 7
 3453 00d8 11D0     		beq	.L169
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 3454              		.loc 1 1707 18 discriminator 1
 3455 00da 3B69     		ldr	r3, [r7, #16]
 3456 00dc 2022     		movs	r2, #32
 3457 00de 1340     		ands	r3, r2
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 91


 3458              		.loc 1 1706 46 discriminator 1
 3459 00e0 03D1     		bne	.L170
 3460              		.loc 1 1707 60
 3461 00e2 BB68     		ldr	r3, [r7, #8]
 3462 00e4 0122     		movs	r2, #1
 3463 00e6 1340     		ands	r3, r2
 3464              		.loc 1 1707 48
 3465 00e8 09D0     		beq	.L169
 3466              	.L170:
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 3467              		.loc 1 1709 7
 3468 00ea 7B68     		ldr	r3, [r7, #4]
 3469 00ec 1B68     		ldr	r3, [r3]
 3470 00ee 0822     		movs	r2, #8
 3471 00f0 1A62     		str	r2, [r3, #32]
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3472              		.loc 1 1711 24
 3473 00f2 7B68     		ldr	r3, [r7, #4]
 3474 00f4 DB6E     		ldr	r3, [r3, #108]
 3475 00f6 0822     		movs	r2, #8
 3476 00f8 1A43     		orrs	r2, r3
 3477 00fa 7B68     		ldr	r3, [r7, #4]
 3478 00fc DA66     		str	r2, [r3, #108]
 3479              	.L169:
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 3480              		.loc 1 1715 13
 3481 00fe 7B68     		ldr	r3, [r7, #4]
 3482 0100 DB6E     		ldr	r3, [r3, #108]
 3483              		.loc 1 1715 7
 3484 0102 002B     		cmp	r3, #0
 3485 0104 00D1     		bne	.LCB2935
 3486 0106 89E0     		b	.L180	@long jump
 3487              	.LCB2935:
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3488              		.loc 1 1718 21
 3489 0108 7B69     		ldr	r3, [r7, #20]
 3490 010a 2022     		movs	r2, #32
 3491 010c 1340     		ands	r3, r2
 3492              		.loc 1 1718 9
 3493 010e 07D0     		beq	.L172
 3494              		.loc 1 1718 61 discriminator 1
 3495 0110 3B69     		ldr	r3, [r7, #16]
 3496 0112 2022     		movs	r2, #32
 3497 0114 1340     		ands	r3, r2
 3498              		.loc 1 1718 49 discriminator 1
 3499 0116 03D0     		beq	.L172
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
 3500              		.loc 1 1720 9
 3501 0118 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 92


 3502 011a 1800     		movs	r0, r3
 3503 011c FFF7FEFF 		bl	UART_Receive_IT
 3504              	.L172:
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 3505              		.loc 1 1725 18
 3506 0120 7B68     		ldr	r3, [r7, #4]
 3507 0122 DB6E     		ldr	r3, [r3, #108]
 3508              		.loc 1 1725 30
 3509 0124 0822     		movs	r2, #8
 3510 0126 1340     		ands	r3, r2
 3511              		.loc 1 1725 10
 3512 0128 05D1     		bne	.L173
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3513              		.loc 1 1726 12 discriminator 1
 3514 012a 7B68     		ldr	r3, [r7, #4]
 3515 012c 1B68     		ldr	r3, [r3]
 3516 012e 9B68     		ldr	r3, [r3, #8]
 3517 0130 4022     		movs	r2, #64
 3518 0132 1340     		ands	r3, r2
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3519              		.loc 1 1725 62 discriminator 1
 3520 0134 32D0     		beq	.L174
 3521              	.L173:
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3522              		.loc 1 1731 9
 3523 0136 7B68     		ldr	r3, [r7, #4]
 3524 0138 1800     		movs	r0, r3
 3525 013a FFF7FEFF 		bl	UART_EndRxTransfer
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3526              		.loc 1 1734 13
 3527 013e 7B68     		ldr	r3, [r7, #4]
 3528 0140 1B68     		ldr	r3, [r3]
 3529 0142 9B68     		ldr	r3, [r3, #8]
 3530 0144 4022     		movs	r2, #64
 3531 0146 1340     		ands	r3, r2
 3532              		.loc 1 1734 12
 3533 0148 23D0     		beq	.L175
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3534              		.loc 1 1736 11
 3535 014a 7B68     		ldr	r3, [r7, #4]
 3536 014c 1B68     		ldr	r3, [r3]
 3537 014e 9A68     		ldr	r2, [r3, #8]
 3538 0150 7B68     		ldr	r3, [r7, #4]
 3539 0152 1B68     		ldr	r3, [r3]
 3540 0154 4021     		movs	r1, #64
 3541 0156 8A43     		bics	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 93


 3542 0158 9A60     		str	r2, [r3, #8]
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 3543              		.loc 1 1739 19
 3544 015a 7B68     		ldr	r3, [r7, #4]
 3545 015c 5B6E     		ldr	r3, [r3, #100]
 3546              		.loc 1 1739 13
 3547 015e 002B     		cmp	r3, #0
 3548 0160 12D0     		beq	.L176
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3549              		.loc 1 1743 18
 3550 0162 7B68     		ldr	r3, [r7, #4]
 3551 0164 5B6E     		ldr	r3, [r3, #100]
 3552              		.loc 1 1743 46
 3553 0166 2F4A     		ldr	r2, .L182
 3554 0168 5A63     		str	r2, [r3, #52]
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3555              		.loc 1 1746 16
 3556 016a 7B68     		ldr	r3, [r7, #4]
 3557 016c 5B6E     		ldr	r3, [r3, #100]
 3558 016e 1800     		movs	r0, r3
 3559 0170 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3560 0174 031E     		subs	r3, r0, #0
 3561              		.loc 1 1746 15
 3562 0176 19D0     		beq	.L181
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3563              		.loc 1 1749 20
 3564 0178 7B68     		ldr	r3, [r7, #4]
 3565 017a 5B6E     		ldr	r3, [r3, #100]
 3566              		.loc 1 1749 28
 3567 017c 5A6B     		ldr	r2, [r3, #52]
 3568              		.loc 1 1749 53
 3569 017e 7B68     		ldr	r3, [r7, #4]
 3570 0180 5B6E     		ldr	r3, [r3, #100]
 3571              		.loc 1 1749 15
 3572 0182 1800     		movs	r0, r3
 3573 0184 9047     		blx	r2
 3574              	.LVL2:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 3575              		.loc 1 1734 12
 3576 0186 11E0     		b	.L181
 3577              	.L176:
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3578              		.loc 1 1755 13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 94


 3579 0188 7B68     		ldr	r3, [r7, #4]
 3580 018a 1800     		movs	r0, r3
 3581 018c FFF7FEFF 		bl	HAL_UART_ErrorCallback
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 3582              		.loc 1 1734 12
 3583 0190 0CE0     		b	.L181
 3584              	.L175:
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3585              		.loc 1 1761 11
 3586 0192 7B68     		ldr	r3, [r7, #4]
 3587 0194 1800     		movs	r0, r3
 3588 0196 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 3589              		.loc 1 1734 12
 3590 019a 07E0     		b	.L181
 3591              	.L174:
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3592              		.loc 1 1768 9
 3593 019c 7B68     		ldr	r3, [r7, #4]
 3594 019e 1800     		movs	r0, r3
 3595 01a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3596              		.loc 1 1769 26
 3597 01a4 7B68     		ldr	r3, [r7, #4]
 3598 01a6 0022     		movs	r2, #0
 3599 01a8 DA66     		str	r2, [r3, #108]
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 3600              		.loc 1 1772 5
 3601 01aa 37E0     		b	.L180
 3602              	.L181:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 3603              		.loc 1 1734 12
 3604 01ac C046     		nop
 3605              		.loc 1 1772 5
 3606 01ae 35E0     		b	.L180
 3607              	.L164:
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
 3608              		.loc 1 1778 17
 3609 01b0 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 95


 3610 01b2 8023     		movs	r3, #128
 3611 01b4 5B03     		lsls	r3, r3, #13
 3612 01b6 1340     		ands	r3, r2
 3613              		.loc 1 1778 5
 3614 01b8 16D0     		beq	.L178
 3615              		.loc 1 1778 56 discriminator 1
 3616 01ba BA68     		ldr	r2, [r7, #8]
 3617 01bc 8023     		movs	r3, #128
 3618 01be DB03     		lsls	r3, r3, #15
 3619 01c0 1340     		ands	r3, r2
 3620              		.loc 1 1778 44 discriminator 1
 3621 01c2 11D0     		beq	.L178
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
 3622              		.loc 1 1780 5
 3623 01c4 7B68     		ldr	r3, [r7, #4]
 3624 01c6 1B68     		ldr	r3, [r3]
 3625 01c8 8022     		movs	r2, #128
 3626 01ca 5203     		lsls	r2, r2, #13
 3627 01cc 1A62     		str	r2, [r3, #32]
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3628              		.loc 1 1782 20
 3629 01ce 7B68     		ldr	r3, [r7, #4]
 3630 01d0 6922     		movs	r2, #105
 3631 01d2 2021     		movs	r1, #32
 3632 01d4 9954     		strb	r1, [r3, r2]
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3633              		.loc 1 1783 20
 3634 01d6 7B68     		ldr	r3, [r7, #4]
 3635 01d8 6A22     		movs	r2, #106
 3636 01da 2021     		movs	r1, #32
 3637 01dc 9954     		strb	r1, [r3, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3638              		.loc 1 1784 5
 3639 01de 7B68     		ldr	r3, [r7, #4]
 3640 01e0 1800     		movs	r0, r3
 3641 01e2 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 3642              		.loc 1 1785 5
 3643 01e6 1AE0     		b	.L161
 3644              	.L178:
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3645              		.loc 1 1790 17
 3646 01e8 7B69     		ldr	r3, [r7, #20]
 3647 01ea 8022     		movs	r2, #128
 3648 01ec 1340     		ands	r3, r2
 3649              		.loc 1 1790 5
 3650 01ee 08D0     		beq	.L179
 3651              		.loc 1 1790 56 discriminator 1
 3652 01f0 3B69     		ldr	r3, [r7, #16]
 3653 01f2 8022     		movs	r2, #128
 3654 01f4 1340     		ands	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 96


 3655              		.loc 1 1790 44 discriminator 1
 3656 01f6 04D0     		beq	.L179
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3657              		.loc 1 1792 5
 3658 01f8 7B68     		ldr	r3, [r7, #4]
 3659 01fa 1800     		movs	r0, r3
 3660 01fc FFF7FEFF 		bl	UART_Transmit_IT
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 3661              		.loc 1 1793 5
 3662 0200 0DE0     		b	.L161
 3663              	.L179:
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3664              		.loc 1 1797 17
 3665 0202 7B69     		ldr	r3, [r7, #20]
 3666 0204 4022     		movs	r2, #64
 3667 0206 1340     		ands	r3, r2
 3668              		.loc 1 1797 5
 3669 0208 09D0     		beq	.L161
 3670              		.loc 1 1797 55 discriminator 1
 3671 020a 3B69     		ldr	r3, [r7, #16]
 3672 020c 4022     		movs	r2, #64
 3673 020e 1340     		ands	r3, r2
 3674              		.loc 1 1797 43 discriminator 1
 3675 0210 05D0     		beq	.L161
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3676              		.loc 1 1799 5
 3677 0212 7B68     		ldr	r3, [r7, #4]
 3678 0214 1800     		movs	r0, r3
 3679 0216 FFF7FEFF 		bl	UART_EndTransmit_IT
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 3680              		.loc 1 1800 5
 3681 021a 00E0     		b	.L161
 3682              	.L180:
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3683              		.loc 1 1772 5
 3684 021c C046     		nop
 3685              	.L161:
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3686              		.loc 1 1803 1
 3687 021e BD46     		mov	sp, r7
 3688 0220 06B0     		add	sp, sp, #24
 3689              		@ sp needed
 3690 0222 80BD     		pop	{r7, pc}
 3691              	.L183:
 3692              		.align	2
 3693              	.L182:
 3694 0224 00000000 		.word	UART_DMAAbortOnError
 3695              		.cfi_endproc
 3696              	.LFE58:
 3698              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 97


 3699              		.align	1
 3700              		.weak	HAL_UART_TxCpltCallback
 3701              		.syntax unified
 3702              		.code	16
 3703              		.thumb_func
 3704              		.fpu softvfp
 3706              	HAL_UART_TxCpltCallback:
 3707              	.LFB59:
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3708              		.loc 1 1811 1
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 8
 3711              		@ frame_needed = 1, uses_anonymous_args = 0
 3712 0000 80B5     		push	{r7, lr}
 3713              	.LCFI66:
 3714              		.cfi_def_cfa_offset 8
 3715              		.cfi_offset 7, -8
 3716              		.cfi_offset 14, -4
 3717 0002 82B0     		sub	sp, sp, #8
 3718              	.LCFI67:
 3719              		.cfi_def_cfa_offset 16
 3720 0004 00AF     		add	r7, sp, #0
 3721              	.LCFI68:
 3722              		.cfi_def_cfa_register 7
 3723 0006 7860     		str	r0, [r7, #4]
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3724              		.loc 1 1818 1
 3725 0008 C046     		nop
 3726 000a BD46     		mov	sp, r7
 3727 000c 02B0     		add	sp, sp, #8
 3728              		@ sp needed
 3729 000e 80BD     		pop	{r7, pc}
 3730              		.cfi_endproc
 3731              	.LFE59:
 3733              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3734              		.align	1
 3735              		.weak	HAL_UART_TxHalfCpltCallback
 3736              		.syntax unified
 3737              		.code	16
 3738              		.thumb_func
 3739              		.fpu softvfp
 3741              	HAL_UART_TxHalfCpltCallback:
 3742              	.LFB60:
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 98


1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3743              		.loc 1 1826 1
 3744              		.cfi_startproc
 3745              		@ args = 0, pretend = 0, frame = 8
 3746              		@ frame_needed = 1, uses_anonymous_args = 0
 3747 0000 80B5     		push	{r7, lr}
 3748              	.LCFI69:
 3749              		.cfi_def_cfa_offset 8
 3750              		.cfi_offset 7, -8
 3751              		.cfi_offset 14, -4
 3752 0002 82B0     		sub	sp, sp, #8
 3753              	.LCFI70:
 3754              		.cfi_def_cfa_offset 16
 3755 0004 00AF     		add	r7, sp, #0
 3756              	.LCFI71:
 3757              		.cfi_def_cfa_register 7
 3758 0006 7860     		str	r0, [r7, #4]
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3759              		.loc 1 1833 1
 3760 0008 C046     		nop
 3761 000a BD46     		mov	sp, r7
 3762 000c 02B0     		add	sp, sp, #8
 3763              		@ sp needed
 3764 000e 80BD     		pop	{r7, pc}
 3765              		.cfi_endproc
 3766              	.LFE60:
 3768              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3769              		.align	1
 3770              		.weak	HAL_UART_RxCpltCallback
 3771              		.syntax unified
 3772              		.code	16
 3773              		.thumb_func
 3774              		.fpu softvfp
 3776              	HAL_UART_RxCpltCallback:
 3777              	.LFB61:
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3778              		.loc 1 1841 1
 3779              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 99


 3780              		@ args = 0, pretend = 0, frame = 8
 3781              		@ frame_needed = 1, uses_anonymous_args = 0
 3782 0000 80B5     		push	{r7, lr}
 3783              	.LCFI72:
 3784              		.cfi_def_cfa_offset 8
 3785              		.cfi_offset 7, -8
 3786              		.cfi_offset 14, -4
 3787 0002 82B0     		sub	sp, sp, #8
 3788              	.LCFI73:
 3789              		.cfi_def_cfa_offset 16
 3790 0004 00AF     		add	r7, sp, #0
 3791              	.LCFI74:
 3792              		.cfi_def_cfa_register 7
 3793 0006 7860     		str	r0, [r7, #4]
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3794              		.loc 1 1848 1
 3795 0008 C046     		nop
 3796 000a BD46     		mov	sp, r7
 3797 000c 02B0     		add	sp, sp, #8
 3798              		@ sp needed
 3799 000e 80BD     		pop	{r7, pc}
 3800              		.cfi_endproc
 3801              	.LFE61:
 3803              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3804              		.align	1
 3805              		.weak	HAL_UART_RxHalfCpltCallback
 3806              		.syntax unified
 3807              		.code	16
 3808              		.thumb_func
 3809              		.fpu softvfp
 3811              	HAL_UART_RxHalfCpltCallback:
 3812              	.LFB62:
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3813              		.loc 1 1856 1
 3814              		.cfi_startproc
 3815              		@ args = 0, pretend = 0, frame = 8
 3816              		@ frame_needed = 1, uses_anonymous_args = 0
 3817 0000 80B5     		push	{r7, lr}
 3818              	.LCFI75:
 3819              		.cfi_def_cfa_offset 8
 3820              		.cfi_offset 7, -8
 3821              		.cfi_offset 14, -4
 3822 0002 82B0     		sub	sp, sp, #8
 3823              	.LCFI76:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 100


 3824              		.cfi_def_cfa_offset 16
 3825 0004 00AF     		add	r7, sp, #0
 3826              	.LCFI77:
 3827              		.cfi_def_cfa_register 7
 3828 0006 7860     		str	r0, [r7, #4]
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3829              		.loc 1 1863 1
 3830 0008 C046     		nop
 3831 000a BD46     		mov	sp, r7
 3832 000c 02B0     		add	sp, sp, #8
 3833              		@ sp needed
 3834 000e 80BD     		pop	{r7, pc}
 3835              		.cfi_endproc
 3836              	.LFE62:
 3838              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3839              		.align	1
 3840              		.weak	HAL_UART_ErrorCallback
 3841              		.syntax unified
 3842              		.code	16
 3843              		.thumb_func
 3844              		.fpu softvfp
 3846              	HAL_UART_ErrorCallback:
 3847              	.LFB63:
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3848              		.loc 1 1871 1
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 8
 3851              		@ frame_needed = 1, uses_anonymous_args = 0
 3852 0000 80B5     		push	{r7, lr}
 3853              	.LCFI78:
 3854              		.cfi_def_cfa_offset 8
 3855              		.cfi_offset 7, -8
 3856              		.cfi_offset 14, -4
 3857 0002 82B0     		sub	sp, sp, #8
 3858              	.LCFI79:
 3859              		.cfi_def_cfa_offset 16
 3860 0004 00AF     		add	r7, sp, #0
 3861              	.LCFI80:
 3862              		.cfi_def_cfa_register 7
 3863 0006 7860     		str	r0, [r7, #4]
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 101


1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3864              		.loc 1 1878 1
 3865 0008 C046     		nop
 3866 000a BD46     		mov	sp, r7
 3867 000c 02B0     		add	sp, sp, #8
 3868              		@ sp needed
 3869 000e 80BD     		pop	{r7, pc}
 3870              		.cfi_endproc
 3871              	.LFE63:
 3873              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3874              		.align	1
 3875              		.weak	HAL_UART_AbortCpltCallback
 3876              		.syntax unified
 3877              		.code	16
 3878              		.thumb_func
 3879              		.fpu softvfp
 3881              	HAL_UART_AbortCpltCallback:
 3882              	.LFB64:
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3883              		.loc 1 1886 1
 3884              		.cfi_startproc
 3885              		@ args = 0, pretend = 0, frame = 8
 3886              		@ frame_needed = 1, uses_anonymous_args = 0
 3887 0000 80B5     		push	{r7, lr}
 3888              	.LCFI81:
 3889              		.cfi_def_cfa_offset 8
 3890              		.cfi_offset 7, -8
 3891              		.cfi_offset 14, -4
 3892 0002 82B0     		sub	sp, sp, #8
 3893              	.LCFI82:
 3894              		.cfi_def_cfa_offset 16
 3895 0004 00AF     		add	r7, sp, #0
 3896              	.LCFI83:
 3897              		.cfi_def_cfa_register 7
 3898 0006 7860     		str	r0, [r7, #4]
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3899              		.loc 1 1893 1
 3900 0008 C046     		nop
 3901 000a BD46     		mov	sp, r7
 3902 000c 02B0     		add	sp, sp, #8
 3903              		@ sp needed
 3904 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 102


 3905              		.cfi_endproc
 3906              	.LFE64:
 3908              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3909              		.align	1
 3910              		.weak	HAL_UART_AbortTransmitCpltCallback
 3911              		.syntax unified
 3912              		.code	16
 3913              		.thumb_func
 3914              		.fpu softvfp
 3916              	HAL_UART_AbortTransmitCpltCallback:
 3917              	.LFB65:
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3918              		.loc 1 1901 1
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 8
 3921              		@ frame_needed = 1, uses_anonymous_args = 0
 3922 0000 80B5     		push	{r7, lr}
 3923              	.LCFI84:
 3924              		.cfi_def_cfa_offset 8
 3925              		.cfi_offset 7, -8
 3926              		.cfi_offset 14, -4
 3927 0002 82B0     		sub	sp, sp, #8
 3928              	.LCFI85:
 3929              		.cfi_def_cfa_offset 16
 3930 0004 00AF     		add	r7, sp, #0
 3931              	.LCFI86:
 3932              		.cfi_def_cfa_register 7
 3933 0006 7860     		str	r0, [r7, #4]
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3934              		.loc 1 1908 1
 3935 0008 C046     		nop
 3936 000a BD46     		mov	sp, r7
 3937 000c 02B0     		add	sp, sp, #8
 3938              		@ sp needed
 3939 000e 80BD     		pop	{r7, pc}
 3940              		.cfi_endproc
 3941              	.LFE65:
 3943              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3944              		.align	1
 3945              		.weak	HAL_UART_AbortReceiveCpltCallback
 3946              		.syntax unified
 3947              		.code	16
 3948              		.thumb_func
 3949              		.fpu softvfp
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 103


 3951              	HAL_UART_AbortReceiveCpltCallback:
 3952              	.LFB66:
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3953              		.loc 1 1916 1
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 8
 3956              		@ frame_needed = 1, uses_anonymous_args = 0
 3957 0000 80B5     		push	{r7, lr}
 3958              	.LCFI87:
 3959              		.cfi_def_cfa_offset 8
 3960              		.cfi_offset 7, -8
 3961              		.cfi_offset 14, -4
 3962 0002 82B0     		sub	sp, sp, #8
 3963              	.LCFI88:
 3964              		.cfi_def_cfa_offset 16
 3965 0004 00AF     		add	r7, sp, #0
 3966              	.LCFI89:
 3967              		.cfi_def_cfa_register 7
 3968 0006 7860     		str	r0, [r7, #4]
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3969              		.loc 1 1923 1
 3970 0008 C046     		nop
 3971 000a BD46     		mov	sp, r7
 3972 000c 02B0     		add	sp, sp, #8
 3973              		@ sp needed
 3974 000e 80BD     		pop	{r7, pc}
 3975              		.cfi_endproc
 3976              	.LFE66:
 3978              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3979              		.align	1
 3980              		.global	HAL_MultiProcessor_EnableMuteMode
 3981              		.syntax unified
 3982              		.code	16
 3983              		.thumb_func
 3984              		.fpu softvfp
 3986              	HAL_MultiProcessor_EnableMuteMode:
 3987              	.LFB67:
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 104


1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3988              		.loc 1 1954 1
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 8
 3991              		@ frame_needed = 1, uses_anonymous_args = 0
 3992 0000 80B5     		push	{r7, lr}
 3993              	.LCFI90:
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 7, -8
 3996              		.cfi_offset 14, -4
 3997 0002 82B0     		sub	sp, sp, #8
 3998              	.LCFI91:
 3999              		.cfi_def_cfa_offset 16
 4000 0004 00AF     		add	r7, sp, #0
 4001              	.LCFI92:
 4002              		.cfi_def_cfa_register 7
 4003 0006 7860     		str	r0, [r7, #4]
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4004              		.loc 1 1956 3
 4005 0008 7B68     		ldr	r3, [r7, #4]
 4006 000a 6822     		movs	r2, #104
 4007 000c 9B5C     		ldrb	r3, [r3, r2]
 4008 000e 012B     		cmp	r3, #1
 4009 0010 01D1     		bne	.L193
 4010              		.loc 1 1956 3 is_stmt 0 discriminator 1
 4011 0012 0223     		movs	r3, #2
 4012 0014 19E0     		b	.L194
 4013              	.L193:
 4014              		.loc 1 1956 3 discriminator 2
 4015 0016 7B68     		ldr	r3, [r7, #4]
 4016 0018 6822     		movs	r2, #104
 4017 001a 0121     		movs	r1, #1
 4018 001c 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 105


1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4019              		.loc 1 1958 17 is_stmt 1 discriminator 2
 4020 001e 7B68     		ldr	r3, [r7, #4]
 4021 0020 6922     		movs	r2, #105
 4022 0022 2421     		movs	r1, #36
 4023 0024 9954     		strb	r1, [r3, r2]
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4024              		.loc 1 1961 3 discriminator 2
 4025 0026 7B68     		ldr	r3, [r7, #4]
 4026 0028 1B68     		ldr	r3, [r3]
 4027 002a 1A68     		ldr	r2, [r3]
 4028 002c 7B68     		ldr	r3, [r7, #4]
 4029 002e 1B68     		ldr	r3, [r3]
 4030 0030 8021     		movs	r1, #128
 4031 0032 8901     		lsls	r1, r1, #6
 4032 0034 0A43     		orrs	r2, r1
 4033 0036 1A60     		str	r2, [r3]
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4034              		.loc 1 1963 17 discriminator 2
 4035 0038 7B68     		ldr	r3, [r7, #4]
 4036 003a 6922     		movs	r2, #105
 4037 003c 2021     		movs	r1, #32
 4038 003e 9954     		strb	r1, [r3, r2]
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4039              		.loc 1 1965 11 discriminator 2
 4040 0040 7B68     		ldr	r3, [r7, #4]
 4041 0042 1800     		movs	r0, r3
 4042 0044 FFF7FEFF 		bl	UART_CheckIdleState
 4043 0048 0300     		movs	r3, r0
 4044              	.L194:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4045              		.loc 1 1966 1
 4046 004a 1800     		movs	r0, r3
 4047 004c BD46     		mov	sp, r7
 4048 004e 02B0     		add	sp, sp, #8
 4049              		@ sp needed
 4050 0050 80BD     		pop	{r7, pc}
 4051              		.cfi_endproc
 4052              	.LFE67:
 4054              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4055              		.align	1
 4056              		.global	HAL_MultiProcessor_DisableMuteMode
 4057              		.syntax unified
 4058              		.code	16
 4059              		.thumb_func
 4060              		.fpu softvfp
 4062              	HAL_MultiProcessor_DisableMuteMode:
 4063              	.LFB68:
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 106


1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4064              		.loc 1 1975 1
 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 8
 4067              		@ frame_needed = 1, uses_anonymous_args = 0
 4068 0000 80B5     		push	{r7, lr}
 4069              	.LCFI93:
 4070              		.cfi_def_cfa_offset 8
 4071              		.cfi_offset 7, -8
 4072              		.cfi_offset 14, -4
 4073 0002 82B0     		sub	sp, sp, #8
 4074              	.LCFI94:
 4075              		.cfi_def_cfa_offset 16
 4076 0004 00AF     		add	r7, sp, #0
 4077              	.LCFI95:
 4078              		.cfi_def_cfa_register 7
 4079 0006 7860     		str	r0, [r7, #4]
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4080              		.loc 1 1977 3
 4081 0008 7B68     		ldr	r3, [r7, #4]
 4082 000a 6822     		movs	r2, #104
 4083 000c 9B5C     		ldrb	r3, [r3, r2]
 4084 000e 012B     		cmp	r3, #1
 4085 0010 01D1     		bne	.L196
 4086              		.loc 1 1977 3 is_stmt 0 discriminator 1
 4087 0012 0223     		movs	r3, #2
 4088 0014 18E0     		b	.L197
 4089              	.L196:
 4090              		.loc 1 1977 3 discriminator 2
 4091 0016 7B68     		ldr	r3, [r7, #4]
 4092 0018 6822     		movs	r2, #104
 4093 001a 0121     		movs	r1, #1
 4094 001c 9954     		strb	r1, [r3, r2]
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4095              		.loc 1 1979 17 is_stmt 1 discriminator 2
 4096 001e 7B68     		ldr	r3, [r7, #4]
 4097 0020 6922     		movs	r2, #105
 4098 0022 2421     		movs	r1, #36
 4099 0024 9954     		strb	r1, [r3, r2]
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4100              		.loc 1 1982 3 discriminator 2
 4101 0026 7B68     		ldr	r3, [r7, #4]
 4102 0028 1B68     		ldr	r3, [r3]
 4103 002a 1A68     		ldr	r2, [r3]
 4104 002c 7B68     		ldr	r3, [r7, #4]
 4105 002e 1B68     		ldr	r3, [r3]
 4106 0030 0749     		ldr	r1, .L198
 4107 0032 0A40     		ands	r2, r1
 4108 0034 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 107


1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4109              		.loc 1 1984 17 discriminator 2
 4110 0036 7B68     		ldr	r3, [r7, #4]
 4111 0038 6922     		movs	r2, #105
 4112 003a 2021     		movs	r1, #32
 4113 003c 9954     		strb	r1, [r3, r2]
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4114              		.loc 1 1986 11 discriminator 2
 4115 003e 7B68     		ldr	r3, [r7, #4]
 4116 0040 1800     		movs	r0, r3
 4117 0042 FFF7FEFF 		bl	UART_CheckIdleState
 4118 0046 0300     		movs	r3, r0
 4119              	.L197:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4120              		.loc 1 1987 1
 4121 0048 1800     		movs	r0, r3
 4122 004a BD46     		mov	sp, r7
 4123 004c 02B0     		add	sp, sp, #8
 4124              		@ sp needed
 4125 004e 80BD     		pop	{r7, pc}
 4126              	.L199:
 4127              		.align	2
 4128              	.L198:
 4129 0050 FFDFFFFF 		.word	-8193
 4130              		.cfi_endproc
 4131              	.LFE68:
 4133              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4134              		.align	1
 4135              		.global	HAL_MultiProcessor_EnterMuteMode
 4136              		.syntax unified
 4137              		.code	16
 4138              		.thumb_func
 4139              		.fpu softvfp
 4141              	HAL_MultiProcessor_EnterMuteMode:
 4142              	.LFB69:
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4143              		.loc 1 1996 1
 4144              		.cfi_startproc
 4145              		@ args = 0, pretend = 0, frame = 8
 4146              		@ frame_needed = 1, uses_anonymous_args = 0
 4147 0000 80B5     		push	{r7, lr}
 4148              	.LCFI96:
 4149              		.cfi_def_cfa_offset 8
 4150              		.cfi_offset 7, -8
 4151              		.cfi_offset 14, -4
 4152 0002 82B0     		sub	sp, sp, #8
 4153              	.LCFI97:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 108


 4154              		.cfi_def_cfa_offset 16
 4155 0004 00AF     		add	r7, sp, #0
 4156              	.LCFI98:
 4157              		.cfi_def_cfa_register 7
 4158 0006 7860     		str	r0, [r7, #4]
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4159              		.loc 1 1997 3
 4160 0008 7B68     		ldr	r3, [r7, #4]
 4161 000a 1B68     		ldr	r3, [r3]
 4162 000c 9A69     		ldr	r2, [r3, #24]
 4163 000e 7B68     		ldr	r3, [r7, #4]
 4164 0010 1B68     		ldr	r3, [r3]
 4165 0012 0421     		movs	r1, #4
 4166 0014 0A43     		orrs	r2, r1
 4167 0016 9A61     		str	r2, [r3, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4168              		.loc 1 1998 1
 4169 0018 C046     		nop
 4170 001a BD46     		mov	sp, r7
 4171 001c 02B0     		add	sp, sp, #8
 4172              		@ sp needed
 4173 001e 80BD     		pop	{r7, pc}
 4174              		.cfi_endproc
 4175              	.LFE69:
 4177              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4178              		.align	1
 4179              		.global	HAL_HalfDuplex_EnableTransmitter
 4180              		.syntax unified
 4181              		.code	16
 4182              		.thumb_func
 4183              		.fpu softvfp
 4185              	HAL_HalfDuplex_EnableTransmitter:
 4186              	.LFB70:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4187              		.loc 1 2006 1
 4188              		.cfi_startproc
 4189              		@ args = 0, pretend = 0, frame = 8
 4190              		@ frame_needed = 1, uses_anonymous_args = 0
 4191 0000 80B5     		push	{r7, lr}
 4192              	.LCFI99:
 4193              		.cfi_def_cfa_offset 8
 4194              		.cfi_offset 7, -8
 4195              		.cfi_offset 14, -4
 4196 0002 82B0     		sub	sp, sp, #8
 4197              	.LCFI100:
 4198              		.cfi_def_cfa_offset 16
 4199 0004 00AF     		add	r7, sp, #0
 4200              	.LCFI101:
 4201              		.cfi_def_cfa_register 7
 4202 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 109


2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4203              		.loc 1 2008 3
 4204 0008 7B68     		ldr	r3, [r7, #4]
 4205 000a 6822     		movs	r2, #104
 4206 000c 9B5C     		ldrb	r3, [r3, r2]
 4207 000e 012B     		cmp	r3, #1
 4208 0010 01D1     		bne	.L202
 4209              		.loc 1 2008 3 is_stmt 0 discriminator 1
 4210 0012 0223     		movs	r3, #2
 4211 0014 20E0     		b	.L203
 4212              	.L202:
 4213              		.loc 1 2008 3 discriminator 2
 4214 0016 7B68     		ldr	r3, [r7, #4]
 4215 0018 6822     		movs	r2, #104
 4216 001a 0121     		movs	r1, #1
 4217 001c 9954     		strb	r1, [r3, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4218              		.loc 1 2009 17 is_stmt 1 discriminator 2
 4219 001e 7B68     		ldr	r3, [r7, #4]
 4220 0020 6922     		movs	r2, #105
 4221 0022 2421     		movs	r1, #36
 4222 0024 9954     		strb	r1, [r3, r2]
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4223              		.loc 1 2012 3 discriminator 2
 4224 0026 7B68     		ldr	r3, [r7, #4]
 4225 0028 1B68     		ldr	r3, [r3]
 4226 002a 1A68     		ldr	r2, [r3]
 4227 002c 7B68     		ldr	r3, [r7, #4]
 4228 002e 1B68     		ldr	r3, [r3]
 4229 0030 0C21     		movs	r1, #12
 4230 0032 8A43     		bics	r2, r1
 4231 0034 1A60     		str	r2, [r3]
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4232              		.loc 1 2014 3 discriminator 2
 4233 0036 7B68     		ldr	r3, [r7, #4]
 4234 0038 1B68     		ldr	r3, [r3]
 4235 003a 1A68     		ldr	r2, [r3]
 4236 003c 7B68     		ldr	r3, [r7, #4]
 4237 003e 1B68     		ldr	r3, [r3]
 4238 0040 0821     		movs	r1, #8
 4239 0042 0A43     		orrs	r2, r1
 4240 0044 1A60     		str	r2, [r3]
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4241              		.loc 1 2016 17 discriminator 2
 4242 0046 7B68     		ldr	r3, [r7, #4]
 4243 0048 6922     		movs	r2, #105
 4244 004a 2021     		movs	r1, #32
 4245 004c 9954     		strb	r1, [r3, r2]
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4246              		.loc 1 2019 3 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 110


 4247 004e 7B68     		ldr	r3, [r7, #4]
 4248 0050 6822     		movs	r2, #104
 4249 0052 0021     		movs	r1, #0
 4250 0054 9954     		strb	r1, [r3, r2]
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 4251              		.loc 1 2021 10 discriminator 2
 4252 0056 0023     		movs	r3, #0
 4253              	.L203:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4254              		.loc 1 2022 1
 4255 0058 1800     		movs	r0, r3
 4256 005a BD46     		mov	sp, r7
 4257 005c 02B0     		add	sp, sp, #8
 4258              		@ sp needed
 4259 005e 80BD     		pop	{r7, pc}
 4260              		.cfi_endproc
 4261              	.LFE70:
 4263              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4264              		.align	1
 4265              		.global	HAL_HalfDuplex_EnableReceiver
 4266              		.syntax unified
 4267              		.code	16
 4268              		.thumb_func
 4269              		.fpu softvfp
 4271              	HAL_HalfDuplex_EnableReceiver:
 4272              	.LFB71:
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4273              		.loc 1 2030 1
 4274              		.cfi_startproc
 4275              		@ args = 0, pretend = 0, frame = 8
 4276              		@ frame_needed = 1, uses_anonymous_args = 0
 4277 0000 80B5     		push	{r7, lr}
 4278              	.LCFI102:
 4279              		.cfi_def_cfa_offset 8
 4280              		.cfi_offset 7, -8
 4281              		.cfi_offset 14, -4
 4282 0002 82B0     		sub	sp, sp, #8
 4283              	.LCFI103:
 4284              		.cfi_def_cfa_offset 16
 4285 0004 00AF     		add	r7, sp, #0
 4286              	.LCFI104:
 4287              		.cfi_def_cfa_register 7
 4288 0006 7860     		str	r0, [r7, #4]
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4289              		.loc 1 2032 3
 4290 0008 7B68     		ldr	r3, [r7, #4]
 4291 000a 6822     		movs	r2, #104
 4292 000c 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 111


 4293 000e 012B     		cmp	r3, #1
 4294 0010 01D1     		bne	.L205
 4295              		.loc 1 2032 3 is_stmt 0 discriminator 1
 4296 0012 0223     		movs	r3, #2
 4297 0014 20E0     		b	.L206
 4298              	.L205:
 4299              		.loc 1 2032 3 discriminator 2
 4300 0016 7B68     		ldr	r3, [r7, #4]
 4301 0018 6822     		movs	r2, #104
 4302 001a 0121     		movs	r1, #1
 4303 001c 9954     		strb	r1, [r3, r2]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4304              		.loc 1 2033 17 is_stmt 1 discriminator 2
 4305 001e 7B68     		ldr	r3, [r7, #4]
 4306 0020 6922     		movs	r2, #105
 4307 0022 2421     		movs	r1, #36
 4308 0024 9954     		strb	r1, [r3, r2]
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4309              		.loc 1 2036 3 discriminator 2
 4310 0026 7B68     		ldr	r3, [r7, #4]
 4311 0028 1B68     		ldr	r3, [r3]
 4312 002a 1A68     		ldr	r2, [r3]
 4313 002c 7B68     		ldr	r3, [r7, #4]
 4314 002e 1B68     		ldr	r3, [r3]
 4315 0030 0C21     		movs	r1, #12
 4316 0032 8A43     		bics	r2, r1
 4317 0034 1A60     		str	r2, [r3]
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4318              		.loc 1 2038 3 discriminator 2
 4319 0036 7B68     		ldr	r3, [r7, #4]
 4320 0038 1B68     		ldr	r3, [r3]
 4321 003a 1A68     		ldr	r2, [r3]
 4322 003c 7B68     		ldr	r3, [r7, #4]
 4323 003e 1B68     		ldr	r3, [r3]
 4324 0040 0421     		movs	r1, #4
 4325 0042 0A43     		orrs	r2, r1
 4326 0044 1A60     		str	r2, [r3]
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4327              		.loc 1 2040 17 discriminator 2
 4328 0046 7B68     		ldr	r3, [r7, #4]
 4329 0048 6922     		movs	r2, #105
 4330 004a 2021     		movs	r1, #32
 4331 004c 9954     		strb	r1, [r3, r2]
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4332              		.loc 1 2042 3 discriminator 2
 4333 004e 7B68     		ldr	r3, [r7, #4]
 4334 0050 6822     		movs	r2, #104
 4335 0052 0021     		movs	r1, #0
 4336 0054 9954     		strb	r1, [r3, r2]
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 4337              		.loc 1 2044 10 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 112


 4338 0056 0023     		movs	r3, #0
 4339              	.L206:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4340              		.loc 1 2045 1
 4341 0058 1800     		movs	r0, r3
 4342 005a BD46     		mov	sp, r7
 4343 005c 02B0     		add	sp, sp, #8
 4344              		@ sp needed
 4345 005e 80BD     		pop	{r7, pc}
 4346              		.cfi_endproc
 4347              	.LFE71:
 4349              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4350              		.align	1
 4351              		.global	HAL_UART_GetState
 4352              		.syntax unified
 4353              		.code	16
 4354              		.thumb_func
 4355              		.fpu softvfp
 4357              	HAL_UART_GetState:
 4358              	.LFB72:
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4359              		.loc 1 2074 1
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 16
 4362              		@ frame_needed = 1, uses_anonymous_args = 0
 4363 0000 80B5     		push	{r7, lr}
 4364              	.LCFI105:
 4365              		.cfi_def_cfa_offset 8
 4366              		.cfi_offset 7, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 113


 4367              		.cfi_offset 14, -4
 4368 0002 84B0     		sub	sp, sp, #16
 4369              	.LCFI106:
 4370              		.cfi_def_cfa_offset 24
 4371 0004 00AF     		add	r7, sp, #0
 4372              	.LCFI107:
 4373              		.cfi_def_cfa_register 7
 4374 0006 7860     		str	r0, [r7, #4]
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4375              		.loc 1 2075 12
 4376 0008 0023     		movs	r3, #0
 4377 000a FB60     		str	r3, [r7, #12]
 4378              		.loc 1 2075 26
 4379 000c 0023     		movs	r3, #0
 4380 000e BB60     		str	r3, [r7, #8]
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
 4381              		.loc 1 2076 16
 4382 0010 7B68     		ldr	r3, [r7, #4]
 4383 0012 6922     		movs	r2, #105
 4384 0014 9B5C     		ldrb	r3, [r3, r2]
 4385 0016 DBB2     		uxtb	r3, r3
 4386              		.loc 1 2076 9
 4387 0018 FB60     		str	r3, [r7, #12]
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 4388              		.loc 1 2077 16
 4389 001a 7B68     		ldr	r3, [r7, #4]
 4390 001c 6A22     		movs	r2, #106
 4391 001e 9B5C     		ldrb	r3, [r3, r2]
 4392 0020 DBB2     		uxtb	r3, r3
 4393              		.loc 1 2077 9
 4394 0022 BB60     		str	r3, [r7, #8]
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4395              		.loc 1 2079 10
 4396 0024 FB68     		ldr	r3, [r7, #12]
 4397 0026 DAB2     		uxtb	r2, r3
 4398 0028 BB68     		ldr	r3, [r7, #8]
 4399 002a DBB2     		uxtb	r3, r3
 4400 002c 1343     		orrs	r3, r2
 4401 002e DBB2     		uxtb	r3, r3
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4402              		.loc 1 2080 1
 4403 0030 1800     		movs	r0, r3
 4404 0032 BD46     		mov	sp, r7
 4405 0034 04B0     		add	sp, sp, #16
 4406              		@ sp needed
 4407 0036 80BD     		pop	{r7, pc}
 4408              		.cfi_endproc
 4409              	.LFE72:
 4411              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4412              		.align	1
 4413              		.global	HAL_UART_GetError
 4414              		.syntax unified
 4415              		.code	16
 4416              		.thumb_func
 4417              		.fpu softvfp
 4419              	HAL_UART_GetError:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 114


 4420              	.LFB73:
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4421              		.loc 1 2089 1
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 8
 4424              		@ frame_needed = 1, uses_anonymous_args = 0
 4425 0000 80B5     		push	{r7, lr}
 4426              	.LCFI108:
 4427              		.cfi_def_cfa_offset 8
 4428              		.cfi_offset 7, -8
 4429              		.cfi_offset 14, -4
 4430 0002 82B0     		sub	sp, sp, #8
 4431              	.LCFI109:
 4432              		.cfi_def_cfa_offset 16
 4433 0004 00AF     		add	r7, sp, #0
 4434              	.LCFI110:
 4435              		.cfi_def_cfa_register 7
 4436 0006 7860     		str	r0, [r7, #4]
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 4437              		.loc 1 2090 15
 4438 0008 7B68     		ldr	r3, [r7, #4]
 4439 000a DB6E     		ldr	r3, [r3, #108]
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4440              		.loc 1 2091 1
 4441 000c 1800     		movs	r0, r3
 4442 000e BD46     		mov	sp, r7
 4443 0010 02B0     		add	sp, sp, #8
 4444              		@ sp needed
 4445 0012 80BD     		pop	{r7, pc}
 4446              		.cfi_endproc
 4447              	.LFE73:
 4449              		.global	__aeabi_uidiv
 4450              		.section	.text.UART_SetConfig,"ax",%progbits
 4451              		.align	1
 4452              		.global	UART_SetConfig
 4453              		.syntax unified
 4454              		.code	16
 4455              		.thumb_func
 4456              		.fpu softvfp
 4458              	UART_SetConfig:
 4459              	.LFB74:
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 115


2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4460              		.loc 1 2110 1
 4461              		.cfi_startproc
 4462              		@ args = 0, pretend = 0, frame = 24
 4463              		@ frame_needed = 1, uses_anonymous_args = 0
 4464 0000 90B5     		push	{r4, r7, lr}
 4465              	.LCFI111:
 4466              		.cfi_def_cfa_offset 12
 4467              		.cfi_offset 4, -12
 4468              		.cfi_offset 7, -8
 4469              		.cfi_offset 14, -4
 4470 0002 87B0     		sub	sp, sp, #28
 4471              	.LCFI112:
 4472              		.cfi_def_cfa_offset 40
 4473 0004 00AF     		add	r7, sp, #0
 4474              	.LCFI113:
 4475              		.cfi_def_cfa_register 7
 4476 0006 7860     		str	r0, [r7, #4]
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 4477              		.loc 1 2111 12
 4478 0008 0023     		movs	r3, #0
 4479 000a FB60     		str	r3, [r7, #12]
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4480              		.loc 1 2112 27
 4481 000c 1723     		movs	r3, #23
 4482 000e FB18     		adds	r3, r7, r3
 4483 0010 1022     		movs	r2, #16
 4484 0012 1A70     		strb	r2, [r3]
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 4485              		.loc 1 2113 12
 4486 0014 0A23     		movs	r3, #10
 4487 0016 FB18     		adds	r3, r7, r3
 4488 0018 0022     		movs	r2, #0
 4489 001a 1A80     		strh	r2, [r3]
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
 4490              		.loc 1 2114 12
 4491 001c 1423     		movs	r3, #20
 4492 001e FB18     		adds	r3, r7, r3
 4493 0020 0022     		movs	r2, #0
 4494 0022 1A80     		strh	r2, [r3]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4495              		.loc 1 2115 21
 4496 0024 1323     		movs	r3, #19
 4497 0026 FB18     		adds	r3, r7, r3
 4498 0028 0022     		movs	r2, #0
 4499 002a 1A70     		strb	r2, [r3]
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 116


2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4500              		.loc 1 2135 33
 4501 002c 7B68     		ldr	r3, [r7, #4]
 4502 002e 9A68     		ldr	r2, [r3, #8]
 4503              		.loc 1 2135 58
 4504 0030 7B68     		ldr	r3, [r7, #4]
 4505 0032 1B69     		ldr	r3, [r3, #16]
 4506              		.loc 1 2135 45
 4507 0034 1A43     		orrs	r2, r3
 4508              		.loc 1 2135 79
 4509 0036 7B68     		ldr	r3, [r7, #4]
 4510 0038 5B69     		ldr	r3, [r3, #20]
 4511              		.loc 1 2135 66
 4512 003a 1A43     		orrs	r2, r3
 4513              		.loc 1 2135 98
 4514 003c 7B68     		ldr	r3, [r7, #4]
 4515 003e DB69     		ldr	r3, [r3, #28]
 4516              		.loc 1 2135 10
 4517 0040 1343     		orrs	r3, r2
 4518 0042 FB60     		str	r3, [r7, #12]
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4519              		.loc 1 2136 3
 4520 0044 7B68     		ldr	r3, [r7, #4]
 4521 0046 1B68     		ldr	r3, [r3]
 4522 0048 1B68     		ldr	r3, [r3]
 4523 004a BD4A     		ldr	r2, .L253
 4524 004c 1340     		ands	r3, r2
 4525 004e 1900     		movs	r1, r3
 4526 0050 7B68     		ldr	r3, [r7, #4]
 4527 0052 1B68     		ldr	r3, [r3]
 4528 0054 FA68     		ldr	r2, [r7, #12]
 4529 0056 0A43     		orrs	r2, r1
 4530 0058 1A60     		str	r2, [r3]
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4531              		.loc 1 2141 3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 117


 4532 005a 7B68     		ldr	r3, [r7, #4]
 4533 005c 1B68     		ldr	r3, [r3]
 4534 005e 5B68     		ldr	r3, [r3, #4]
 4535 0060 B84A     		ldr	r2, .L253+4
 4536 0062 1340     		ands	r3, r2
 4537 0064 1900     		movs	r1, r3
 4538 0066 7B68     		ldr	r3, [r7, #4]
 4539 0068 DA68     		ldr	r2, [r3, #12]
 4540 006a 7B68     		ldr	r3, [r7, #4]
 4541 006c 1B68     		ldr	r3, [r3]
 4542 006e 0A43     		orrs	r2, r1
 4543 0070 5A60     		str	r2, [r3, #4]
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 4544              		.loc 1 2149 33
 4545 0072 7B68     		ldr	r3, [r7, #4]
 4546 0074 9A69     		ldr	r2, [r3, #24]
 4547              		.loc 1 2149 57
 4548 0076 7B68     		ldr	r3, [r7, #4]
 4549 0078 1B6A     		ldr	r3, [r3, #32]
 4550              		.loc 1 2149 10
 4551 007a 1343     		orrs	r3, r2
 4552 007c FB60     		str	r3, [r7, #12]
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4553              		.loc 1 2150 3
 4554 007e 7B68     		ldr	r3, [r7, #4]
 4555 0080 1B68     		ldr	r3, [r3]
 4556 0082 9B68     		ldr	r3, [r3, #8]
 4557 0084 B04A     		ldr	r2, .L253+8
 4558 0086 1340     		ands	r3, r2
 4559 0088 1900     		movs	r1, r3
 4560 008a 7B68     		ldr	r3, [r7, #4]
 4561 008c 1B68     		ldr	r3, [r3]
 4562 008e FA68     		ldr	r2, [r7, #12]
 4563 0090 0A43     		orrs	r2, r1
 4564 0092 9A60     		str	r2, [r3, #8]
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4565              		.loc 1 2153 3
 4566 0094 7B68     		ldr	r3, [r7, #4]
 4567 0096 1B68     		ldr	r3, [r3]
 4568 0098 AC4A     		ldr	r2, .L253+12
 4569 009a 9342     		cmp	r3, r2
 4570 009c 27D1     		bne	.L212
 4571              		.loc 1 2153 3 is_stmt 0 discriminator 1
 4572 009e AC4B     		ldr	r3, .L253+16
 4573 00a0 1B6B     		ldr	r3, [r3, #48]
 4574 00a2 0322     		movs	r2, #3
 4575 00a4 1340     		ands	r3, r2
 4576 00a6 032B     		cmp	r3, #3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 118


 4577 00a8 0DD0     		beq	.L213
 4578              		.loc 1 2153 3
 4579 00aa 1BD8     		bhi	.L214
 4580 00ac 022B     		cmp	r3, #2
 4581 00ae 14D0     		beq	.L215
 4582 00b0 18D8     		bhi	.L214
 4583 00b2 002B     		cmp	r3, #0
 4584 00b4 02D0     		beq	.L216
 4585 00b6 012B     		cmp	r3, #1
 4586 00b8 0AD0     		beq	.L217
 4587 00ba 13E0     		b	.L214
 4588              	.L216:
 4589              		.loc 1 2153 3 discriminator 4
 4590 00bc 1723     		movs	r3, #23
 4591 00be FB18     		adds	r3, r7, r3
 4592 00c0 0022     		movs	r2, #0
 4593 00c2 1A70     		strb	r2, [r3]
 4594 00c4 BDE0     		b	.L219
 4595              	.L213:
 4596              		.loc 1 2153 3 discriminator 7
 4597 00c6 1723     		movs	r3, #23
 4598 00c8 FB18     		adds	r3, r7, r3
 4599 00ca 0222     		movs	r2, #2
 4600 00cc 1A70     		strb	r2, [r3]
 4601 00ce B8E0     		b	.L219
 4602              	.L217:
 4603              		.loc 1 2153 3 discriminator 5
 4604 00d0 1723     		movs	r3, #23
 4605 00d2 FB18     		adds	r3, r7, r3
 4606 00d4 0422     		movs	r2, #4
 4607 00d6 1A70     		strb	r2, [r3]
 4608 00d8 B3E0     		b	.L219
 4609              	.L215:
 4610              		.loc 1 2153 3 discriminator 6
 4611 00da 1723     		movs	r3, #23
 4612 00dc FB18     		adds	r3, r7, r3
 4613 00de 0822     		movs	r2, #8
 4614 00e0 1A70     		strb	r2, [r3]
 4615 00e2 AEE0     		b	.L219
 4616              	.L214:
 4617              		.loc 1 2153 3 discriminator 3
 4618 00e4 1723     		movs	r3, #23
 4619 00e6 FB18     		adds	r3, r7, r3
 4620 00e8 1022     		movs	r2, #16
 4621 00ea 1A70     		strb	r2, [r3]
 4622 00ec A9E0     		b	.L219
 4623              	.L212:
 4624              		.loc 1 2153 3 discriminator 2
 4625 00ee 7B68     		ldr	r3, [r7, #4]
 4626 00f0 1B68     		ldr	r3, [r3]
 4627 00f2 984A     		ldr	r2, .L253+20
 4628 00f4 9342     		cmp	r3, r2
 4629 00f6 34D1     		bne	.L220
 4630              		.loc 1 2153 3 discriminator 13
 4631 00f8 954B     		ldr	r3, .L253+16
 4632 00fa 1A6B     		ldr	r2, [r3, #48]
 4633 00fc C023     		movs	r3, #192
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 119


 4634 00fe 9B02     		lsls	r3, r3, #10
 4635 0100 1340     		ands	r3, r2
 4636 0102 C022     		movs	r2, #192
 4637 0104 9202     		lsls	r2, r2, #10
 4638 0106 9342     		cmp	r3, r2
 4639 0108 17D0     		beq	.L221
 4640              		.loc 1 2153 3
 4641 010a C022     		movs	r2, #192
 4642 010c 9202     		lsls	r2, r2, #10
 4643 010e 9342     		cmp	r3, r2
 4644 0110 22D8     		bhi	.L222
 4645 0112 8022     		movs	r2, #128
 4646 0114 9202     		lsls	r2, r2, #10
 4647 0116 9342     		cmp	r3, r2
 4648 0118 19D0     		beq	.L223
 4649 011a 8022     		movs	r2, #128
 4650 011c 9202     		lsls	r2, r2, #10
 4651 011e 9342     		cmp	r3, r2
 4652 0120 1AD8     		bhi	.L222
 4653 0122 002B     		cmp	r3, #0
 4654 0124 04D0     		beq	.L224
 4655 0126 8022     		movs	r2, #128
 4656 0128 5202     		lsls	r2, r2, #9
 4657 012a 9342     		cmp	r3, r2
 4658 012c 0AD0     		beq	.L225
 4659 012e 13E0     		b	.L222
 4660              	.L224:
 4661              		.loc 1 2153 3 discriminator 16
 4662 0130 1723     		movs	r3, #23
 4663 0132 FB18     		adds	r3, r7, r3
 4664 0134 0022     		movs	r2, #0
 4665 0136 1A70     		strb	r2, [r3]
 4666 0138 83E0     		b	.L219
 4667              	.L221:
 4668              		.loc 1 2153 3 discriminator 19
 4669 013a 1723     		movs	r3, #23
 4670 013c FB18     		adds	r3, r7, r3
 4671 013e 0222     		movs	r2, #2
 4672 0140 1A70     		strb	r2, [r3]
 4673 0142 7EE0     		b	.L219
 4674              	.L225:
 4675              		.loc 1 2153 3 discriminator 17
 4676 0144 1723     		movs	r3, #23
 4677 0146 FB18     		adds	r3, r7, r3
 4678 0148 0422     		movs	r2, #4
 4679 014a 1A70     		strb	r2, [r3]
 4680 014c 79E0     		b	.L219
 4681              	.L223:
 4682              		.loc 1 2153 3 discriminator 18
 4683 014e 1723     		movs	r3, #23
 4684 0150 FB18     		adds	r3, r7, r3
 4685 0152 0822     		movs	r2, #8
 4686 0154 1A70     		strb	r2, [r3]
 4687 0156 74E0     		b	.L219
 4688              	.L222:
 4689              		.loc 1 2153 3 discriminator 15
 4690 0158 1723     		movs	r3, #23
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 120


 4691 015a FB18     		adds	r3, r7, r3
 4692 015c 1022     		movs	r2, #16
 4693 015e 1A70     		strb	r2, [r3]
 4694 0160 6FE0     		b	.L219
 4695              	.L220:
 4696              		.loc 1 2153 3 discriminator 14
 4697 0162 7B68     		ldr	r3, [r7, #4]
 4698 0164 1B68     		ldr	r3, [r3]
 4699 0166 7C4A     		ldr	r2, .L253+24
 4700 0168 9342     		cmp	r3, r2
 4701 016a 34D1     		bne	.L227
 4702              		.loc 1 2153 3 discriminator 25
 4703 016c 784B     		ldr	r3, .L253+16
 4704 016e 1A6B     		ldr	r2, [r3, #48]
 4705 0170 C023     		movs	r3, #192
 4706 0172 1B03     		lsls	r3, r3, #12
 4707 0174 1340     		ands	r3, r2
 4708 0176 C022     		movs	r2, #192
 4709 0178 1203     		lsls	r2, r2, #12
 4710 017a 9342     		cmp	r3, r2
 4711 017c 17D0     		beq	.L228
 4712              		.loc 1 2153 3
 4713 017e C022     		movs	r2, #192
 4714 0180 1203     		lsls	r2, r2, #12
 4715 0182 9342     		cmp	r3, r2
 4716 0184 22D8     		bhi	.L229
 4717 0186 8022     		movs	r2, #128
 4718 0188 1203     		lsls	r2, r2, #12
 4719 018a 9342     		cmp	r3, r2
 4720 018c 19D0     		beq	.L230
 4721 018e 8022     		movs	r2, #128
 4722 0190 1203     		lsls	r2, r2, #12
 4723 0192 9342     		cmp	r3, r2
 4724 0194 1AD8     		bhi	.L229
 4725 0196 002B     		cmp	r3, #0
 4726 0198 04D0     		beq	.L231
 4727 019a 8022     		movs	r2, #128
 4728 019c D202     		lsls	r2, r2, #11
 4729 019e 9342     		cmp	r3, r2
 4730 01a0 0AD0     		beq	.L232
 4731 01a2 13E0     		b	.L229
 4732              	.L231:
 4733              		.loc 1 2153 3 discriminator 28
 4734 01a4 1723     		movs	r3, #23
 4735 01a6 FB18     		adds	r3, r7, r3
 4736 01a8 0022     		movs	r2, #0
 4737 01aa 1A70     		strb	r2, [r3]
 4738 01ac 49E0     		b	.L219
 4739              	.L228:
 4740              		.loc 1 2153 3 discriminator 31
 4741 01ae 1723     		movs	r3, #23
 4742 01b0 FB18     		adds	r3, r7, r3
 4743 01b2 0222     		movs	r2, #2
 4744 01b4 1A70     		strb	r2, [r3]
 4745 01b6 44E0     		b	.L219
 4746              	.L232:
 4747              		.loc 1 2153 3 discriminator 29
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 121


 4748 01b8 1723     		movs	r3, #23
 4749 01ba FB18     		adds	r3, r7, r3
 4750 01bc 0422     		movs	r2, #4
 4751 01be 1A70     		strb	r2, [r3]
 4752 01c0 3FE0     		b	.L219
 4753              	.L230:
 4754              		.loc 1 2153 3 discriminator 30
 4755 01c2 1723     		movs	r3, #23
 4756 01c4 FB18     		adds	r3, r7, r3
 4757 01c6 0822     		movs	r2, #8
 4758 01c8 1A70     		strb	r2, [r3]
 4759 01ca 3AE0     		b	.L219
 4760              	.L229:
 4761              		.loc 1 2153 3 discriminator 27
 4762 01cc 1723     		movs	r3, #23
 4763 01ce FB18     		adds	r3, r7, r3
 4764 01d0 1022     		movs	r2, #16
 4765 01d2 1A70     		strb	r2, [r3]
 4766 01d4 35E0     		b	.L219
 4767              	.L227:
 4768              		.loc 1 2153 3 discriminator 26
 4769 01d6 7B68     		ldr	r3, [r7, #4]
 4770 01d8 1B68     		ldr	r3, [r3]
 4771 01da 604A     		ldr	r2, .L253+28
 4772 01dc 9342     		cmp	r3, r2
 4773 01de 04D1     		bne	.L234
 4774              		.loc 1 2153 3 discriminator 37
 4775 01e0 1723     		movs	r3, #23
 4776 01e2 FB18     		adds	r3, r7, r3
 4777 01e4 0022     		movs	r2, #0
 4778 01e6 1A70     		strb	r2, [r3]
 4779 01e8 2BE0     		b	.L219
 4780              	.L234:
 4781              		.loc 1 2153 3 discriminator 38
 4782 01ea 7B68     		ldr	r3, [r7, #4]
 4783 01ec 1B68     		ldr	r3, [r3]
 4784 01ee 5C4A     		ldr	r2, .L253+32
 4785 01f0 9342     		cmp	r3, r2
 4786 01f2 04D1     		bne	.L235
 4787              		.loc 1 2153 3 discriminator 39
 4788 01f4 1723     		movs	r3, #23
 4789 01f6 FB18     		adds	r3, r7, r3
 4790 01f8 0022     		movs	r2, #0
 4791 01fa 1A70     		strb	r2, [r3]
 4792 01fc 21E0     		b	.L219
 4793              	.L235:
 4794              		.loc 1 2153 3 discriminator 40
 4795 01fe 7B68     		ldr	r3, [r7, #4]
 4796 0200 1B68     		ldr	r3, [r3]
 4797 0202 584A     		ldr	r2, .L253+36
 4798 0204 9342     		cmp	r3, r2
 4799 0206 04D1     		bne	.L236
 4800              		.loc 1 2153 3 discriminator 41
 4801 0208 1723     		movs	r3, #23
 4802 020a FB18     		adds	r3, r7, r3
 4803 020c 0022     		movs	r2, #0
 4804 020e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 122


 4805 0210 17E0     		b	.L219
 4806              	.L236:
 4807              		.loc 1 2153 3 discriminator 42
 4808 0212 7B68     		ldr	r3, [r7, #4]
 4809 0214 1B68     		ldr	r3, [r3]
 4810 0216 544A     		ldr	r2, .L253+40
 4811 0218 9342     		cmp	r3, r2
 4812 021a 04D1     		bne	.L237
 4813              		.loc 1 2153 3 discriminator 43
 4814 021c 1723     		movs	r3, #23
 4815 021e FB18     		adds	r3, r7, r3
 4816 0220 0022     		movs	r2, #0
 4817 0222 1A70     		strb	r2, [r3]
 4818 0224 0DE0     		b	.L219
 4819              	.L237:
 4820              		.loc 1 2153 3 discriminator 44
 4821 0226 7B68     		ldr	r3, [r7, #4]
 4822 0228 1B68     		ldr	r3, [r3]
 4823 022a 504A     		ldr	r2, .L253+44
 4824 022c 9342     		cmp	r3, r2
 4825 022e 04D1     		bne	.L238
 4826              		.loc 1 2153 3 discriminator 45
 4827 0230 1723     		movs	r3, #23
 4828 0232 FB18     		adds	r3, r7, r3
 4829 0234 0022     		movs	r2, #0
 4830 0236 1A70     		strb	r2, [r3]
 4831 0238 03E0     		b	.L219
 4832              	.L238:
 4833              		.loc 1 2153 3 discriminator 46
 4834 023a 1723     		movs	r3, #23
 4835 023c FB18     		adds	r3, r7, r3
 4836 023e 1022     		movs	r2, #16
 4837 0240 1A70     		strb	r2, [r3]
 4838              	.L219:
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4839              		.loc 1 2156 18 is_stmt 1
 4840 0242 7B68     		ldr	r3, [r7, #4]
 4841 0244 DA69     		ldr	r2, [r3, #28]
 4842              		.loc 1 2156 6
 4843 0246 8023     		movs	r3, #128
 4844 0248 1B02     		lsls	r3, r3, #8
 4845 024a 9A42     		cmp	r2, r3
 4846 024c 00D0     		beq	.LCB4110
 4847 024e 91E0     		b	.L239	@long jump
 4848              	.LCB4110:
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 4849              		.loc 1 2158 5
 4850 0250 1723     		movs	r3, #23
 4851 0252 FB18     		adds	r3, r7, r3
 4852 0254 1B78     		ldrb	r3, [r3]
 4853 0256 082B     		cmp	r3, #8
 4854 0258 41D0     		beq	.L240
 4855 025a 52DC     		bgt	.L241
 4856 025c 042B     		cmp	r3, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 123


 4857 025e 2AD0     		beq	.L242
 4858 0260 4FDC     		bgt	.L241
 4859 0262 002B     		cmp	r3, #0
 4860 0264 02D0     		beq	.L243
 4861 0266 022B     		cmp	r3, #2
 4862 0268 14D0     		beq	.L244
 4863 026a 4AE0     		b	.L241
 4864              	.L243:
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4865              		.loc 1 2161 31
 4866 026c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4867 0270 0300     		movs	r3, r0
 4868 0272 5A00     		lsls	r2, r3, #1
 4869 0274 7B68     		ldr	r3, [r7, #4]
 4870 0276 5B68     		ldr	r3, [r3, #4]
 4871 0278 5B08     		lsrs	r3, r3, #1
 4872 027a D218     		adds	r2, r2, r3
 4873 027c 7B68     		ldr	r3, [r7, #4]
 4874 027e 5B68     		ldr	r3, [r3, #4]
 4875 0280 1900     		movs	r1, r3
 4876 0282 1000     		movs	r0, r2
 4877 0284 FFF7FEFF 		bl	__aeabi_uidiv
 4878              	.LVL3:
 4879 0288 0300     		movs	r3, r0
 4880 028a 1A00     		movs	r2, r3
 4881              		.loc 1 2161 18
 4882 028c 1423     		movs	r3, #20
 4883 028e FB18     		adds	r3, r7, r3
 4884 0290 1A80     		strh	r2, [r3]
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4885              		.loc 1 2162 9
 4886 0292 3BE0     		b	.L245
 4887              	.L244:
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 4888              		.loc 1 2164 31
 4889 0294 7B68     		ldr	r3, [r7, #4]
 4890 0296 5B68     		ldr	r3, [r3, #4]
 4891 0298 5B08     		lsrs	r3, r3, #1
 4892 029a 354A     		ldr	r2, .L253+48
 4893 029c 9A18     		adds	r2, r3, r2
 4894 029e 7B68     		ldr	r3, [r7, #4]
 4895 02a0 5B68     		ldr	r3, [r3, #4]
 4896 02a2 1900     		movs	r1, r3
 4897 02a4 1000     		movs	r0, r2
 4898 02a6 FFF7FEFF 		bl	__aeabi_uidiv
 4899              	.LVL4:
 4900 02aa 0300     		movs	r3, r0
 4901 02ac 1A00     		movs	r2, r3
 4902              		.loc 1 2164 18
 4903 02ae 1423     		movs	r3, #20
 4904 02b0 FB18     		adds	r3, r7, r3
 4905 02b2 1A80     		strh	r2, [r3]
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4906              		.loc 1 2165 9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 124


 4907 02b4 2AE0     		b	.L245
 4908              	.L242:
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4909              		.loc 1 2167 31
 4910 02b6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4911 02ba 0300     		movs	r3, r0
 4912 02bc 5A00     		lsls	r2, r3, #1
 4913 02be 7B68     		ldr	r3, [r7, #4]
 4914 02c0 5B68     		ldr	r3, [r3, #4]
 4915 02c2 5B08     		lsrs	r3, r3, #1
 4916 02c4 D218     		adds	r2, r2, r3
 4917 02c6 7B68     		ldr	r3, [r7, #4]
 4918 02c8 5B68     		ldr	r3, [r3, #4]
 4919 02ca 1900     		movs	r1, r3
 4920 02cc 1000     		movs	r0, r2
 4921 02ce FFF7FEFF 		bl	__aeabi_uidiv
 4922              	.LVL5:
 4923 02d2 0300     		movs	r3, r0
 4924 02d4 1A00     		movs	r2, r3
 4925              		.loc 1 2167 18
 4926 02d6 1423     		movs	r3, #20
 4927 02d8 FB18     		adds	r3, r7, r3
 4928 02da 1A80     		strh	r2, [r3]
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4929              		.loc 1 2168 9
 4930 02dc 16E0     		b	.L245
 4931              	.L240:
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 4932              		.loc 1 2170 31
 4933 02de 7B68     		ldr	r3, [r7, #4]
 4934 02e0 5B68     		ldr	r3, [r3, #4]
 4935 02e2 5B08     		lsrs	r3, r3, #1
 4936 02e4 8022     		movs	r2, #128
 4937 02e6 5202     		lsls	r2, r2, #9
 4938 02e8 9A18     		adds	r2, r3, r2
 4939 02ea 7B68     		ldr	r3, [r7, #4]
 4940 02ec 5B68     		ldr	r3, [r3, #4]
 4941 02ee 1900     		movs	r1, r3
 4942 02f0 1000     		movs	r0, r2
 4943 02f2 FFF7FEFF 		bl	__aeabi_uidiv
 4944              	.LVL6:
 4945 02f6 0300     		movs	r3, r0
 4946 02f8 1A00     		movs	r2, r3
 4947              		.loc 1 2170 18
 4948 02fa 1423     		movs	r3, #20
 4949 02fc FB18     		adds	r3, r7, r3
 4950 02fe 1A80     		strh	r2, [r3]
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4951              		.loc 1 2171 9
 4952 0300 04E0     		b	.L245
 4953              	.L241:
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 4954              		.loc 1 2174 13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 125


 4955 0302 1323     		movs	r3, #19
 4956 0304 FB18     		adds	r3, r7, r3
 4957 0306 0122     		movs	r2, #1
 4958 0308 1A70     		strb	r2, [r3]
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4959              		.loc 1 2175 9
 4960 030a C046     		nop
 4961              	.L245:
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 4962              		.loc 1 2178 13
 4963 030c 0A20     		movs	r0, #10
 4964 030e 3B18     		adds	r3, r7, r0
 4965 0310 1424     		movs	r4, #20
 4966 0312 3A19     		adds	r2, r7, r4
 4967 0314 1288     		ldrh	r2, [r2]
 4968 0316 0F21     		movs	r1, #15
 4969 0318 8A43     		bics	r2, r1
 4970 031a 1A80     		strh	r2, [r3]
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4971              		.loc 1 2179 58
 4972 031c 3B19     		adds	r3, r7, r4
 4973 031e 1B88     		ldrh	r3, [r3]
 4974 0320 5B10     		asrs	r3, r3, #1
 4975              		.loc 1 2179 16
 4976 0322 9BB2     		uxth	r3, r3
 4977 0324 0722     		movs	r2, #7
 4978 0326 1340     		ands	r3, r2
 4979 0328 99B2     		uxth	r1, r3
 4980              		.loc 1 2179 13
 4981 032a 3B18     		adds	r3, r7, r0
 4982 032c 3A18     		adds	r2, r7, r0
 4983 032e 1288     		ldrh	r2, [r2]
 4984 0330 0A43     		orrs	r2, r1
 4985 0332 1A80     		strh	r2, [r3]
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4986              		.loc 1 2180 10
 4987 0334 7B68     		ldr	r3, [r7, #4]
 4988 0336 1B68     		ldr	r3, [r3]
 4989              		.loc 1 2180 26
 4990 0338 3A18     		adds	r2, r7, r0
 4991 033a 1288     		ldrh	r2, [r2]
 4992 033c DA60     		str	r2, [r3, #12]
 4993 033e 75E0     		b	.L246
 4994              	.L254:
 4995              		.align	2
 4996              	.L253:
 4997 0340 F369FFEF 		.word	-268473869
 4998 0344 FFCFFFFF 		.word	-12289
 4999 0348 FFF4FFFF 		.word	-2817
 5000 034c 00380140 		.word	1073821696
 5001 0350 00100240 		.word	1073876992
 5002 0354 00440040 		.word	1073759232
 5003 0358 00480040 		.word	1073760256
 5004 035c 004C0040 		.word	1073761280
 5005 0360 00500040 		.word	1073762304
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 126


 5006 0364 00140140 		.word	1073812480
 5007 0368 00180140 		.word	1073813504
 5008 036c 001C0140 		.word	1073814528
 5009 0370 0024F400 		.word	16000000
 5010              	.L239:
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 5011              		.loc 1 2184 5
 5012 0374 1723     		movs	r3, #23
 5013 0376 FB18     		adds	r3, r7, r3
 5014 0378 1B78     		ldrb	r3, [r3]
 5015 037a 082B     		cmp	r3, #8
 5016 037c 3FD0     		beq	.L247
 5017 037e 50DC     		bgt	.L248
 5018 0380 042B     		cmp	r3, #4
 5019 0382 29D0     		beq	.L249
 5020 0384 4DDC     		bgt	.L248
 5021 0386 002B     		cmp	r3, #0
 5022 0388 02D0     		beq	.L250
 5023 038a 022B     		cmp	r3, #2
 5024 038c 13D0     		beq	.L251
 5025 038e 48E0     		b	.L248
 5026              	.L250:
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 5027              		.loc 1 2187 43
 5028 0390 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5029 0394 0200     		movs	r2, r0
 5030 0396 7B68     		ldr	r3, [r7, #4]
 5031 0398 5B68     		ldr	r3, [r3, #4]
 5032 039a 5B08     		lsrs	r3, r3, #1
 5033 039c D218     		adds	r2, r2, r3
 5034 039e 7B68     		ldr	r3, [r7, #4]
 5035 03a0 5B68     		ldr	r3, [r3, #4]
 5036 03a2 1900     		movs	r1, r3
 5037 03a4 1000     		movs	r0, r2
 5038 03a6 FFF7FEFF 		bl	__aeabi_uidiv
 5039              	.LVL7:
 5040 03aa 0300     		movs	r3, r0
 5041              		.loc 1 2187 32
 5042 03ac 9AB2     		uxth	r2, r3
 5043              		.loc 1 2187 14
 5044 03ae 7B68     		ldr	r3, [r7, #4]
 5045 03b0 1B68     		ldr	r3, [r3]
 5046              		.loc 1 2187 30
 5047 03b2 DA60     		str	r2, [r3, #12]
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5048              		.loc 1 2188 9
 5049 03b4 3AE0     		b	.L246
 5050              	.L251:
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5051              		.loc 1 2190 43
 5052 03b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 127


 5053 03b8 5B68     		ldr	r3, [r3, #4]
 5054 03ba 5B08     		lsrs	r3, r3, #1
 5055 03bc 1F4A     		ldr	r2, .L255
 5056 03be 9A18     		adds	r2, r3, r2
 5057 03c0 7B68     		ldr	r3, [r7, #4]
 5058 03c2 5B68     		ldr	r3, [r3, #4]
 5059 03c4 1900     		movs	r1, r3
 5060 03c6 1000     		movs	r0, r2
 5061 03c8 FFF7FEFF 		bl	__aeabi_uidiv
 5062              	.LVL8:
 5063 03cc 0300     		movs	r3, r0
 5064              		.loc 1 2190 32
 5065 03ce 9AB2     		uxth	r2, r3
 5066              		.loc 1 2190 14
 5067 03d0 7B68     		ldr	r3, [r7, #4]
 5068 03d2 1B68     		ldr	r3, [r3]
 5069              		.loc 1 2190 30
 5070 03d4 DA60     		str	r2, [r3, #12]
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5071              		.loc 1 2191 9
 5072 03d6 29E0     		b	.L246
 5073              	.L249:
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 5074              		.loc 1 2193 43
 5075 03d8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5076 03dc 0200     		movs	r2, r0
 5077 03de 7B68     		ldr	r3, [r7, #4]
 5078 03e0 5B68     		ldr	r3, [r3, #4]
 5079 03e2 5B08     		lsrs	r3, r3, #1
 5080 03e4 D218     		adds	r2, r2, r3
 5081 03e6 7B68     		ldr	r3, [r7, #4]
 5082 03e8 5B68     		ldr	r3, [r3, #4]
 5083 03ea 1900     		movs	r1, r3
 5084 03ec 1000     		movs	r0, r2
 5085 03ee FFF7FEFF 		bl	__aeabi_uidiv
 5086              	.LVL9:
 5087 03f2 0300     		movs	r3, r0
 5088              		.loc 1 2193 32
 5089 03f4 9AB2     		uxth	r2, r3
 5090              		.loc 1 2193 14
 5091 03f6 7B68     		ldr	r3, [r7, #4]
 5092 03f8 1B68     		ldr	r3, [r3]
 5093              		.loc 1 2193 30
 5094 03fa DA60     		str	r2, [r3, #12]
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5095              		.loc 1 2194 9
 5096 03fc 16E0     		b	.L246
 5097              	.L247:
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5098              		.loc 1 2196 43
 5099 03fe 7B68     		ldr	r3, [r7, #4]
 5100 0400 5B68     		ldr	r3, [r3, #4]
 5101 0402 5B08     		lsrs	r3, r3, #1
 5102 0404 8022     		movs	r2, #128
 5103 0406 1202     		lsls	r2, r2, #8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 128


 5104 0408 9A18     		adds	r2, r3, r2
 5105 040a 7B68     		ldr	r3, [r7, #4]
 5106 040c 5B68     		ldr	r3, [r3, #4]
 5107 040e 1900     		movs	r1, r3
 5108 0410 1000     		movs	r0, r2
 5109 0412 FFF7FEFF 		bl	__aeabi_uidiv
 5110              	.LVL10:
 5111 0416 0300     		movs	r3, r0
 5112              		.loc 1 2196 32
 5113 0418 9AB2     		uxth	r2, r3
 5114              		.loc 1 2196 14
 5115 041a 7B68     		ldr	r3, [r7, #4]
 5116 041c 1B68     		ldr	r3, [r3]
 5117              		.loc 1 2196 30
 5118 041e DA60     		str	r2, [r3, #12]
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5119              		.loc 1 2197 9
 5120 0420 04E0     		b	.L246
 5121              	.L248:
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 5122              		.loc 1 2200 13
 5123 0422 1323     		movs	r3, #19
 5124 0424 FB18     		adds	r3, r7, r3
 5125 0426 0122     		movs	r2, #1
 5126 0428 1A70     		strb	r2, [r3]
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 5127              		.loc 1 2201 9
 5128 042a C046     		nop
 5129              	.L246:
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
 5130              		.loc 1 2205 10
 5131 042c 1323     		movs	r3, #19
 5132 042e FB18     		adds	r3, r7, r3
 5133 0430 1B78     		ldrb	r3, [r3]
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5134              		.loc 1 2207 1
 5135 0432 1800     		movs	r0, r3
 5136 0434 BD46     		mov	sp, r7
 5137 0436 07B0     		add	sp, sp, #28
 5138              		@ sp needed
 5139 0438 90BD     		pop	{r4, r7, pc}
 5140              	.L256:
 5141 043a C046     		.align	2
 5142              	.L255:
 5143 043c 00127A00 		.word	8000000
 5144              		.cfi_endproc
 5145              	.LFE74:
 5147              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5148              		.align	1
 5149              		.global	UART_AdvFeatureConfig
 5150              		.syntax unified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 129


 5151              		.code	16
 5152              		.thumb_func
 5153              		.fpu softvfp
 5155              	UART_AdvFeatureConfig:
 5156              	.LFB75:
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5157              		.loc 1 2215 1
 5158              		.cfi_startproc
 5159              		@ args = 0, pretend = 0, frame = 8
 5160              		@ frame_needed = 1, uses_anonymous_args = 0
 5161 0000 80B5     		push	{r7, lr}
 5162              	.LCFI114:
 5163              		.cfi_def_cfa_offset 8
 5164              		.cfi_offset 7, -8
 5165              		.cfi_offset 14, -4
 5166 0002 82B0     		sub	sp, sp, #8
 5167              	.LCFI115:
 5168              		.cfi_def_cfa_offset 16
 5169 0004 00AF     		add	r7, sp, #0
 5170              	.LCFI116:
 5171              		.cfi_def_cfa_register 7
 5172 0006 7860     		str	r0, [r7, #4]
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5173              		.loc 1 2220 6
 5174 0008 7B68     		ldr	r3, [r7, #4]
 5175 000a 5B6A     		ldr	r3, [r3, #36]
 5176 000c 0122     		movs	r2, #1
 5177 000e 1340     		ands	r3, r2
 5178              		.loc 1 2220 5
 5179 0010 0BD0     		beq	.L258
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5180              		.loc 1 2223 5
 5181 0012 7B68     		ldr	r3, [r7, #4]
 5182 0014 1B68     		ldr	r3, [r3]
 5183 0016 5B68     		ldr	r3, [r3, #4]
 5184 0018 4A4A     		ldr	r2, .L267
 5185 001a 1340     		ands	r3, r2
 5186 001c 1900     		movs	r1, r3
 5187 001e 7B68     		ldr	r3, [r7, #4]
 5188 0020 9A6A     		ldr	r2, [r3, #40]
 5189 0022 7B68     		ldr	r3, [r7, #4]
 5190 0024 1B68     		ldr	r3, [r3]
 5191 0026 0A43     		orrs	r2, r1
 5192 0028 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 130


 5193              	.L258:
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5194              		.loc 1 2227 6
 5195 002a 7B68     		ldr	r3, [r7, #4]
 5196 002c 5B6A     		ldr	r3, [r3, #36]
 5197 002e 0222     		movs	r2, #2
 5198 0030 1340     		ands	r3, r2
 5199              		.loc 1 2227 5
 5200 0032 0BD0     		beq	.L259
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5201              		.loc 1 2230 5
 5202 0034 7B68     		ldr	r3, [r7, #4]
 5203 0036 1B68     		ldr	r3, [r3]
 5204 0038 5B68     		ldr	r3, [r3, #4]
 5205 003a 434A     		ldr	r2, .L267+4
 5206 003c 1340     		ands	r3, r2
 5207 003e 1900     		movs	r1, r3
 5208 0040 7B68     		ldr	r3, [r7, #4]
 5209 0042 DA6A     		ldr	r2, [r3, #44]
 5210 0044 7B68     		ldr	r3, [r7, #4]
 5211 0046 1B68     		ldr	r3, [r3]
 5212 0048 0A43     		orrs	r2, r1
 5213 004a 5A60     		str	r2, [r3, #4]
 5214              	.L259:
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5215              		.loc 1 2234 6
 5216 004c 7B68     		ldr	r3, [r7, #4]
 5217 004e 5B6A     		ldr	r3, [r3, #36]
 5218 0050 0422     		movs	r2, #4
 5219 0052 1340     		ands	r3, r2
 5220              		.loc 1 2234 5
 5221 0054 0BD0     		beq	.L260
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5222              		.loc 1 2237 5
 5223 0056 7B68     		ldr	r3, [r7, #4]
 5224 0058 1B68     		ldr	r3, [r3]
 5225 005a 5B68     		ldr	r3, [r3, #4]
 5226 005c 3B4A     		ldr	r2, .L267+8
 5227 005e 1340     		ands	r3, r2
 5228 0060 1900     		movs	r1, r3
 5229 0062 7B68     		ldr	r3, [r7, #4]
 5230 0064 1A6B     		ldr	r2, [r3, #48]
 5231 0066 7B68     		ldr	r3, [r7, #4]
 5232 0068 1B68     		ldr	r3, [r3]
 5233 006a 0A43     		orrs	r2, r1
 5234 006c 5A60     		str	r2, [r3, #4]
 5235              	.L260:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 131


2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 5236              		.loc 1 2241 6
 5237 006e 7B68     		ldr	r3, [r7, #4]
 5238 0070 5B6A     		ldr	r3, [r3, #36]
 5239 0072 0822     		movs	r2, #8
 5240 0074 1340     		ands	r3, r2
 5241              		.loc 1 2241 5
 5242 0076 0BD0     		beq	.L261
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5243              		.loc 1 2244 5
 5244 0078 7B68     		ldr	r3, [r7, #4]
 5245 007a 1B68     		ldr	r3, [r3]
 5246 007c 5B68     		ldr	r3, [r3, #4]
 5247 007e 344A     		ldr	r2, .L267+12
 5248 0080 1340     		ands	r3, r2
 5249 0082 1900     		movs	r1, r3
 5250 0084 7B68     		ldr	r3, [r7, #4]
 5251 0086 5A6B     		ldr	r2, [r3, #52]
 5252 0088 7B68     		ldr	r3, [r7, #4]
 5253 008a 1B68     		ldr	r3, [r3]
 5254 008c 0A43     		orrs	r2, r1
 5255 008e 5A60     		str	r2, [r3, #4]
 5256              	.L261:
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5257              		.loc 1 2248 6
 5258 0090 7B68     		ldr	r3, [r7, #4]
 5259 0092 5B6A     		ldr	r3, [r3, #36]
 5260 0094 1022     		movs	r2, #16
 5261 0096 1340     		ands	r3, r2
 5262              		.loc 1 2248 5
 5263 0098 0BD0     		beq	.L262
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5264              		.loc 1 2251 5
 5265 009a 7B68     		ldr	r3, [r7, #4]
 5266 009c 1B68     		ldr	r3, [r3]
 5267 009e 9B68     		ldr	r3, [r3, #8]
 5268 00a0 2C4A     		ldr	r2, .L267+16
 5269 00a2 1340     		ands	r3, r2
 5270 00a4 1900     		movs	r1, r3
 5271 00a6 7B68     		ldr	r3, [r7, #4]
 5272 00a8 9A6B     		ldr	r2, [r3, #56]
 5273 00aa 7B68     		ldr	r3, [r7, #4]
 5274 00ac 1B68     		ldr	r3, [r3]
 5275 00ae 0A43     		orrs	r2, r1
 5276 00b0 9A60     		str	r2, [r3, #8]
 5277              	.L262:
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 132


2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5278              		.loc 1 2255 6
 5279 00b2 7B68     		ldr	r3, [r7, #4]
 5280 00b4 5B6A     		ldr	r3, [r3, #36]
 5281 00b6 2022     		movs	r2, #32
 5282 00b8 1340     		ands	r3, r2
 5283              		.loc 1 2255 5
 5284 00ba 0BD0     		beq	.L263
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5285              		.loc 1 2258 5
 5286 00bc 7B68     		ldr	r3, [r7, #4]
 5287 00be 1B68     		ldr	r3, [r3]
 5288 00c0 9B68     		ldr	r3, [r3, #8]
 5289 00c2 254A     		ldr	r2, .L267+20
 5290 00c4 1340     		ands	r3, r2
 5291 00c6 1900     		movs	r1, r3
 5292 00c8 7B68     		ldr	r3, [r7, #4]
 5293 00ca DA6B     		ldr	r2, [r3, #60]
 5294 00cc 7B68     		ldr	r3, [r7, #4]
 5295 00ce 1B68     		ldr	r3, [r3]
 5296 00d0 0A43     		orrs	r2, r1
 5297 00d2 9A60     		str	r2, [r3, #8]
 5298              	.L263:
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5299              		.loc 1 2262 6
 5300 00d4 7B68     		ldr	r3, [r7, #4]
 5301 00d6 5B6A     		ldr	r3, [r3, #36]
 5302 00d8 4022     		movs	r2, #64
 5303 00da 1340     		ands	r3, r2
 5304              		.loc 1 2262 5
 5305 00dc 1DD0     		beq	.L264
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5306              		.loc 1 2266 5
 5307 00de 7B68     		ldr	r3, [r7, #4]
 5308 00e0 1B68     		ldr	r3, [r3]
 5309 00e2 5B68     		ldr	r3, [r3, #4]
 5310 00e4 1D4A     		ldr	r2, .L267+24
 5311 00e6 1340     		ands	r3, r2
 5312 00e8 1900     		movs	r1, r3
 5313 00ea 7B68     		ldr	r3, [r7, #4]
 5314 00ec 1A6C     		ldr	r2, [r3, #64]
 5315 00ee 7B68     		ldr	r3, [r7, #4]
 5316 00f0 1B68     		ldr	r3, [r3]
 5317 00f2 0A43     		orrs	r2, r1
 5318 00f4 5A60     		str	r2, [r3, #4]
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 133


 5319              		.loc 1 2268 27
 5320 00f6 7B68     		ldr	r3, [r7, #4]
 5321 00f8 1A6C     		ldr	r2, [r3, #64]
 5322              		.loc 1 2268 7
 5323 00fa 8023     		movs	r3, #128
 5324 00fc 5B03     		lsls	r3, r3, #13
 5325 00fe 9A42     		cmp	r2, r3
 5326 0100 0BD1     		bne	.L264
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5327              		.loc 1 2271 7
 5328 0102 7B68     		ldr	r3, [r7, #4]
 5329 0104 1B68     		ldr	r3, [r3]
 5330 0106 5B68     		ldr	r3, [r3, #4]
 5331 0108 154A     		ldr	r2, .L267+28
 5332 010a 1340     		ands	r3, r2
 5333 010c 1900     		movs	r1, r3
 5334 010e 7B68     		ldr	r3, [r7, #4]
 5335 0110 5A6C     		ldr	r2, [r3, #68]
 5336 0112 7B68     		ldr	r3, [r7, #4]
 5337 0114 1B68     		ldr	r3, [r3]
 5338 0116 0A43     		orrs	r2, r1
 5339 0118 5A60     		str	r2, [r3, #4]
 5340              	.L264:
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5341              		.loc 1 2276 6
 5342 011a 7B68     		ldr	r3, [r7, #4]
 5343 011c 5B6A     		ldr	r3, [r3, #36]
 5344 011e 8022     		movs	r2, #128
 5345 0120 1340     		ands	r3, r2
 5346              		.loc 1 2276 5
 5347 0122 0BD0     		beq	.L266
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5348              		.loc 1 2279 5
 5349 0124 7B68     		ldr	r3, [r7, #4]
 5350 0126 1B68     		ldr	r3, [r3]
 5351 0128 5B68     		ldr	r3, [r3, #4]
 5352 012a 0E4A     		ldr	r2, .L267+32
 5353 012c 1340     		ands	r3, r2
 5354 012e 1900     		movs	r1, r3
 5355 0130 7B68     		ldr	r3, [r7, #4]
 5356 0132 9A6C     		ldr	r2, [r3, #72]
 5357 0134 7B68     		ldr	r3, [r7, #4]
 5358 0136 1B68     		ldr	r3, [r3]
 5359 0138 0A43     		orrs	r2, r1
 5360 013a 5A60     		str	r2, [r3, #4]
 5361              	.L266:
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5362              		.loc 1 2281 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 134


 5363 013c C046     		nop
 5364 013e BD46     		mov	sp, r7
 5365 0140 02B0     		add	sp, sp, #8
 5366              		@ sp needed
 5367 0142 80BD     		pop	{r7, pc}
 5368              	.L268:
 5369              		.align	2
 5370              	.L267:
 5371 0144 FFFFFDFF 		.word	-131073
 5372 0148 FFFFFEFF 		.word	-65537
 5373 014c FFFFFBFF 		.word	-262145
 5374 0150 FF7FFFFF 		.word	-32769
 5375 0154 FFEFFFFF 		.word	-4097
 5376 0158 FFDFFFFF 		.word	-8193
 5377 015c FFFFEFFF 		.word	-1048577
 5378 0160 FFFF9FFF 		.word	-6291457
 5379 0164 FFFFF7FF 		.word	-524289
 5380              		.cfi_endproc
 5381              	.LFE75:
 5383              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5384              		.align	1
 5385              		.global	UART_CheckIdleState
 5386              		.syntax unified
 5387              		.code	16
 5388              		.thumb_func
 5389              		.fpu softvfp
 5391              	UART_CheckIdleState:
 5392              	.LFB76:
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5393              		.loc 1 2289 1
 5394              		.cfi_startproc
 5395              		@ args = 0, pretend = 0, frame = 16
 5396              		@ frame_needed = 1, uses_anonymous_args = 0
 5397 0000 80B5     		push	{r7, lr}
 5398              	.LCFI117:
 5399              		.cfi_def_cfa_offset 8
 5400              		.cfi_offset 7, -8
 5401              		.cfi_offset 14, -4
 5402 0002 86B0     		sub	sp, sp, #24
 5403              	.LCFI118:
 5404              		.cfi_def_cfa_offset 32
 5405 0004 02AF     		add	r7, sp, #8
 5406              	.LCFI119:
 5407              		.cfi_def_cfa 7, 24
 5408 0006 7860     		str	r0, [r7, #4]
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 5409              		.loc 1 2291 12
 5410 0008 0023     		movs	r3, #0
 5411 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 135


2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5412              		.loc 1 2295 20
 5413 000c 7B68     		ldr	r3, [r7, #4]
 5414 000e 0022     		movs	r2, #0
 5415 0010 DA66     		str	r2, [r3, #108]
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5416              		.loc 1 2299 15
 5417 0012 FFF7FEFF 		bl	HAL_GetTick
 5418 0016 0300     		movs	r3, r0
 5419 0018 FB60     		str	r3, [r7, #12]
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
 5420              		.loc 1 2304 7
 5421 001a 7B68     		ldr	r3, [r7, #4]
 5422 001c 1B68     		ldr	r3, [r3]
 5423              		.loc 1 2304 6
 5424 001e 234A     		ldr	r2, .L274
 5425 0020 9342     		cmp	r3, r2
 5426 0022 09D0     		beq	.L270
 5427              		.loc 1 2304 7 discriminator 1
 5428 0024 7B68     		ldr	r3, [r7, #4]
 5429 0026 1B68     		ldr	r3, [r3]
 5430 0028 214A     		ldr	r2, .L274+4
 5431 002a 9342     		cmp	r3, r2
 5432 002c 04D0     		beq	.L270
 5433              		.loc 1 2304 7 is_stmt 0 discriminator 2
 5434 002e 7B68     		ldr	r3, [r7, #4]
 5435 0030 1B68     		ldr	r3, [r3]
 5436 0032 204A     		ldr	r2, .L274+8
 5437 0034 9342     		cmp	r3, r2
 5438 0036 27D1     		bne	.L271
 5439              	.L270:
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5440              		.loc 1 2307 14 is_stmt 1
 5441 0038 7B68     		ldr	r3, [r7, #4]
 5442 003a 1B68     		ldr	r3, [r3]
 5443              		.loc 1 2307 24
 5444 003c 1B68     		ldr	r3, [r3]
 5445              		.loc 1 2307 30
 5446 003e 0822     		movs	r2, #8
 5447 0040 1340     		ands	r3, r2
 5448              		.loc 1 2307 7
 5449 0042 082B     		cmp	r3, #8
 5450 0044 0CD1     		bne	.L272
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 136


2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
 5451              		.loc 1 2310 10
 5452 0046 FB68     		ldr	r3, [r7, #12]
 5453 0048 8022     		movs	r2, #128
 5454 004a 9103     		lsls	r1, r2, #14
 5455 004c 7868     		ldr	r0, [r7, #4]
 5456 004e 1A4A     		ldr	r2, .L274+12
 5457 0050 0092     		str	r2, [sp]
 5458 0052 0022     		movs	r2, #0
 5459 0054 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5460 0058 031E     		subs	r3, r0, #0
 5461              		.loc 1 2310 9
 5462 005a 01D0     		beq	.L272
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 5463              		.loc 1 2313 16
 5464 005c 0323     		movs	r3, #3
 5465 005e 20E0     		b	.L273
 5466              	.L272:
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 5467              		.loc 1 2318 14
 5468 0060 7B68     		ldr	r3, [r7, #4]
 5469 0062 1B68     		ldr	r3, [r3]
 5470              		.loc 1 2318 24
 5471 0064 1B68     		ldr	r3, [r3]
 5472              		.loc 1 2318 30
 5473 0066 0422     		movs	r2, #4
 5474 0068 1340     		ands	r3, r2
 5475              		.loc 1 2318 7
 5476 006a 042B     		cmp	r3, #4
 5477 006c 0CD1     		bne	.L271
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
 5478              		.loc 1 2321 10
 5479 006e FB68     		ldr	r3, [r7, #12]
 5480 0070 8022     		movs	r2, #128
 5481 0072 D103     		lsls	r1, r2, #15
 5482 0074 7868     		ldr	r0, [r7, #4]
 5483 0076 104A     		ldr	r2, .L274+12
 5484 0078 0092     		str	r2, [sp]
 5485 007a 0022     		movs	r2, #0
 5486 007c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5487 0080 031E     		subs	r3, r0, #0
 5488              		.loc 1 2321 9
 5489 0082 01D0     		beq	.L271
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 5490              		.loc 1 2324 16
 5491 0084 0323     		movs	r3, #3
 5492 0086 0CE0     		b	.L273
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 137


 5493              	.L271:
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5494              		.loc 1 2331 18
 5495 0088 7B68     		ldr	r3, [r7, #4]
 5496 008a 6922     		movs	r2, #105
 5497 008c 2021     		movs	r1, #32
 5498 008e 9954     		strb	r1, [r3, r2]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5499              		.loc 1 2332 18
 5500 0090 7B68     		ldr	r3, [r7, #4]
 5501 0092 6A22     		movs	r2, #106
 5502 0094 2021     		movs	r1, #32
 5503 0096 9954     		strb	r1, [r3, r2]
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5504              		.loc 1 2335 3
 5505 0098 7B68     		ldr	r3, [r7, #4]
 5506 009a 6822     		movs	r2, #104
 5507 009c 0021     		movs	r1, #0
 5508 009e 9954     		strb	r1, [r3, r2]
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5509              		.loc 1 2337 10
 5510 00a0 0023     		movs	r3, #0
 5511              	.L273:
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5512              		.loc 1 2338 1
 5513 00a2 1800     		movs	r0, r3
 5514 00a4 BD46     		mov	sp, r7
 5515 00a6 04B0     		add	sp, sp, #16
 5516              		@ sp needed
 5517 00a8 80BD     		pop	{r7, pc}
 5518              	.L275:
 5519 00aa C046     		.align	2
 5520              	.L274:
 5521 00ac 00380140 		.word	1073821696
 5522 00b0 00440040 		.word	1073759232
 5523 00b4 00480040 		.word	1073760256
 5524 00b8 FFFFFF01 		.word	33554431
 5525              		.cfi_endproc
 5526              	.LFE76:
 5528              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5529              		.align	1
 5530              		.global	UART_WaitOnFlagUntilTimeout
 5531              		.syntax unified
 5532              		.code	16
 5533              		.thumb_func
 5534              		.fpu softvfp
 5536              	UART_WaitOnFlagUntilTimeout:
 5537              	.LFB77:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 138


2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5538              		.loc 1 2350 1
 5539              		.cfi_startproc
 5540              		@ args = 4, pretend = 0, frame = 16
 5541              		@ frame_needed = 1, uses_anonymous_args = 0
 5542 0000 80B5     		push	{r7, lr}
 5543              	.LCFI120:
 5544              		.cfi_def_cfa_offset 8
 5545              		.cfi_offset 7, -8
 5546              		.cfi_offset 14, -4
 5547 0002 84B0     		sub	sp, sp, #16
 5548              	.LCFI121:
 5549              		.cfi_def_cfa_offset 24
 5550 0004 00AF     		add	r7, sp, #0
 5551              	.LCFI122:
 5552              		.cfi_def_cfa_register 7
 5553 0006 F860     		str	r0, [r7, #12]
 5554 0008 B960     		str	r1, [r7, #8]
 5555 000a 3B60     		str	r3, [r7]
 5556 000c FB1D     		adds	r3, r7, #7
 5557 000e 1A70     		strb	r2, [r3]
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5558              		.loc 1 2352 8
 5559 0010 2BE0     		b	.L277
 5560              	.L280:
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 5561              		.loc 1 2355 7
 5562 0012 BB69     		ldr	r3, [r7, #24]
 5563 0014 0133     		adds	r3, r3, #1
 5564 0016 28D0     		beq	.L277
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 5565              		.loc 1 2357 9
 5566 0018 BB69     		ldr	r3, [r7, #24]
 5567 001a 002B     		cmp	r3, #0
 5568 001c 07D0     		beq	.L278
 5569              		.loc 1 2357 31 discriminator 1
 5570 001e FFF7FEFF 		bl	HAL_GetTick
 5571 0022 0200     		movs	r2, r0
 5572              		.loc 1 2357 44 discriminator 1
 5573 0024 3B68     		ldr	r3, [r7]
 5574 0026 D31A     		subs	r3, r2, r3
 5575              		.loc 1 2357 26 discriminator 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 139


 5576 0028 BA69     		ldr	r2, [r7, #24]
 5577 002a 9A42     		cmp	r2, r3
 5578 002c 1DD2     		bcs	.L277
 5579              	.L278:
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5580              		.loc 1 2360 9
 5581 002e FB68     		ldr	r3, [r7, #12]
 5582 0030 1B68     		ldr	r3, [r3]
 5583 0032 1A68     		ldr	r2, [r3]
 5584 0034 FB68     		ldr	r3, [r7, #12]
 5585 0036 1B68     		ldr	r3, [r3]
 5586 0038 1649     		ldr	r1, .L281
 5587 003a 0A40     		ands	r2, r1
 5588 003c 1A60     		str	r2, [r3]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5589              		.loc 1 2361 9
 5590 003e FB68     		ldr	r3, [r7, #12]
 5591 0040 1B68     		ldr	r3, [r3]
 5592 0042 9A68     		ldr	r2, [r3, #8]
 5593 0044 FB68     		ldr	r3, [r7, #12]
 5594 0046 1B68     		ldr	r3, [r3]
 5595 0048 0121     		movs	r1, #1
 5596 004a 8A43     		bics	r2, r1
 5597 004c 9A60     		str	r2, [r3, #8]
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 5598              		.loc 1 2363 24
 5599 004e FB68     		ldr	r3, [r7, #12]
 5600 0050 6922     		movs	r2, #105
 5601 0052 2021     		movs	r1, #32
 5602 0054 9954     		strb	r1, [r3, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5603              		.loc 1 2364 24
 5604 0056 FB68     		ldr	r3, [r7, #12]
 5605 0058 6A22     		movs	r2, #106
 5606 005a 2021     		movs	r1, #32
 5607 005c 9954     		strb	r1, [r3, r2]
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5608              		.loc 1 2367 9
 5609 005e FB68     		ldr	r3, [r7, #12]
 5610 0060 6822     		movs	r2, #104
 5611 0062 0021     		movs	r1, #0
 5612 0064 9954     		strb	r1, [r3, r2]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 5613              		.loc 1 2368 16
 5614 0066 0323     		movs	r3, #3
 5615 0068 0FE0     		b	.L279
 5616              	.L277:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5617              		.loc 1 2352 10
 5618 006a FB68     		ldr	r3, [r7, #12]
 5619 006c 1B68     		ldr	r3, [r3]
 5620 006e DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 140


 5621 0070 BA68     		ldr	r2, [r7, #8]
 5622 0072 1340     		ands	r3, r2
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5623              		.loc 1 2352 49
 5624 0074 BA68     		ldr	r2, [r7, #8]
 5625 0076 D31A     		subs	r3, r2, r3
 5626 0078 5A42     		rsbs	r2, r3, #0
 5627 007a 5341     		adcs	r3, r3, r2
 5628 007c DBB2     		uxtb	r3, r3
 5629 007e 1A00     		movs	r2, r3
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5630              		.loc 1 2352 58
 5631 0080 FB1D     		adds	r3, r7, #7
 5632 0082 1B78     		ldrb	r3, [r3]
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5633              		.loc 1 2352 8
 5634 0084 9A42     		cmp	r2, r3
 5635 0086 C4D0     		beq	.L280
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5636              		.loc 1 2372 10
 5637 0088 0023     		movs	r3, #0
 5638              	.L279:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5639              		.loc 1 2373 1
 5640 008a 1800     		movs	r0, r3
 5641 008c BD46     		mov	sp, r7
 5642 008e 04B0     		add	sp, sp, #16
 5643              		@ sp needed
 5644 0090 80BD     		pop	{r7, pc}
 5645              	.L282:
 5646 0092 C046     		.align	2
 5647              	.L281:
 5648 0094 5FFEFFFF 		.word	-417
 5649              		.cfi_endproc
 5650              	.LFE77:
 5652              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5653              		.align	1
 5654              		.syntax unified
 5655              		.code	16
 5656              		.thumb_func
 5657              		.fpu softvfp
 5659              	UART_EndTxTransfer:
 5660              	.LFB78:
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5661              		.loc 1 2382 1
 5662              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 141


 5663              		@ args = 0, pretend = 0, frame = 8
 5664              		@ frame_needed = 1, uses_anonymous_args = 0
 5665 0000 80B5     		push	{r7, lr}
 5666              	.LCFI123:
 5667              		.cfi_def_cfa_offset 8
 5668              		.cfi_offset 7, -8
 5669              		.cfi_offset 14, -4
 5670 0002 82B0     		sub	sp, sp, #8
 5671              	.LCFI124:
 5672              		.cfi_def_cfa_offset 16
 5673 0004 00AF     		add	r7, sp, #0
 5674              	.LCFI125:
 5675              		.cfi_def_cfa_register 7
 5676 0006 7860     		str	r0, [r7, #4]
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5677              		.loc 1 2384 3
 5678 0008 7B68     		ldr	r3, [r7, #4]
 5679 000a 1B68     		ldr	r3, [r3]
 5680 000c 1A68     		ldr	r2, [r3]
 5681 000e 7B68     		ldr	r3, [r7, #4]
 5682 0010 1B68     		ldr	r3, [r3]
 5683 0012 C021     		movs	r1, #192
 5684 0014 8A43     		bics	r2, r1
 5685 0016 1A60     		str	r2, [r3]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5686              		.loc 1 2387 17
 5687 0018 7B68     		ldr	r3, [r7, #4]
 5688 001a 6922     		movs	r2, #105
 5689 001c 2021     		movs	r1, #32
 5690 001e 9954     		strb	r1, [r3, r2]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5691              		.loc 1 2388 1
 5692 0020 C046     		nop
 5693 0022 BD46     		mov	sp, r7
 5694 0024 02B0     		add	sp, sp, #8
 5695              		@ sp needed
 5696 0026 80BD     		pop	{r7, pc}
 5697              		.cfi_endproc
 5698              	.LFE78:
 5700              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5701              		.align	1
 5702              		.syntax unified
 5703              		.code	16
 5704              		.thumb_func
 5705              		.fpu softvfp
 5707              	UART_EndRxTransfer:
 5708              	.LFB79:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 142


2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5709              		.loc 1 2397 1
 5710              		.cfi_startproc
 5711              		@ args = 0, pretend = 0, frame = 8
 5712              		@ frame_needed = 1, uses_anonymous_args = 0
 5713 0000 80B5     		push	{r7, lr}
 5714              	.LCFI126:
 5715              		.cfi_def_cfa_offset 8
 5716              		.cfi_offset 7, -8
 5717              		.cfi_offset 14, -4
 5718 0002 82B0     		sub	sp, sp, #8
 5719              	.LCFI127:
 5720              		.cfi_def_cfa_offset 16
 5721 0004 00AF     		add	r7, sp, #0
 5722              	.LCFI128:
 5723              		.cfi_def_cfa_register 7
 5724 0006 7860     		str	r0, [r7, #4]
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5725              		.loc 1 2399 3
 5726 0008 7B68     		ldr	r3, [r7, #4]
 5727 000a 1B68     		ldr	r3, [r3]
 5728 000c 1A68     		ldr	r2, [r3]
 5729 000e 7B68     		ldr	r3, [r7, #4]
 5730 0010 1B68     		ldr	r3, [r3]
 5731 0012 0949     		ldr	r1, .L285
 5732 0014 0A40     		ands	r2, r1
 5733 0016 1A60     		str	r2, [r3]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5734              		.loc 1 2400 3
 5735 0018 7B68     		ldr	r3, [r7, #4]
 5736 001a 1B68     		ldr	r3, [r3]
 5737 001c 9A68     		ldr	r2, [r3, #8]
 5738 001e 7B68     		ldr	r3, [r7, #4]
 5739 0020 1B68     		ldr	r3, [r3]
 5740 0022 0121     		movs	r1, #1
 5741 0024 8A43     		bics	r2, r1
 5742 0026 9A60     		str	r2, [r3, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5743              		.loc 1 2403 18
 5744 0028 7B68     		ldr	r3, [r7, #4]
 5745 002a 6A22     		movs	r2, #106
 5746 002c 2021     		movs	r1, #32
 5747 002e 9954     		strb	r1, [r3, r2]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5748              		.loc 1 2404 1
 5749 0030 C046     		nop
 5750 0032 BD46     		mov	sp, r7
 5751 0034 02B0     		add	sp, sp, #8
 5752              		@ sp needed
 5753 0036 80BD     		pop	{r7, pc}
 5754              	.L286:
 5755              		.align	2
 5756              	.L285:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 143


 5757 0038 DFFEFFFF 		.word	-289
 5758              		.cfi_endproc
 5759              	.LFE79:
 5761              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 5762              		.align	1
 5763              		.syntax unified
 5764              		.code	16
 5765              		.thumb_func
 5766              		.fpu softvfp
 5768              	UART_DMATransmitCplt:
 5769              	.LFB80:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5770              		.loc 1 2413 1
 5771              		.cfi_startproc
 5772              		@ args = 0, pretend = 0, frame = 16
 5773              		@ frame_needed = 1, uses_anonymous_args = 0
 5774 0000 80B5     		push	{r7, lr}
 5775              	.LCFI129:
 5776              		.cfi_def_cfa_offset 8
 5777              		.cfi_offset 7, -8
 5778              		.cfi_offset 14, -4
 5779 0002 84B0     		sub	sp, sp, #16
 5780              	.LCFI130:
 5781              		.cfi_def_cfa_offset 24
 5782 0004 00AF     		add	r7, sp, #0
 5783              	.LCFI131:
 5784              		.cfi_def_cfa_register 7
 5785 0006 7860     		str	r0, [r7, #4]
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5786              		.loc 1 2414 23
 5787 0008 7B68     		ldr	r3, [r7, #4]
 5788 000a 5B6A     		ldr	r3, [r3, #36]
 5789 000c FB60     		str	r3, [r7, #12]
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5790              		.loc 1 2417 8
 5791 000e 7B68     		ldr	r3, [r7, #4]
 5792 0010 1B68     		ldr	r3, [r3]
 5793 0012 1B68     		ldr	r3, [r3]
 5794 0014 2022     		movs	r2, #32
 5795 0016 1340     		ands	r3, r2
 5796              		.loc 1 2417 6
 5797 0018 14D1     		bne	.L288
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 5798              		.loc 1 2419 24
 5799 001a FB68     		ldr	r3, [r7, #12]
 5800 001c 5222     		movs	r2, #82
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 144


 5801 001e 0021     		movs	r1, #0
 5802 0020 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5803              		.loc 1 2423 5
 5804 0022 FB68     		ldr	r3, [r7, #12]
 5805 0024 1B68     		ldr	r3, [r3]
 5806 0026 9A68     		ldr	r2, [r3, #8]
 5807 0028 FB68     		ldr	r3, [r7, #12]
 5808 002a 1B68     		ldr	r3, [r3]
 5809 002c 8021     		movs	r1, #128
 5810 002e 8A43     		bics	r2, r1
 5811 0030 9A60     		str	r2, [r3, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5812              		.loc 1 2426 5
 5813 0032 FB68     		ldr	r3, [r7, #12]
 5814 0034 1B68     		ldr	r3, [r3]
 5815 0036 1A68     		ldr	r2, [r3]
 5816 0038 FB68     		ldr	r3, [r7, #12]
 5817 003a 1B68     		ldr	r3, [r3]
 5818 003c 4021     		movs	r1, #64
 5819 003e 0A43     		orrs	r2, r1
 5820 0040 1A60     		str	r2, [r3]
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5821              		.loc 1 2434 1
 5822 0042 03E0     		b	.L290
 5823              	.L288:
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5824              		.loc 1 2431 5
 5825 0044 FB68     		ldr	r3, [r7, #12]
 5826 0046 1800     		movs	r0, r3
 5827 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5828              	.L290:
 5829              		.loc 1 2434 1
 5830 004c C046     		nop
 5831 004e BD46     		mov	sp, r7
 5832 0050 04B0     		add	sp, sp, #16
 5833              		@ sp needed
 5834 0052 80BD     		pop	{r7, pc}
 5835              		.cfi_endproc
 5836              	.LFE80:
 5838              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 5839              		.align	1
 5840              		.syntax unified
 5841              		.code	16
 5842              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 145


 5843              		.fpu softvfp
 5845              	UART_DMATxHalfCplt:
 5846              	.LFB81:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5847              		.loc 1 2442 1
 5848              		.cfi_startproc
 5849              		@ args = 0, pretend = 0, frame = 16
 5850              		@ frame_needed = 1, uses_anonymous_args = 0
 5851 0000 80B5     		push	{r7, lr}
 5852              	.LCFI132:
 5853              		.cfi_def_cfa_offset 8
 5854              		.cfi_offset 7, -8
 5855              		.cfi_offset 14, -4
 5856 0002 84B0     		sub	sp, sp, #16
 5857              	.LCFI133:
 5858              		.cfi_def_cfa_offset 24
 5859 0004 00AF     		add	r7, sp, #0
 5860              	.LCFI134:
 5861              		.cfi_def_cfa_register 7
 5862 0006 7860     		str	r0, [r7, #4]
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5863              		.loc 1 2443 23
 5864 0008 7B68     		ldr	r3, [r7, #4]
 5865 000a 5B6A     		ldr	r3, [r3, #36]
 5866 000c FB60     		str	r3, [r7, #12]
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 5867              		.loc 1 2445 3
 5868 000e FB68     		ldr	r3, [r7, #12]
 5869 0010 1800     		movs	r0, r3
 5870 0012 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5871              		.loc 1 2446 1
 5872 0016 C046     		nop
 5873 0018 BD46     		mov	sp, r7
 5874 001a 04B0     		add	sp, sp, #16
 5875              		@ sp needed
 5876 001c 80BD     		pop	{r7, pc}
 5877              		.cfi_endproc
 5878              	.LFE81:
 5880              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5881              		.align	1
 5882              		.syntax unified
 5883              		.code	16
 5884              		.thumb_func
 5885              		.fpu softvfp
 5887              	UART_DMAReceiveCplt:
 5888              	.LFB82:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 146


2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5889              		.loc 1 2454 1
 5890              		.cfi_startproc
 5891              		@ args = 0, pretend = 0, frame = 16
 5892              		@ frame_needed = 1, uses_anonymous_args = 0
 5893 0000 80B5     		push	{r7, lr}
 5894              	.LCFI135:
 5895              		.cfi_def_cfa_offset 8
 5896              		.cfi_offset 7, -8
 5897              		.cfi_offset 14, -4
 5898 0002 84B0     		sub	sp, sp, #16
 5899              	.LCFI136:
 5900              		.cfi_def_cfa_offset 24
 5901 0004 00AF     		add	r7, sp, #0
 5902              	.LCFI137:
 5903              		.cfi_def_cfa_register 7
 5904 0006 7860     		str	r0, [r7, #4]
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5905              		.loc 1 2455 23
 5906 0008 7B68     		ldr	r3, [r7, #4]
 5907 000a 5B6A     		ldr	r3, [r3, #36]
 5908 000c FB60     		str	r3, [r7, #12]
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5909              		.loc 1 2458 8
 5910 000e 7B68     		ldr	r3, [r7, #4]
 5911 0010 1B68     		ldr	r3, [r3]
 5912 0012 1B68     		ldr	r3, [r3]
 5913 0014 2022     		movs	r2, #32
 5914 0016 1340     		ands	r3, r2
 5915              		.loc 1 2458 6
 5916 0018 1FD1     		bne	.L293
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5917              		.loc 1 2460 24
 5918 001a FB68     		ldr	r3, [r7, #12]
 5919 001c 5A22     		movs	r2, #90
 5920 001e 0021     		movs	r1, #0
 5921 0020 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5922              		.loc 1 2463 5
 5923 0022 FB68     		ldr	r3, [r7, #12]
 5924 0024 1B68     		ldr	r3, [r3]
 5925 0026 1A68     		ldr	r2, [r3]
 5926 0028 FB68     		ldr	r3, [r7, #12]
 5927 002a 1B68     		ldr	r3, [r3]
 5928 002c 0F49     		ldr	r1, .L294
 5929 002e 0A40     		ands	r2, r1
 5930 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 147


2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5931              		.loc 1 2464 5
 5932 0032 FB68     		ldr	r3, [r7, #12]
 5933 0034 1B68     		ldr	r3, [r3]
 5934 0036 9A68     		ldr	r2, [r3, #8]
 5935 0038 FB68     		ldr	r3, [r7, #12]
 5936 003a 1B68     		ldr	r3, [r3]
 5937 003c 0121     		movs	r1, #1
 5938 003e 8A43     		bics	r2, r1
 5939 0040 9A60     		str	r2, [r3, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5940              		.loc 1 2468 5
 5941 0042 FB68     		ldr	r3, [r7, #12]
 5942 0044 1B68     		ldr	r3, [r3]
 5943 0046 9A68     		ldr	r2, [r3, #8]
 5944 0048 FB68     		ldr	r3, [r7, #12]
 5945 004a 1B68     		ldr	r3, [r3]
 5946 004c 4021     		movs	r1, #64
 5947 004e 8A43     		bics	r2, r1
 5948 0050 9A60     		str	r2, [r3, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5949              		.loc 1 2471 20
 5950 0052 FB68     		ldr	r3, [r7, #12]
 5951 0054 6A22     		movs	r2, #106
 5952 0056 2021     		movs	r1, #32
 5953 0058 9954     		strb	r1, [r3, r2]
 5954              	.L293:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 5955              		.loc 1 2474 3
 5956 005a FB68     		ldr	r3, [r7, #12]
 5957 005c 1800     		movs	r0, r3
 5958 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5959              		.loc 1 2475 1
 5960 0062 C046     		nop
 5961 0064 BD46     		mov	sp, r7
 5962 0066 04B0     		add	sp, sp, #16
 5963              		@ sp needed
 5964 0068 80BD     		pop	{r7, pc}
 5965              	.L295:
 5966 006a C046     		.align	2
 5967              	.L294:
 5968 006c FFFEFFFF 		.word	-257
 5969              		.cfi_endproc
 5970              	.LFE82:
 5972              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5973              		.align	1
 5974              		.syntax unified
 5975              		.code	16
 5976              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 148


 5977              		.fpu softvfp
 5979              	UART_DMARxHalfCplt:
 5980              	.LFB83:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5981              		.loc 1 2483 1
 5982              		.cfi_startproc
 5983              		@ args = 0, pretend = 0, frame = 16
 5984              		@ frame_needed = 1, uses_anonymous_args = 0
 5985 0000 80B5     		push	{r7, lr}
 5986              	.LCFI138:
 5987              		.cfi_def_cfa_offset 8
 5988              		.cfi_offset 7, -8
 5989              		.cfi_offset 14, -4
 5990 0002 84B0     		sub	sp, sp, #16
 5991              	.LCFI139:
 5992              		.cfi_def_cfa_offset 24
 5993 0004 00AF     		add	r7, sp, #0
 5994              	.LCFI140:
 5995              		.cfi_def_cfa_register 7
 5996 0006 7860     		str	r0, [r7, #4]
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5997              		.loc 1 2484 23
 5998 0008 7B68     		ldr	r3, [r7, #4]
 5999 000a 5B6A     		ldr	r3, [r3, #36]
 6000 000c FB60     		str	r3, [r7, #12]
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6001              		.loc 1 2486 3
 6002 000e FB68     		ldr	r3, [r7, #12]
 6003 0010 1800     		movs	r0, r3
 6004 0012 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6005              		.loc 1 2487 1
 6006 0016 C046     		nop
 6007 0018 BD46     		mov	sp, r7
 6008 001a 04B0     		add	sp, sp, #16
 6009              		@ sp needed
 6010 001c 80BD     		pop	{r7, pc}
 6011              		.cfi_endproc
 6012              	.LFE83:
 6014              		.section	.text.UART_DMAError,"ax",%progbits
 6015              		.align	1
 6016              		.syntax unified
 6017              		.code	16
 6018              		.thumb_func
 6019              		.fpu softvfp
 6021              	UART_DMAError:
 6022              	.LFB84:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 149


2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6023              		.loc 1 2495 1
 6024              		.cfi_startproc
 6025              		@ args = 0, pretend = 0, frame = 16
 6026              		@ frame_needed = 1, uses_anonymous_args = 0
 6027 0000 80B5     		push	{r7, lr}
 6028              	.LCFI141:
 6029              		.cfi_def_cfa_offset 8
 6030              		.cfi_offset 7, -8
 6031              		.cfi_offset 14, -4
 6032 0002 84B0     		sub	sp, sp, #16
 6033              	.LCFI142:
 6034              		.cfi_def_cfa_offset 24
 6035 0004 00AF     		add	r7, sp, #0
 6036              	.LCFI143:
 6037              		.cfi_def_cfa_register 7
 6038 0006 7860     		str	r0, [r7, #4]
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6039              		.loc 1 2496 23
 6040 0008 7B68     		ldr	r3, [r7, #4]
 6041 000a 5B6A     		ldr	r3, [r3, #36]
 6042 000c FB60     		str	r3, [r7, #12]
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 6043              		.loc 1 2499 15
 6044 000e FB68     		ldr	r3, [r7, #12]
 6045 0010 6922     		movs	r2, #105
 6046 0012 9B5C     		ldrb	r3, [r3, r2]
 6047 0014 DBB2     		uxtb	r3, r3
 6048              		.loc 1 2499 6
 6049 0016 212B     		cmp	r3, #33
 6050 0018 0DD1     		bne	.L298
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 6051              		.loc 1 2500 10
 6052 001a FB68     		ldr	r3, [r7, #12]
 6053 001c 1B68     		ldr	r3, [r3]
 6054 001e 9B68     		ldr	r3, [r3, #8]
 6055 0020 8022     		movs	r2, #128
 6056 0022 1340     		ands	r3, r2
 6057              		.loc 1 2500 7
 6058 0024 07D0     		beq	.L298
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6059              		.loc 1 2502 24
 6060 0026 FB68     		ldr	r3, [r7, #12]
 6061 0028 5222     		movs	r2, #82
 6062 002a 0021     		movs	r1, #0
 6063 002c 9952     		strh	r1, [r3, r2]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6064              		.loc 1 2503 5
 6065 002e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 150


 6066 0030 1800     		movs	r0, r3
 6067 0032 FFF7FEFF 		bl	UART_EndTxTransfer
 6068              	.L298:
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6069              		.loc 1 2507 15
 6070 0036 FB68     		ldr	r3, [r7, #12]
 6071 0038 6A22     		movs	r2, #106
 6072 003a 9B5C     		ldrb	r3, [r3, r2]
 6073 003c DBB2     		uxtb	r3, r3
 6074              		.loc 1 2507 6
 6075 003e 222B     		cmp	r3, #34
 6076 0040 0DD1     		bne	.L299
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 6077              		.loc 1 2508 10
 6078 0042 FB68     		ldr	r3, [r7, #12]
 6079 0044 1B68     		ldr	r3, [r3]
 6080 0046 9B68     		ldr	r3, [r3, #8]
 6081 0048 4022     		movs	r2, #64
 6082 004a 1340     		ands	r3, r2
 6083              		.loc 1 2508 7
 6084 004c 07D0     		beq	.L299
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6085              		.loc 1 2510 24
 6086 004e FB68     		ldr	r3, [r7, #12]
 6087 0050 5A22     		movs	r2, #90
 6088 0052 0021     		movs	r1, #0
 6089 0054 9952     		strh	r1, [r3, r2]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6090              		.loc 1 2511 5
 6091 0056 FB68     		ldr	r3, [r7, #12]
 6092 0058 1800     		movs	r0, r3
 6093 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6094              	.L299:
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6095              		.loc 1 2514 20
 6096 005e FB68     		ldr	r3, [r7, #12]
 6097 0060 DB6E     		ldr	r3, [r3, #108]
 6098 0062 1022     		movs	r2, #16
 6099 0064 1A43     		orrs	r2, r3
 6100 0066 FB68     		ldr	r3, [r7, #12]
 6101 0068 DA66     		str	r2, [r3, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6102              		.loc 1 2515 3
 6103 006a FB68     		ldr	r3, [r7, #12]
 6104 006c 1800     		movs	r0, r3
 6105 006e FFF7FEFF 		bl	HAL_UART_ErrorCallback
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6106              		.loc 1 2516 1
 6107 0072 C046     		nop
 6108 0074 BD46     		mov	sp, r7
 6109 0076 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 151


 6110              		@ sp needed
 6111 0078 80BD     		pop	{r7, pc}
 6112              		.cfi_endproc
 6113              	.LFE84:
 6115              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6116              		.align	1
 6117              		.syntax unified
 6118              		.code	16
 6119              		.thumb_func
 6120              		.fpu softvfp
 6122              	UART_DMAAbortOnError:
 6123              	.LFB85:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6124              		.loc 1 2525 1
 6125              		.cfi_startproc
 6126              		@ args = 0, pretend = 0, frame = 16
 6127              		@ frame_needed = 1, uses_anonymous_args = 0
 6128 0000 80B5     		push	{r7, lr}
 6129              	.LCFI144:
 6130              		.cfi_def_cfa_offset 8
 6131              		.cfi_offset 7, -8
 6132              		.cfi_offset 14, -4
 6133 0002 84B0     		sub	sp, sp, #16
 6134              	.LCFI145:
 6135              		.cfi_def_cfa_offset 24
 6136 0004 00AF     		add	r7, sp, #0
 6137              	.LCFI146:
 6138              		.cfi_def_cfa_register 7
 6139 0006 7860     		str	r0, [r7, #4]
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6140              		.loc 1 2526 23
 6141 0008 7B68     		ldr	r3, [r7, #4]
 6142 000a 5B6A     		ldr	r3, [r3, #36]
 6143 000c FB60     		str	r3, [r7, #12]
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6144              		.loc 1 2527 22
 6145 000e FB68     		ldr	r3, [r7, #12]
 6146 0010 5A22     		movs	r2, #90
 6147 0012 0021     		movs	r1, #0
 6148 0014 9952     		strh	r1, [r3, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6149              		.loc 1 2528 22
 6150 0016 FB68     		ldr	r3, [r7, #12]
 6151 0018 5222     		movs	r2, #82
 6152 001a 0021     		movs	r1, #0
 6153 001c 9952     		strh	r1, [r3, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6154              		.loc 1 2530 3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 152


 6155 001e FB68     		ldr	r3, [r7, #12]
 6156 0020 1800     		movs	r0, r3
 6157 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6158              		.loc 1 2531 1
 6159 0026 C046     		nop
 6160 0028 BD46     		mov	sp, r7
 6161 002a 04B0     		add	sp, sp, #16
 6162              		@ sp needed
 6163 002c 80BD     		pop	{r7, pc}
 6164              		.cfi_endproc
 6165              	.LFE85:
 6167              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6168              		.align	1
 6169              		.syntax unified
 6170              		.code	16
 6171              		.thumb_func
 6172              		.fpu softvfp
 6174              	UART_DMATxAbortCallback:
 6175              	.LFB86:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6176              		.loc 1 2542 1
 6177              		.cfi_startproc
 6178              		@ args = 0, pretend = 0, frame = 16
 6179              		@ frame_needed = 1, uses_anonymous_args = 0
 6180 0000 80B5     		push	{r7, lr}
 6181              	.LCFI147:
 6182              		.cfi_def_cfa_offset 8
 6183              		.cfi_offset 7, -8
 6184              		.cfi_offset 14, -4
 6185 0002 84B0     		sub	sp, sp, #16
 6186              	.LCFI148:
 6187              		.cfi_def_cfa_offset 24
 6188 0004 00AF     		add	r7, sp, #0
 6189              	.LCFI149:
 6190              		.cfi_def_cfa_register 7
 6191 0006 7860     		str	r0, [r7, #4]
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 6192              		.loc 1 2543 23
 6193 0008 7B68     		ldr	r3, [r7, #4]
 6194 000a 5B6A     		ldr	r3, [r3, #36]
 6195 000c FB60     		str	r3, [r7, #12]
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6196              		.loc 1 2545 8
 6197 000e FB68     		ldr	r3, [r7, #12]
 6198 0010 1B6E     		ldr	r3, [r3, #96]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 153


 6199              		.loc 1 2545 36
 6200 0012 0022     		movs	r2, #0
 6201 0014 5A63     		str	r2, [r3, #52]
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 6202              		.loc 1 2548 11
 6203 0016 FB68     		ldr	r3, [r7, #12]
 6204 0018 5B6E     		ldr	r3, [r3, #100]
 6205              		.loc 1 2548 5
 6206 001a 002B     		cmp	r3, #0
 6207 001c 04D0     		beq	.L302
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
 6208              		.loc 1 2550 13
 6209 001e FB68     		ldr	r3, [r7, #12]
 6210 0020 5B6E     		ldr	r3, [r3, #100]
 6211              		.loc 1 2550 21
 6212 0022 5B6B     		ldr	r3, [r3, #52]
 6213              		.loc 1 2550 7
 6214 0024 002B     		cmp	r3, #0
 6215 0026 1BD1     		bne	.L304
 6216              	.L302:
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6217              		.loc 1 2557 22
 6218 0028 FB68     		ldr	r3, [r7, #12]
 6219 002a 5222     		movs	r2, #82
 6220 002c 0021     		movs	r1, #0
 6221 002e 9952     		strh	r1, [r3, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6222              		.loc 1 2558 22
 6223 0030 FB68     		ldr	r3, [r7, #12]
 6224 0032 5A22     		movs	r2, #90
 6225 0034 0021     		movs	r1, #0
 6226 0036 9952     		strh	r1, [r3, r2]
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6227              		.loc 1 2561 20
 6228 0038 FB68     		ldr	r3, [r7, #12]
 6229 003a 0022     		movs	r2, #0
 6230 003c DA66     		str	r2, [r3, #108]
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6231              		.loc 1 2564 3
 6232 003e FB68     		ldr	r3, [r7, #12]
 6233 0040 1B68     		ldr	r3, [r3]
 6234 0042 0F22     		movs	r2, #15
 6235 0044 1A62     		str	r2, [r3, #32]
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 154


2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6236              		.loc 1 2567 18
 6237 0046 FB68     		ldr	r3, [r7, #12]
 6238 0048 6922     		movs	r2, #105
 6239 004a 2021     		movs	r1, #32
 6240 004c 9954     		strb	r1, [r3, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6241              		.loc 1 2568 18
 6242 004e FB68     		ldr	r3, [r7, #12]
 6243 0050 6A22     		movs	r2, #106
 6244 0052 2021     		movs	r1, #32
 6245 0054 9954     		strb	r1, [r3, r2]
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6246              		.loc 1 2571 3
 6247 0056 FB68     		ldr	r3, [r7, #12]
 6248 0058 1800     		movs	r0, r3
 6249 005a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6250 005e 00E0     		b	.L301
 6251              	.L304:
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6252              		.loc 1 2552 7
 6253 0060 C046     		nop
 6254              	.L301:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6255              		.loc 1 2572 1
 6256 0062 BD46     		mov	sp, r7
 6257 0064 04B0     		add	sp, sp, #16
 6258              		@ sp needed
 6259 0066 80BD     		pop	{r7, pc}
 6260              		.cfi_endproc
 6261              	.LFE86:
 6263              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6264              		.align	1
 6265              		.syntax unified
 6266              		.code	16
 6267              		.thumb_func
 6268              		.fpu softvfp
 6270              	UART_DMARxAbortCallback:
 6271              	.LFB87:
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6272              		.loc 1 2584 1
 6273              		.cfi_startproc
 6274              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 155


 6275              		@ frame_needed = 1, uses_anonymous_args = 0
 6276 0000 80B5     		push	{r7, lr}
 6277              	.LCFI150:
 6278              		.cfi_def_cfa_offset 8
 6279              		.cfi_offset 7, -8
 6280              		.cfi_offset 14, -4
 6281 0002 84B0     		sub	sp, sp, #16
 6282              	.LCFI151:
 6283              		.cfi_def_cfa_offset 24
 6284 0004 00AF     		add	r7, sp, #0
 6285              	.LCFI152:
 6286              		.cfi_def_cfa_register 7
 6287 0006 7860     		str	r0, [r7, #4]
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 6288              		.loc 1 2585 23
 6289 0008 7B68     		ldr	r3, [r7, #4]
 6290 000a 5B6A     		ldr	r3, [r3, #36]
 6291 000c FB60     		str	r3, [r7, #12]
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6292              		.loc 1 2587 8
 6293 000e FB68     		ldr	r3, [r7, #12]
 6294 0010 5B6E     		ldr	r3, [r3, #100]
 6295              		.loc 1 2587 36
 6296 0012 0022     		movs	r2, #0
 6297 0014 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 6298              		.loc 1 2590 11
 6299 0016 FB68     		ldr	r3, [r7, #12]
 6300 0018 1B6E     		ldr	r3, [r3, #96]
 6301              		.loc 1 2590 5
 6302 001a 002B     		cmp	r3, #0
 6303 001c 04D0     		beq	.L306
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 6304              		.loc 1 2592 13
 6305 001e FB68     		ldr	r3, [r7, #12]
 6306 0020 1B6E     		ldr	r3, [r3, #96]
 6307              		.loc 1 2592 21
 6308 0022 5B6B     		ldr	r3, [r3, #52]
 6309              		.loc 1 2592 7
 6310 0024 002B     		cmp	r3, #0
 6311 0026 1BD1     		bne	.L308
 6312              	.L306:
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6313              		.loc 1 2599 22
 6314 0028 FB68     		ldr	r3, [r7, #12]
 6315 002a 5222     		movs	r2, #82
 6316 002c 0021     		movs	r1, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 156


 6317 002e 9952     		strh	r1, [r3, r2]
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6318              		.loc 1 2600 22
 6319 0030 FB68     		ldr	r3, [r7, #12]
 6320 0032 5A22     		movs	r2, #90
 6321 0034 0021     		movs	r1, #0
 6322 0036 9952     		strh	r1, [r3, r2]
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6323              		.loc 1 2603 20
 6324 0038 FB68     		ldr	r3, [r7, #12]
 6325 003a 0022     		movs	r2, #0
 6326 003c DA66     		str	r2, [r3, #108]
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6327              		.loc 1 2606 3
 6328 003e FB68     		ldr	r3, [r7, #12]
 6329 0040 1B68     		ldr	r3, [r3]
 6330 0042 0F22     		movs	r2, #15
 6331 0044 1A62     		str	r2, [r3, #32]
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6332              		.loc 1 2609 18
 6333 0046 FB68     		ldr	r3, [r7, #12]
 6334 0048 6922     		movs	r2, #105
 6335 004a 2021     		movs	r1, #32
 6336 004c 9954     		strb	r1, [r3, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6337              		.loc 1 2610 18
 6338 004e FB68     		ldr	r3, [r7, #12]
 6339 0050 6A22     		movs	r2, #106
 6340 0052 2021     		movs	r1, #32
 6341 0054 9954     		strb	r1, [r3, r2]
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6342              		.loc 1 2613 3
 6343 0056 FB68     		ldr	r3, [r7, #12]
 6344 0058 1800     		movs	r0, r3
 6345 005a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6346 005e 00E0     		b	.L305
 6347              	.L308:
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6348              		.loc 1 2594 7
 6349 0060 C046     		nop
 6350              	.L305:
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6351              		.loc 1 2614 1
 6352 0062 BD46     		mov	sp, r7
 6353 0064 04B0     		add	sp, sp, #16
 6354              		@ sp needed
 6355 0066 80BD     		pop	{r7, pc}
 6356              		.cfi_endproc
 6357              	.LFE87:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 157


 6359              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6360              		.align	1
 6361              		.syntax unified
 6362              		.code	16
 6363              		.thumb_func
 6364              		.fpu softvfp
 6366              	UART_DMATxOnlyAbortCallback:
 6367              	.LFB88:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6368              		.loc 1 2626 1
 6369              		.cfi_startproc
 6370              		@ args = 0, pretend = 0, frame = 16
 6371              		@ frame_needed = 1, uses_anonymous_args = 0
 6372 0000 80B5     		push	{r7, lr}
 6373              	.LCFI153:
 6374              		.cfi_def_cfa_offset 8
 6375              		.cfi_offset 7, -8
 6376              		.cfi_offset 14, -4
 6377 0002 84B0     		sub	sp, sp, #16
 6378              	.LCFI154:
 6379              		.cfi_def_cfa_offset 24
 6380 0004 00AF     		add	r7, sp, #0
 6381              	.LCFI155:
 6382              		.cfi_def_cfa_register 7
 6383 0006 7860     		str	r0, [r7, #4]
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6384              		.loc 1 2627 23
 6385 0008 7B68     		ldr	r3, [r7, #4]
 6386 000a 5B6A     		ldr	r3, [r3, #36]
 6387 000c FB60     		str	r3, [r7, #12]
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6388              		.loc 1 2629 22
 6389 000e FB68     		ldr	r3, [r7, #12]
 6390 0010 5222     		movs	r2, #82
 6391 0012 0021     		movs	r1, #0
 6392 0014 9952     		strh	r1, [r3, r2]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6393              		.loc 1 2632 17
 6394 0016 FB68     		ldr	r3, [r7, #12]
 6395 0018 6922     		movs	r2, #105
 6396 001a 2021     		movs	r1, #32
 6397 001c 9954     		strb	r1, [r3, r2]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 158


2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 6398              		.loc 1 2635 3
 6399 001e FB68     		ldr	r3, [r7, #12]
 6400 0020 1800     		movs	r0, r3
 6401 0022 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6402              		.loc 1 2636 1
 6403 0026 C046     		nop
 6404 0028 BD46     		mov	sp, r7
 6405 002a 04B0     		add	sp, sp, #16
 6406              		@ sp needed
 6407 002c 80BD     		pop	{r7, pc}
 6408              		.cfi_endproc
 6409              	.LFE88:
 6411              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 6412              		.align	1
 6413              		.syntax unified
 6414              		.code	16
 6415              		.thumb_func
 6416              		.fpu softvfp
 6418              	UART_DMARxOnlyAbortCallback:
 6419              	.LFB89:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6420              		.loc 1 2647 1
 6421              		.cfi_startproc
 6422              		@ args = 0, pretend = 0, frame = 16
 6423              		@ frame_needed = 1, uses_anonymous_args = 0
 6424 0000 80B5     		push	{r7, lr}
 6425              	.LCFI156:
 6426              		.cfi_def_cfa_offset 8
 6427              		.cfi_offset 7, -8
 6428              		.cfi_offset 14, -4
 6429 0002 84B0     		sub	sp, sp, #16
 6430              	.LCFI157:
 6431              		.cfi_def_cfa_offset 24
 6432 0004 00AF     		add	r7, sp, #0
 6433              	.LCFI158:
 6434              		.cfi_def_cfa_register 7
 6435 0006 7860     		str	r0, [r7, #4]
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 6436              		.loc 1 2648 23
 6437 0008 7B68     		ldr	r3, [r7, #4]
 6438 000a 5B6A     		ldr	r3, [r3, #36]
 6439 000c FB60     		str	r3, [r7, #12]
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 159


 6440              		.loc 1 2650 22
 6441 000e FB68     		ldr	r3, [r7, #12]
 6442 0010 5A22     		movs	r2, #90
 6443 0012 0021     		movs	r1, #0
 6444 0014 9952     		strh	r1, [r3, r2]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6445              		.loc 1 2653 3
 6446 0016 FB68     		ldr	r3, [r7, #12]
 6447 0018 1B68     		ldr	r3, [r3]
 6448 001a 0F22     		movs	r2, #15
 6449 001c 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6450              		.loc 1 2656 18
 6451 001e FB68     		ldr	r3, [r7, #12]
 6452 0020 6A22     		movs	r2, #106
 6453 0022 2021     		movs	r1, #32
 6454 0024 9954     		strb	r1, [r3, r2]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 6455              		.loc 1 2659 3
 6456 0026 FB68     		ldr	r3, [r7, #12]
 6457 0028 1800     		movs	r0, r3
 6458 002a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6459              		.loc 1 2660 1
 6460 002e C046     		nop
 6461 0030 BD46     		mov	sp, r7
 6462 0032 04B0     		add	sp, sp, #16
 6463              		@ sp needed
 6464 0034 80BD     		pop	{r7, pc}
 6465              		.cfi_endproc
 6466              	.LFE89:
 6468              		.section	.text.UART_Transmit_IT,"ax",%progbits
 6469              		.align	1
 6470              		.global	UART_Transmit_IT
 6471              		.syntax unified
 6472              		.code	16
 6473              		.thumb_func
 6474              		.fpu softvfp
 6476              	UART_Transmit_IT:
 6477              	.LFB90:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6478              		.loc 1 2670 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 160


 6479              		.cfi_startproc
 6480              		@ args = 0, pretend = 0, frame = 16
 6481              		@ frame_needed = 1, uses_anonymous_args = 0
 6482 0000 80B5     		push	{r7, lr}
 6483              	.LCFI159:
 6484              		.cfi_def_cfa_offset 8
 6485              		.cfi_offset 7, -8
 6486              		.cfi_offset 14, -4
 6487 0002 84B0     		sub	sp, sp, #16
 6488              	.LCFI160:
 6489              		.cfi_def_cfa_offset 24
 6490 0004 00AF     		add	r7, sp, #0
 6491              	.LCFI161:
 6492              		.cfi_def_cfa_register 7
 6493 0006 7860     		str	r0, [r7, #4]
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 6494              		.loc 1 2674 12
 6495 0008 7B68     		ldr	r3, [r7, #4]
 6496 000a 6922     		movs	r2, #105
 6497 000c 9B5C     		ldrb	r3, [r3, r2]
 6498 000e DBB2     		uxtb	r3, r3
 6499              		.loc 1 2674 6
 6500 0010 212B     		cmp	r3, #33
 6501 0012 47D1     		bne	.L312
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 6502              		.loc 1 2676 13
 6503 0014 7B68     		ldr	r3, [r7, #4]
 6504 0016 5222     		movs	r2, #82
 6505 0018 9B5A     		ldrh	r3, [r3, r2]
 6506 001a 9BB2     		uxth	r3, r3
 6507              		.loc 1 2676 7
 6508 001c 002B     		cmp	r3, #0
 6509 001e 11D1     		bne	.L313
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 6510              		.loc 1 2679 7
 6511 0020 7B68     		ldr	r3, [r7, #4]
 6512 0022 1B68     		ldr	r3, [r3]
 6513 0024 1A68     		ldr	r2, [r3]
 6514 0026 7B68     		ldr	r3, [r7, #4]
 6515 0028 1B68     		ldr	r3, [r3]
 6516 002a 8021     		movs	r1, #128
 6517 002c 8A43     		bics	r2, r1
 6518 002e 1A60     		str	r2, [r3]
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6519              		.loc 1 2682 7
 6520 0030 7B68     		ldr	r3, [r7, #4]
 6521 0032 1B68     		ldr	r3, [r3]
 6522 0034 1A68     		ldr	r2, [r3]
 6523 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 161


 6524 0038 1B68     		ldr	r3, [r3]
 6525 003a 4021     		movs	r1, #64
 6526 003c 0A43     		orrs	r2, r1
 6527 003e 1A60     		str	r2, [r3]
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 6528              		.loc 1 2684 14
 6529 0040 0023     		movs	r3, #0
 6530 0042 30E0     		b	.L314
 6531              	.L313:
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 6532              		.loc 1 2688 23
 6533 0044 7B68     		ldr	r3, [r7, #4]
 6534 0046 9A68     		ldr	r2, [r3, #8]
 6535              		.loc 1 2688 10
 6536 0048 8023     		movs	r3, #128
 6537 004a 5B01     		lsls	r3, r3, #5
 6538 004c 9A42     		cmp	r2, r3
 6539 004e 14D1     		bne	.L315
 6540              		.loc 1 2688 73 discriminator 1
 6541 0050 7B68     		ldr	r3, [r7, #4]
 6542 0052 1B69     		ldr	r3, [r3, #16]
 6543              		.loc 1 2688 58 discriminator 1
 6544 0054 002B     		cmp	r3, #0
 6545 0056 10D1     		bne	.L315
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 6546              		.loc 1 2690 13
 6547 0058 7B68     		ldr	r3, [r7, #4]
 6548 005a DB6C     		ldr	r3, [r3, #76]
 6549 005c FB60     		str	r3, [r7, #12]
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 6550              		.loc 1 2691 38
 6551 005e FB68     		ldr	r3, [r7, #12]
 6552 0060 1A88     		ldrh	r2, [r3]
 6553              		.loc 1 2691 14
 6554 0062 7B68     		ldr	r3, [r7, #4]
 6555 0064 1B68     		ldr	r3, [r3]
 6556              		.loc 1 2691 38
 6557 0066 D205     		lsls	r2, r2, #23
 6558 0068 D20D     		lsrs	r2, r2, #23
 6559 006a 92B2     		uxth	r2, r2
 6560              		.loc 1 2691 30
 6561 006c 1A85     		strh	r2, [r3, #40]
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 6562              		.loc 1 2692 27
 6563 006e 7B68     		ldr	r3, [r7, #4]
 6564 0070 DB6C     		ldr	r3, [r3, #76]
 6565 0072 9A1C     		adds	r2, r3, #2
 6566 0074 7B68     		ldr	r3, [r7, #4]
 6567 0076 DA64     		str	r2, [r3, #76]
 6568 0078 09E0     		b	.L316
 6569              	.L315:
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 162


2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 6570              		.loc 1 2696 48
 6571 007a 7B68     		ldr	r3, [r7, #4]
 6572 007c DB6C     		ldr	r3, [r3, #76]
 6573              		.loc 1 2696 60
 6574 007e 591C     		adds	r1, r3, #1
 6575 0080 7A68     		ldr	r2, [r7, #4]
 6576 0082 D164     		str	r1, [r2, #76]
 6577              		.loc 1 2696 42
 6578 0084 1A78     		ldrb	r2, [r3]
 6579              		.loc 1 2696 14
 6580 0086 7B68     		ldr	r3, [r7, #4]
 6581 0088 1B68     		ldr	r3, [r3]
 6582              		.loc 1 2696 32
 6583 008a 92B2     		uxth	r2, r2
 6584              		.loc 1 2696 30
 6585 008c 1A85     		strh	r2, [r3, #40]
 6586              	.L316:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 6587              		.loc 1 2698 12
 6588 008e 7B68     		ldr	r3, [r7, #4]
 6589 0090 5222     		movs	r2, #82
 6590 0092 9B5A     		ldrh	r3, [r3, r2]
 6591 0094 9BB2     		uxth	r3, r3
 6592              		.loc 1 2698 25
 6593 0096 013B     		subs	r3, r3, #1
 6594 0098 99B2     		uxth	r1, r3
 6595 009a 7B68     		ldr	r3, [r7, #4]
 6596 009c 5222     		movs	r2, #82
 6597 009e 9952     		strh	r1, [r3, r2]
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 6598              		.loc 1 2700 14
 6599 00a0 0023     		movs	r3, #0
 6600 00a2 00E0     		b	.L314
 6601              	.L312:
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 6602              		.loc 1 2705 12
 6603 00a4 0223     		movs	r3, #2
 6604              	.L314:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6605              		.loc 1 2707 1
 6606 00a6 1800     		movs	r0, r3
 6607 00a8 BD46     		mov	sp, r7
 6608 00aa 04B0     		add	sp, sp, #16
 6609              		@ sp needed
 6610 00ac 80BD     		pop	{r7, pc}
 6611              		.cfi_endproc
 6612              	.LFE90:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 163


 6614              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6615              		.align	1
 6616              		.global	UART_EndTransmit_IT
 6617              		.syntax unified
 6618              		.code	16
 6619              		.thumb_func
 6620              		.fpu softvfp
 6622              	UART_EndTransmit_IT:
 6623              	.LFB91:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6624              		.loc 1 2716 1
 6625              		.cfi_startproc
 6626              		@ args = 0, pretend = 0, frame = 8
 6627              		@ frame_needed = 1, uses_anonymous_args = 0
 6628 0000 80B5     		push	{r7, lr}
 6629              	.LCFI162:
 6630              		.cfi_def_cfa_offset 8
 6631              		.cfi_offset 7, -8
 6632              		.cfi_offset 14, -4
 6633 0002 82B0     		sub	sp, sp, #8
 6634              	.LCFI163:
 6635              		.cfi_def_cfa_offset 16
 6636 0004 00AF     		add	r7, sp, #0
 6637              	.LCFI164:
 6638              		.cfi_def_cfa_register 7
 6639 0006 7860     		str	r0, [r7, #4]
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6640              		.loc 1 2718 3
 6641 0008 7B68     		ldr	r3, [r7, #4]
 6642 000a 1B68     		ldr	r3, [r3]
 6643 000c 1A68     		ldr	r2, [r3]
 6644 000e 7B68     		ldr	r3, [r7, #4]
 6645 0010 1B68     		ldr	r3, [r3]
 6646 0012 4021     		movs	r1, #64
 6647 0014 8A43     		bics	r2, r1
 6648 0016 1A60     		str	r2, [r3]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6649              		.loc 1 2721 17
 6650 0018 7B68     		ldr	r3, [r7, #4]
 6651 001a 6922     		movs	r2, #105
 6652 001c 2021     		movs	r1, #32
 6653 001e 9954     		strb	r1, [r3, r2]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 6654              		.loc 1 2723 3
 6655 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 164


 6656 0022 1800     		movs	r0, r3
 6657 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 6658              		.loc 1 2725 10
 6659 0028 0023     		movs	r3, #0
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6660              		.loc 1 2726 1
 6661 002a 1800     		movs	r0, r3
 6662 002c BD46     		mov	sp, r7
 6663 002e 02B0     		add	sp, sp, #8
 6664              		@ sp needed
 6665 0030 80BD     		pop	{r7, pc}
 6666              		.cfi_endproc
 6667              	.LFE91:
 6669              		.section	.text.UART_Receive_IT,"ax",%progbits
 6670              		.align	1
 6671              		.global	UART_Receive_IT
 6672              		.syntax unified
 6673              		.code	16
 6674              		.thumb_func
 6675              		.fpu softvfp
 6677              	UART_Receive_IT:
 6678              	.LFB92:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6679              		.loc 1 2736 1
 6680              		.cfi_startproc
 6681              		@ args = 0, pretend = 0, frame = 16
 6682              		@ frame_needed = 1, uses_anonymous_args = 0
 6683 0000 90B5     		push	{r4, r7, lr}
 6684              	.LCFI165:
 6685              		.cfi_def_cfa_offset 12
 6686              		.cfi_offset 4, -12
 6687              		.cfi_offset 7, -8
 6688              		.cfi_offset 14, -4
 6689 0002 85B0     		sub	sp, sp, #20
 6690              	.LCFI166:
 6691              		.cfi_def_cfa_offset 32
 6692 0004 00AF     		add	r7, sp, #0
 6693              	.LCFI167:
 6694              		.cfi_def_cfa_register 7
 6695 0006 7860     		str	r0, [r7, #4]
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 6696              		.loc 1 2738 13
 6697 0008 0E20     		movs	r0, #14
 6698 000a 3B18     		adds	r3, r7, r0
 6699 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 165


 6700 000e 5C21     		movs	r1, #92
 6701 0010 525A     		ldrh	r2, [r2, r1]
 6702 0012 1A80     		strh	r2, [r3]
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 6703              		.loc 1 2742 11
 6704 0014 7B68     		ldr	r3, [r7, #4]
 6705 0016 6A22     		movs	r2, #106
 6706 0018 9B5C     		ldrb	r3, [r3, r2]
 6707 001a DBB2     		uxtb	r3, r3
 6708              		.loc 1 2742 5
 6709 001c 222B     		cmp	r3, #34
 6710 001e 59D1     		bne	.L320
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 6711              		.loc 1 2744 25
 6712 0020 7B68     		ldr	r3, [r7, #4]
 6713 0022 1A68     		ldr	r2, [r3]
 6714              		.loc 1 2744 12
 6715 0024 0C21     		movs	r1, #12
 6716 0026 7B18     		adds	r3, r7, r1
 6717 0028 928C     		ldrh	r2, [r2, #36]
 6718 002a 1A80     		strh	r2, [r3]
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 6719              		.loc 1 2745 21
 6720 002c 7B68     		ldr	r3, [r7, #4]
 6721 002e 9A68     		ldr	r2, [r3, #8]
 6722              		.loc 1 2745 8
 6723 0030 8023     		movs	r3, #128
 6724 0032 5B01     		lsls	r3, r3, #5
 6725 0034 9A42     		cmp	r2, r3
 6726 0036 14D1     		bne	.L321
 6727              		.loc 1 2745 71 discriminator 1
 6728 0038 7B68     		ldr	r3, [r7, #4]
 6729 003a 1B69     		ldr	r3, [r3, #16]
 6730              		.loc 1 2745 56 discriminator 1
 6731 003c 002B     		cmp	r3, #0
 6732 003e 10D1     		bne	.L321
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 6733              		.loc 1 2747 11
 6734 0040 7B68     		ldr	r3, [r7, #4]
 6735 0042 5B6D     		ldr	r3, [r3, #84]
 6736 0044 BB60     		str	r3, [r7, #8]
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 6737              		.loc 1 2748 14
 6738 0046 7B18     		adds	r3, r7, r1
 6739 0048 3A18     		adds	r2, r7, r0
 6740 004a 1B88     		ldrh	r3, [r3]
 6741 004c 1288     		ldrh	r2, [r2]
 6742 004e 1340     		ands	r3, r2
 6743 0050 9AB2     		uxth	r2, r3
 6744              		.loc 1 2748 12
 6745 0052 BB68     		ldr	r3, [r7, #8]
 6746 0054 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 166


2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 6747              		.loc 1 2749 25
 6748 0056 7B68     		ldr	r3, [r7, #4]
 6749 0058 5B6D     		ldr	r3, [r3, #84]
 6750 005a 9A1C     		adds	r2, r3, #2
 6751 005c 7B68     		ldr	r3, [r7, #4]
 6752 005e 5A65     		str	r2, [r3, #84]
 6753 0060 10E0     		b	.L322
 6754              	.L321:
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 6755              		.loc 1 2753 30
 6756 0062 0C23     		movs	r3, #12
 6757 0064 FB18     		adds	r3, r7, r3
 6758 0066 1B88     		ldrh	r3, [r3]
 6759 0068 D9B2     		uxtb	r1, r3
 6760              		.loc 1 2753 49
 6761 006a 0E23     		movs	r3, #14
 6762 006c FB18     		adds	r3, r7, r3
 6763 006e 1B88     		ldrh	r3, [r3]
 6764 0070 D8B2     		uxtb	r0, r3
 6765              		.loc 1 2753 13
 6766 0072 7B68     		ldr	r3, [r7, #4]
 6767 0074 5B6D     		ldr	r3, [r3, #84]
 6768              		.loc 1 2753 25
 6769 0076 5C1C     		adds	r4, r3, #1
 6770 0078 7A68     		ldr	r2, [r7, #4]
 6771 007a 5465     		str	r4, [r2, #84]
 6772              		.loc 1 2753 30
 6773 007c 0200     		movs	r2, r0
 6774 007e 0A40     		ands	r2, r1
 6775 0080 D2B2     		uxtb	r2, r2
 6776              		.loc 1 2753 28
 6777 0082 1A70     		strb	r2, [r3]
 6778              	.L322:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 6779              		.loc 1 2756 15
 6780 0084 7B68     		ldr	r3, [r7, #4]
 6781 0086 5A22     		movs	r2, #90
 6782 0088 9B5A     		ldrh	r3, [r3, r2]
 6783 008a 9BB2     		uxth	r3, r3
 6784              		.loc 1 2756 8
 6785 008c 013B     		subs	r3, r3, #1
 6786 008e 9BB2     		uxth	r3, r3
 6787              		.loc 1 2756 7
 6788 0090 7A68     		ldr	r2, [r7, #4]
 6789 0092 5A21     		movs	r1, #90
 6790 0094 181C     		adds	r0, r3, #0
 6791 0096 5052     		strh	r0, [r2, r1]
 6792 0098 002B     		cmp	r3, #0
 6793 009a 19D1     		bne	.L323
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 167


2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6794              		.loc 1 2759 7
 6795 009c 7B68     		ldr	r3, [r7, #4]
 6796 009e 1B68     		ldr	r3, [r3]
 6797 00a0 1A68     		ldr	r2, [r3]
 6798 00a2 7B68     		ldr	r3, [r7, #4]
 6799 00a4 1B68     		ldr	r3, [r3]
 6800 00a6 1249     		ldr	r1, .L325
 6801 00a8 0A40     		ands	r2, r1
 6802 00aa 1A60     		str	r2, [r3]
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6803              		.loc 1 2762 7
 6804 00ac 7B68     		ldr	r3, [r7, #4]
 6805 00ae 1B68     		ldr	r3, [r3]
 6806 00b0 9A68     		ldr	r2, [r3, #8]
 6807 00b2 7B68     		ldr	r3, [r7, #4]
 6808 00b4 1B68     		ldr	r3, [r3]
 6809 00b6 0121     		movs	r1, #1
 6810 00b8 8A43     		bics	r2, r1
 6811 00ba 9A60     		str	r2, [r3, #8]
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6812              		.loc 1 2765 22
 6813 00bc 7B68     		ldr	r3, [r7, #4]
 6814 00be 6A22     		movs	r2, #106
 6815 00c0 2021     		movs	r1, #32
 6816 00c2 9954     		strb	r1, [r3, r2]
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 6817              		.loc 1 2767 7
 6818 00c4 7B68     		ldr	r3, [r7, #4]
 6819 00c6 1800     		movs	r0, r3
 6820 00c8 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 6821              		.loc 1 2769 14
 6822 00cc 0023     		movs	r3, #0
 6823 00ce 0AE0     		b	.L324
 6824              	.L323:
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 6825              		.loc 1 2772 12
 6826 00d0 0023     		movs	r3, #0
 6827 00d2 08E0     		b	.L324
 6828              	.L320:
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6829              		.loc 1 2777 5
 6830 00d4 7B68     		ldr	r3, [r7, #4]
 6831 00d6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 168


 6832 00d8 9A69     		ldr	r2, [r3, #24]
 6833 00da 7B68     		ldr	r3, [r7, #4]
 6834 00dc 1B68     		ldr	r3, [r3]
 6835 00de 0821     		movs	r1, #8
 6836 00e0 0A43     		orrs	r2, r1
 6837 00e2 9A61     		str	r2, [r3, #24]
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 6838              		.loc 1 2779 12
 6839 00e4 0223     		movs	r3, #2
 6840              	.L324:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6841              		.loc 1 2781 1
 6842 00e6 1800     		movs	r0, r3
 6843 00e8 BD46     		mov	sp, r7
 6844 00ea 05B0     		add	sp, sp, #20
 6845              		@ sp needed
 6846 00ec 90BD     		pop	{r4, r7, pc}
 6847              	.L326:
 6848 00ee C046     		.align	2
 6849              	.L325:
 6850 00f0 DFFEFFFF 		.word	-289
 6851              		.cfi_endproc
 6852              	.LFE92:
 6854              		.text
 6855              	.Letext0:
 6856              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6857              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6858              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 6859              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 6860              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 6861              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6862              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6863              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 6864              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6865              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 6866              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 6867              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 169


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:16     .text.HAL_UART_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:24     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:579    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4458   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5155   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5391   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:148    .text.HAL_UART_Init:000000ac $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:153    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:160    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:292    .text.HAL_HalfDuplex_Init:000000bc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:297    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:304    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:465    .text.HAL_MultiProcessor_Init:000000f0 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:471    .text.HAL_UART_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:478    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:614    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:572    .text.HAL_UART_MspInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:607    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:642    .text.HAL_UART_Transmit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:649    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5536   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:893    .text.HAL_UART_Receive:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:900    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1221   .text.HAL_UART_Receive:000001c0 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1226   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1233   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1372   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1379   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1604   .text.HAL_UART_Receive_IT:00000138 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1609   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1616   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1801   .text.HAL_UART_Transmit_DMA:000000f4 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5768   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5845   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6021   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1808   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:1815   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2010   .text.HAL_UART_Receive_DMA:00000104 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5887   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5979   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2017   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2024   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2144   .text.HAL_UART_DMAPause:000000a0 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2149   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2156   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2267   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2274   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5659   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5707   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2388   .text.HAL_UART_Abort:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2395   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2541   .text.HAL_UART_Abort:000000cc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2546   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2553   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2637   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 170


C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2644   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2741   .text.HAL_UART_AbortReceive:00000080 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2746   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2753   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3881   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2988   .text.HAL_UART_Abort_IT:00000144 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6174   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6270   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:2995   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3002   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3916   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3122   .text.HAL_UART_AbortTransmit_IT:000000a0 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6366   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3127   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3134   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3951   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3273   .text.HAL_UART_AbortReceive_IT:000000c0 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6418   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3279   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3286   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6677   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3846   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6476   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6622   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3694   .text.HAL_UART_IRQHandler:00000224 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6122   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3699   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3706   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3734   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3741   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3769   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3776   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3804   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3811   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3839   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3874   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3909   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3944   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3979   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:3986   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4055   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4062   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4129   .text.HAL_MultiProcessor_DisableMuteMode:00000050 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4134   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4141   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4178   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4185   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4264   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4271   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4350   .text.HAL_UART_GetState:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4357   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4412   .text.HAL_UART_GetError:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4419   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4451   .text.UART_SetConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:4997   .text.UART_SetConfig:00000340 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5012   .text.UART_SetConfig:00000374 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5143   .text.UART_SetConfig:0000043c $d
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s 			page 171


C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5148   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5371   .text.UART_AdvFeatureConfig:00000144 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5384   .text.UART_CheckIdleState:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5521   .text.UART_CheckIdleState:000000ac $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5529   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5648   .text.UART_WaitOnFlagUntilTimeout:00000094 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5653   .text.UART_EndTxTransfer:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5701   .text.UART_EndRxTransfer:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5757   .text.UART_EndRxTransfer:00000038 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5762   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5839   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5881   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5968   .text.UART_DMAReceiveCplt:0000006c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:5973   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6015   .text.UART_DMAError:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6116   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6168   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6264   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6360   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6412   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6469   .text.UART_Transmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6615   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6670   .text.UART_Receive_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccTvIOXm.s:6850   .text.UART_Receive_IT:000000f0 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
